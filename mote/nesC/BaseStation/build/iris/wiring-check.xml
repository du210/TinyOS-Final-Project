<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404b2090"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403a6188"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403a6188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403a7a30"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404b1180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4053aa58"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4053aa58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405728c0"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404bba38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c48ea8"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c48ea8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c893a8"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x404f5400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c457c0"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c457c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c41180"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x404ff8d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c44190"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c44190"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c418c0"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x404fca68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c444e8"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c444e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c40850"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x4050b930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c44bd8"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c44bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c41be8"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x404ba950"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4055d340"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4055d340"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4057f1b0"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x404fa3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4055dd00"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4055dd00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4057fb70"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x404faaa8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4055b3e0"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4055b3e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4057e238"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x404fae90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40568e70"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40568e70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4057da48"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x4050c640"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4055a588"/></to>
    </wire>
    <wire loc="73:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4055a588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057b1a8"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40510298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40539090"/></to>
    </wire>
    <wire loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40539090"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40546730"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40dbf5c8"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40dbb110"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d6ae68"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c89010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411fa3e0"/></to>
    </wire>
    <wire loc="119:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a1cb18"/></to>
    </wire>
    <wire loc="52:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097e8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x41168988"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40814e70"/></to>
    </wire>
    <wire loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407a5580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410e8708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4105fcb8"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403a7dc8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4049c400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40ac4030"/></to>
    </wire>
    <wire loc="122:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4049c400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a1c4b8"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4049c400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403a8ef0"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403a8ef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403ae168"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049c808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b0ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e4d440"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b0ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bcc480"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b0760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40495010"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403ae950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4048abf8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ae548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40551998"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ae548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403aa9d0"/></to>
    </wire>
    <wire loc="23:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403aa9d0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403b59d0"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403aada0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403b0ec0"/></to>
    </wire>
    <wire loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403b8f18"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403c6210"/></to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403c6210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40410330"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403bc920"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403aada0"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403db4b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404660b0"/></to>
    </wire>
    <wire loc="165:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403cda28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40421090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40421090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1c7f8"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403d90a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042dd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042dd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f877f8"/></to>
    </wire>
    <wire loc="185:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403de210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fbe538"/></to>
    </wire>
    <wire loc="196:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x403e2a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40470880"/></to>
    </wire>
    <wire loc="143:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403c5670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e786c0"/></to>
    </wire>
    <wire loc="183:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403d6ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404314f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404314f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f89010"/></to>
    </wire>
    <wire loc="146:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403c4a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404145a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404145a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eb6538"/></to>
    </wire>
    <wire loc="157:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403c7210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee77f8"/></to>
    </wire>
    <wire loc="168:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403d58e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042ad68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042ad68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f4e6c0"/></to>
    </wire>
    <wire loc="179:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403d8ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f826c0"/></to>
    </wire>
    <wire loc="138:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403be2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404086b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404086b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e813b0"/></to>
    </wire>
    <wire loc="149:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403c28e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40412250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40412250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eb1538"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403cf0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f176c0"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403d3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40427ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40427ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f49538"/></to>
    </wire>
    <wire loc="188:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403dc0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4043a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4043a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fb9538"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403e3590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046a880"/></to>
    </wire>
    <wire loc="174:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403d2c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042ea80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f533b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40410330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7c228"/></to>
    </wire>
    <wire loc="152:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403ca830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041bf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee2538"/></to>
    </wire>
    <wire loc="192:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403e40c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40463880"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403c9ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40417e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40417e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eea418"/></to>
    </wire>
    <wire loc="166:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403cc4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404219e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404219e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1a228"/></to>
    </wire>
    <wire loc="177:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403d9a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042c790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042c790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f85228"/></to>
    </wire>
    <wire loc="186:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403dec08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4043b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4043b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fbc010"/></to>
    </wire>
    <wire loc="144:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403c40a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ead0b0"/></to>
    </wire>
    <wire loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403c34b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40414ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40414ef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eb4010"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403c7c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee5228"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403d42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40429790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40429790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f4c0b0"/></to>
    </wire>
    <wire loc="180:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403d78e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404364f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404364f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f800b0"/></to>
    </wire>
    <wire loc="139:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403bece8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40411030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40411030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e80d70"/></to>
    </wire>
    <wire loc="150:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403cb2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40412ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40412ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eaf010"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403cfa98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f150b0"/></to>
    </wire>
    <wire loc="189:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403dca98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4043ae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4043ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fb7010"/></to>
    </wire>
    <wire loc="164:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403ceea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404226f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404226f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f21de8"/></to>
    </wire>
    <wire loc="175:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403da670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042d410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042d410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f52d70"/></to>
    </wire>
    <wire loc="184:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403df750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40431e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40431e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc09e8"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403e2010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404720b0"/></to>
    </wire>
    <wire loc="142:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403c6c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40410c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40410c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7bc08"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403c92f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041a890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041a890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee0010"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403d62f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40432b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40432b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8b538"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403c8750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4041f7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4041f7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee9de0"/></to>
    </wire>
    <wire loc="167:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403ccea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042a410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042a410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f50c08"/></to>
    </wire>
    <wire loc="178:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403d84b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4042b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4042b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f84c08"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403dd670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4043bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4043bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fbb9e8"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403b48c8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40409cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40409cc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e83978"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403c3ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40413860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40413860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eb39e8"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403d0670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee4c08"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403d4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40427170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40427170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f4ba88"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403e4ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046c0b0"/></to>
    </wire>
    <wire loc="173:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403d2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042e128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042e128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f55938"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403ce4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40425170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40425170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f14a88"/></to>
    </wire>
    <wire loc="140:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403bd750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40411988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40411988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7e7f8"/></to>
    </wire>
    <wire loc="151:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403cbd68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041b5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eae9e8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40868f20"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x4050eba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x4051b3f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40551998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405463e8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40545408"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40548ab8"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40548ab8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403bece8"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40545df0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405525a0"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405525a0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403be2f0"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40544820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40551010"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40551010"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403b48c8"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405728c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40589710"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40568b18"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4057e8b0"/></to>
    </wire>
    <wire loc="84:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4057e8b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40595778"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4057da48"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40593618"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4057f1b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40596010"/></to>
    </wire>
    <wire loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4057e238"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40595100"/></to>
    </wire>
    <wire loc="76:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405704f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4057a400"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4057a400"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40599e48"/></to>
    </wire>
    <wire loc="82:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4057fb70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405969d0"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405657b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057be60"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057be60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405998c0"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4056cdf0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4057aa20"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4057aa20"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405a7498"/></to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4057b1a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405948e8"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40569800"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x405791d0"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405791d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x405a7bb0"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40566178"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40590010"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40590010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405acec8"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4056bb30"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058c9d8"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058c9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a9a08"/></to>
    </wire>
    <wire loc="215:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40589710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408fbe28"/></to>
    </wire>
    <wire loc="99:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40583110"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405aeb60"/></to>
    </wire>
    <wire loc="305:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405aeb60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a0c510"/></to>
    </wire>
    <wire loc="270:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a9a08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409bd428"/></to>
    </wire>
    <wire loc="124:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40595778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406a0108"/></to>
    </wire>
    <wire loc="126:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40593618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406a3a80"/></to>
    </wire>
    <wire loc="121:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40596010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406a21e8"/></to>
    </wire>
    <wire loc="123:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40595100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406a2d08"/></to>
    </wire>
    <wire loc="98:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40588d70"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405b07f0"/></to>
    </wire>
    <wire loc="303:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405b07f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a0e190"/></to>
    </wire>
    <wire loc="216:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40599e48"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4090c3f0"/></to>
    </wire>
    <wire loc="122:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405969d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406a2928"/></to>
    </wire>
    <wire loc="269:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405acec8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f3bd0"/></to>
    </wire>
    <wire loc="102:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4058e3e8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ac330"/></to>
    </wire>
    <wire loc="307:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ac330"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a29508"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40585940"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a1368"/></to>
    </wire>
    <wire loc="304:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a1368"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0ad60"/></to>
    </wire>
    <wire loc="248:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405998c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40990c10"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x4057d010"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40595e78"/></to>
    </wire>
    <wire loc="128:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40595e78"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406a04e8"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405a7498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40900648"/></to>
    </wire>
    <wire loc="125:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405948e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406a4e90"/></to>
    </wire>
    <wire loc="224:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405a7bb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40924df8"/></to>
    </wire>
    <wire loc="100:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4058d228"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405addf0"/></to>
    </wire>
    <wire loc="306:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405addf0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a29010"/></to>
    </wire>
    <wire loc="87:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x4057d6f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40594578"/></to>
    </wire>
    <wire loc="129:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40594578"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406a08c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408fbe28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4090c9f8"/></to>
    </wire>
    <wire loc="88:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a0c510"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a3a240"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40592a58"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406ea808"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x405911d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406b78c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x406b78c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4105b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406a0108"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x410517b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x406a21e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41052880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Snoop" scoped="" ref="0x406a2d08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x410513f0"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x405a25b8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407804f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407804f0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x410996b0"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40599148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406eb6d8"/></to>
    </wire>
    <wire loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a0e190"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1aec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4090c3f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4116c060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x406a3a80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41052150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x406a2928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41051010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f3bd0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4119bca8"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a29508"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9b48"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0ad60"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a37aa0"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x4059de60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x406ebd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406a04e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x41051b90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketLink" scoped="" ref="0x40900648"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x410d5150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40924df8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41167568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x406a4e90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410534d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409bd428"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4119c4f0"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40592608"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x406ea4f0"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a29010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a36d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406a08c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x41050010"/></to>
    </wire>
    <wire loc="102:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405e5598"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40782a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40782a58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x410a0bc0"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405e2b30"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406166e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x405e3800"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f3bd0"/></to>
    </wire>
    <wire loc="105:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x405dede0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a0f7d0"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a0f7d0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a1a520"/></to>
    </wire>
    <wire loc="110:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40615010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a27010"/></to>
    </wire>
    <wire loc="100:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a27010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40aca030"/></to>
    </wire>
    <wire loc="116:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4069fc40"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405d2c08"/></to>
    </wire>
    <wire loc="117:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4069f410"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x406ae948"/></to>
    </wire>
    <wire loc="118:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4069f908"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x4070ab78"/></to>
    </wire>
    <wire loc="119:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406a0c40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x4070aeb0"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406ad370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406b78c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406aee70"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x4070a680"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406eab50"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40782a58"/></to>
    </wire>
    <wire loc="154:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40710d68"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4070b668"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4070f330"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4070bb60"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407105d0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4070be98"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4072f6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40793760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40793760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410ebd90"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4072fba8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40900330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40900330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408ffa18"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4072fee0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40780f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40780f08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41098150"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4077f6e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40900ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40900ce0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x410d57e8"/></to>
    </wire>
    <wire loc="181:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407bd9b0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405ba6f0"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407bd0a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407badf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x407badf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410d9ba8"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408fe4d8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40990c10"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408ff520"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40912450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40912450"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4090b010"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408ffa18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40912948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40912948"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4090b508"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408ffd50"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40912c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40912c60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4090b840"/></to>
    </wire>
    <wire loc="211:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4090c9f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40924010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40924010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411683b0"/></to>
    </wire>
    <wire loc="212:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4090b010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409245e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x409245e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41168cc0"/></to>
    </wire>
    <wire loc="213:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4090b508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40924ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40924ae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41167250"/></to>
    </wire>
    <wire loc="214:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4090b840"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f0270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409f0270"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41198330"/></to>
    </wire>
    <wire loc="221:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40945ab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40962788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40962788"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x411863b8"/></to>
    </wire>
    <wire loc="222:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40944010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40793c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40793c38"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x410e8310"/></to>
    </wire>
    <wire loc="223:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40945340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409f9be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409f9be0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40a17a80"/></to>
    </wire>
    <wire loc="228:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407bd598"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40962c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40962c60"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41186890"/></to>
    </wire>
    <wire loc="237:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097b090"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405c7548"/></to>
    </wire>
    <wire loc="238:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409610c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40990340"/></to>
    </wire>
    <wire loc="239:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409615b8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40990818"/></to>
    </wire>
    <wire loc="240:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409619b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406166e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40995ac8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4098ea90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406166e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40995170"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405b3010"/></to>
    </wire>
    <wire loc="253:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4098e1a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a5620"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a5620"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409c24f0"/></to>
    </wire>
    <wire loc="254:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4098e698"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a5af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a5af8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409c29e8"/></to>
    </wire>
    <wire loc="259:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409c19e8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405c2be8"/></to>
    </wire>
    <wire loc="260:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c24f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409f83f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409f83f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a16330"/></to>
    </wire>
    <wire loc="261:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409c29e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409f88c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409f88c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a16828"/></to>
    </wire>
    <wire loc="262:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409c2e00"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a0f368"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a0f368"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a1a0b8"/></to>
    </wire>
    <wire loc="267:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f0ac8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a29508"/></to>
    </wire>
    <wire loc="268:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409ef358"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409ecce0"/></to>
    </wire>
    <wire loc="271:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409efaf0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409eb520"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a0f7d0"/></to>
    </wire>
    <wire loc="286:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a15828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405c2be8"/></to>
    </wire>
    <wire loc="287:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a16330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a109b0"/></to>
    </wire>
    <wire loc="76:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a109b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a1b6c0"/></to>
    </wire>
    <wire loc="288:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a16828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a10f08"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a10f08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a1bc18"/></to>
    </wire>
    <wire loc="289:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40a17a80"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a101d8"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a101d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a1ce98"/></to>
    </wire>
    <wire loc="301:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a26ac8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x405b19e0"/></to>
    </wire>
    <wire loc="302:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a25480"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f3bd0"/></to>
    </wire>
    <wire loc="309:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a24ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a223f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a22ab0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a210e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406166e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x406166e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x410260c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x410268c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40615010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41023258"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40641040"/></to>
    </wire>
    <wire loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <from><interface-ref name="tasklet" scoped="" ref="0x40641bd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4104fc40"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4069a428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x41050388"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x406a0c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41050b20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4069f410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x4104f030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4069f908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x4104f368"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4069fc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x406b6030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4105b750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406b6438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4105bb58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4105a030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406b68e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4105a458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4105d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4105aa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410988f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4069a428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x41098ed0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4077f6e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x410e79c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407a8990"/></to>
    </wire>
    <wire loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x407a8990"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407a5918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410e6070"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410e44c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410e44c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407a23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x410e8a70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407bd0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x410e7010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407bd598"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x410e7408"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x407bd9b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x410d4010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408ff520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x410d44e8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408fe4d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x4110fc50"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408ffd50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x410d4a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4110d9e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4110d9e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407fd618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="send" scoped="" ref="0x4110e430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407fd618"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40811648"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40811648"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408bf600"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40814e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4080a090"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4080e980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408ee0a0"/></to>
    </wire>
    <wire loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4080a090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408a6418"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x408f3968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4080b720"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408c5a48"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4080a658"/></to>
    </wire>
    <wire loc="36:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4080a658"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408a6850"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408eea38"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x408200c0"/></to>
    </wire>
    <wire loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x408200c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408a3340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x408a3340"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4112a790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x408a6418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4112d8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x408a6850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4112dd18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41128950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4085b550"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4085b550"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4086d5f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41126b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40874878"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40874878"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4086a8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41125580"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40873418"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40873418"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40869418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41122010"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40871010"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40871010"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40882398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x408c34d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x408f0bc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x41167a70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40945340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41166230"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40641040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x411667e8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40945ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41166cc0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40944010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x411645c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41164a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x41164190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41186cd8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409610c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x41184170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4097b090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x41185250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409615b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x41185648"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409619b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x41185ce0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097cc68"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4097cc68"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097a6e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x41184768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4097c3a8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4097ee08"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4097f188"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097e8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x409af0e8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409c4e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409a5ef0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409c2e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409afe90"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409c3c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409c4300"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409c1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c4a98"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409c19e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x409afb78"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409c3908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x409af6a0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409c3410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x41196430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409ef358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41197200"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f0ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x41197b08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409f4010"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409f4010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4080e980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41198af8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409efaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x409fadf0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a18c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409f8cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40a16c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a18150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a15090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a188e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a15828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x409f98c8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40a17748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x409f93f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40a17250"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40aca030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ba9c88"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0b8e8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a39628"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9b48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bf7580"/></to>
    </wire>
    <wire loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a2e448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a26ac8"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a2ec18"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a24ca0"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a4d310"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a223f0"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a4d9d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a22ab0"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4c1f8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a25480"/></to>
    </wire>
    <wire loc="98:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a31ac8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9b48"/></to>
    </wire>
    <wire loc="101:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a49010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a210e0"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a34140"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40aabb10"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40aabb10"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c4a98"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a34be0"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40acd5b8"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40acd5b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad2c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a2f2b8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40acdcc0"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40acdcc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40adae58"/></to>
    </wire>
    <wire loc="107:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a2f930"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40acc3d0"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40acc3d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403c92f0"/></to>
    </wire>
    <wire loc="108:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a323c0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40accdb8"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40accdb8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403c5670"/></to>
    </wire>
    <wire loc="110:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a2c4d0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40acb820"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40acb820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ac7988"/></to>
    </wire>
    <wire loc="111:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a4b9c8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40641040"/></to>
    </wire>
    <wire loc="112:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a31010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40c1b010"/></to>
    </wire>
    <wire loc="847:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a869e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40ba9c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411e0ac0"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40adae58"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ad1520"/></to>
    </wire>
    <wire loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bf7580"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bf8f18"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40ac2420"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403d4ce8"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40ac2e20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403d58e0"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40abf660"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b65968"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b65968"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b550f0"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40ad2500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40ad1b38"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40adaab0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40ad1198"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ac6da0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ad8d90"/></to>
    </wire>
    <wire loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ad2c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad02a8"/></to>
    </wire>
    <wire loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40ace100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b49b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b49b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411f8710"/></to>
    </wire>
    <wire loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ace808"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b476d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b476d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411f7270"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ae53d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40ad4e50"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40ad4e50"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b251e8"/></to>
    </wire>
    <wire loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40acec88"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="241:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40af61e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b20898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b23010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c4a98"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b239e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403c34b0"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b224a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403c3ea8"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b22e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403c28e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b472c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411f8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411f7730"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b47b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x411f7b58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x411fa718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x411f6190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b60c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b563c8"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b41230"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b590e0"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b5fc10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b7a010"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b5fc10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b79c08"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b5fc10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b76830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x411de548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b41230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x411db7e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b5fc10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bcc868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b41230"/></to>
    </wire>
    <wire loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c208c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c0ae60"/></to>
    </wire>
    <wire loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40bf90e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bf3698"/></to>
    </wire>
    <wire loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bf3698"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40beee90"/></to>
    </wire>
    <wire loc="32:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40be3078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b41230"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c893a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c9e3d8"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c43930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c40ee8"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c89010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c9e040"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c83e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c43e68"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c8d430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c88288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c8dae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c89c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c83978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40e73738"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c88288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d0ca90"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c89c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d0c6d0"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40d30238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c83978"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c987b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c83e80"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d5e230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c83e80"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d58260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c83e80"/></to>
    </wire>
    <wire loc="74:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d30720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c97c50"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40d30bf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40c99b00"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40c93f10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40d5c6b8"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40cbb4d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d73168"/></to>
    </wire>
    <wire loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d73168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d6fe98"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d52990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d735e8"/></to>
    </wire>
    <wire loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d735e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d6e7d8"/></to>
    </wire>
    <wire loc="328:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40ce81e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40cada18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40ce9010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40ce7e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40d5ee48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40d5d2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d6f488"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d6e358"/></to>
    </wire>
    <wire loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d6e358"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d695c8"/></to>
    </wire>
    <wire loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d6e7d8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d699e0"/></to>
    </wire>
    <wire loc="50:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d6fe98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d691b0"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d6d270"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40de83c0"/></to>
    </wire>
    <wire loc="33:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40de83c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40de5a10"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40da28b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d6d270"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40da3350"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40dc3338"/></to>
    </wire>
    <wire loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40dc3338"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40dbfa18"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40da3788"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40dc3848"/></to>
    </wire>
    <wire loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40dc3848"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40dbc010"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40da3bc0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40dc3d40"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40dc3d40"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40dbc528"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40dc0390"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40dba010"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40dc2968"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40dbb560"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40dc2e78"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40dbba90"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40dbabc0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b0760"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40db93b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="34:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e43cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40de7df0"/></to>
    </wire>
    <wire loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40de7df0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e50a68"/></to>
    </wire>
    <wire loc="32:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e4fc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40de3790"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40de3790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e06010"/></to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40ddeb00"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e04370"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ddd888"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e03078"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e0ca30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e00010"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e0ca30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40dffc08"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e0ca30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40dfc830"/></to>
    </wire>
    <wire loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e4d828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40de3790"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="33(HplAtm128GeneralIOC.G5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RF230RadioC.PacketLinkLayerC.PacketLinkLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RF230RadioC.PacketLinkLayerC.DelayTimerC):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4081dc90"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40380010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40380010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403805e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403e0870" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403e0a88" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403e0ca0" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403ebc78" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403ebea0" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f10e0" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403f12d0" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40440088" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404402b0" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404404d8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404406c8" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406b8720" loc="83:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x406b3670" loc="42:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4081dc90" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4081dc90"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4081de50" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4082d010" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4082d010"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4082d1d0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408a0328" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408a0328"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408c1840" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408c1840"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x408c1a20" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408ec010" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408ec010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40bcdc40" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bcdc40"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40bcde60" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40ba6940" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40ba6940"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40ba6d88" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40ba6d88"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40bbf010" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bef490" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bef490"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bef8d8" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bef8d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40c085e0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40c085e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40c08a40" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40c08a40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40c08ca8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40c08ca8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40c07148" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40c07148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40c073b0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40c07838" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40c07838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403a6db8" loc="58:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403a6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403a6188" loc="57:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a6360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403b0ec0" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403b0ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ab0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403a8ef0" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403a8ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403b0760" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403b0938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403b0a18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403b0af8"/>
        <function-ref name="actualMicro" scoped="" ref="0x403b0bd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403b0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403ae548" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403ae548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ae720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403ae168" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403ae168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ae340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403ae950" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403ae950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403aeb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403aada0" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403aada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403aa9d0" loc="17:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403aa9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403aaba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403bc920" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403bc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bcaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403b8f18" loc="21:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403b8f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bc108"/>
        <function-ref name="isInput" scoped="" ref="0x403bc1e8"/>
        <function-ref name="toggle" scoped="" ref="0x403bc2c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bc3a8"/>
        <function-ref name="get" scoped="" ref="0x403bc488"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc568"/>
        <function-ref name="set" scoped="" ref="0x403bc648"/>
        <function-ref name="clr" scoped="" ref="0x403bc728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403b59d0" loc="20:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403b59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403db4b0" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db888"/>
        <function-ref name="isInput" scoped="" ref="0x403db968"/>
        <function-ref name="toggle" scoped="" ref="0x403dba48"/>
        <function-ref name="isOutput" scoped="" ref="0x403dbb28"/>
        <function-ref name="get" scoped="" ref="0x403dbc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dbce8"/>
        <function-ref name="set" scoped="" ref="0x403dbdc8"/>
        <function-ref name="clr" scoped="" ref="0x403dbea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403cda28" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403cda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cdc00"/>
        <function-ref name="isInput" scoped="" ref="0x403cdce0"/>
        <function-ref name="toggle" scoped="" ref="0x403cddc0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cdea0"/>
        <function-ref name="get" scoped="" ref="0x403cc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc0f0"/>
        <function-ref name="set" scoped="" ref="0x403cc1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403d90a0" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403d90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9278"/>
        <function-ref name="isInput" scoped="" ref="0x403d9358"/>
        <function-ref name="toggle" scoped="" ref="0x403d9438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9518"/>
        <function-ref name="get" scoped="" ref="0x403d95f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d96d8"/>
        <function-ref name="set" scoped="" ref="0x403d97b8"/>
        <function-ref name="clr" scoped="" ref="0x403d9898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403de210" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403de210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403de4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403de5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403de688"/>
        <function-ref name="get" scoped="" ref="0x403de768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de848"/>
        <function-ref name="set" scoped="" ref="0x403de928"/>
        <function-ref name="clr" scoped="" ref="0x403dea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x403e2a08" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x403e2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2be0"/>
        <function-ref name="isInput" scoped="" ref="0x403e2cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403e2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2e80"/>
        <function-ref name="get" scoped="" ref="0x403e1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e10f0"/>
        <function-ref name="set" scoped="" ref="0x403e11d0"/>
        <function-ref name="clr" scoped="" ref="0x403e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403c5670" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c5848"/>
        <function-ref name="isInput" scoped="" ref="0x403c5928"/>
        <function-ref name="toggle" scoped="" ref="0x403c5a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5ae8"/>
        <function-ref name="get" scoped="" ref="0x403c5bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c5ca8"/>
        <function-ref name="set" scoped="" ref="0x403c5d88"/>
        <function-ref name="clr" scoped="" ref="0x403c5e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403d6ce8" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403d6ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403df010"/>
        <function-ref name="toggle" scoped="" ref="0x403df0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403df1d0"/>
        <function-ref name="get" scoped="" ref="0x403df2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df390"/>
        <function-ref name="set" scoped="" ref="0x403df470"/>
        <function-ref name="clr" scoped="" ref="0x403df550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403c4a98" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403c4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4c70"/>
        <function-ref name="isInput" scoped="" ref="0x403c4d50"/>
        <function-ref name="toggle" scoped="" ref="0x403c4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4f10"/>
        <function-ref name="get" scoped="" ref="0x403c3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c30f0"/>
        <function-ref name="set" scoped="" ref="0x403c31d0"/>
        <function-ref name="clr" scoped="" ref="0x403c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403c7210" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403c7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c73e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c74c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c75a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7688"/>
        <function-ref name="get" scoped="" ref="0x403c7768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7848"/>
        <function-ref name="set" scoped="" ref="0x403c7928"/>
        <function-ref name="clr" scoped="" ref="0x403c7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403d58e0" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403d58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d5b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5d58"/>
        <function-ref name="get" scoped="" ref="0x403d5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5f18"/>
        <function-ref name="set" scoped="" ref="0x403d4010"/>
        <function-ref name="clr" scoped="" ref="0x403d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403d8ea8" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403d8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d70c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d71a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d7280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7360"/>
        <function-ref name="get" scoped="" ref="0x403d7440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7520"/>
        <function-ref name="set" scoped="" ref="0x403d7600"/>
        <function-ref name="clr" scoped="" ref="0x403d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403be2f0" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403be4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403be5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403be688"/>
        <function-ref name="isOutput" scoped="" ref="0x403be768"/>
        <function-ref name="get" scoped="" ref="0x403be848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be928"/>
        <function-ref name="set" scoped="" ref="0x403bea08"/>
        <function-ref name="clr" scoped="" ref="0x403beae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403c28e0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403c28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c2b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c2c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2d58"/>
        <function-ref name="get" scoped="" ref="0x403c2e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2f18"/>
        <function-ref name="set" scoped="" ref="0x403cb010"/>
        <function-ref name="clr" scoped="" ref="0x403cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403cf0a0" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403cf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cf278"/>
        <function-ref name="isInput" scoped="" ref="0x403cf358"/>
        <function-ref name="toggle" scoped="" ref="0x403cf438"/>
        <function-ref name="isOutput" scoped="" ref="0x403cf518"/>
        <function-ref name="get" scoped="" ref="0x403cf5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cf6d8"/>
        <function-ref name="set" scoped="" ref="0x403cf7b8"/>
        <function-ref name="clr" scoped="" ref="0x403cf898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403d3750" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403d3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3928"/>
        <function-ref name="isInput" scoped="" ref="0x403d3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3bc8"/>
        <function-ref name="get" scoped="" ref="0x403d3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3d88"/>
        <function-ref name="set" scoped="" ref="0x403d3e68"/>
        <function-ref name="clr" scoped="" ref="0x403d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403dc0a0" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403dc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc278"/>
        <function-ref name="isInput" scoped="" ref="0x403dc358"/>
        <function-ref name="toggle" scoped="" ref="0x403dc438"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc518"/>
        <function-ref name="get" scoped="" ref="0x403dc5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc6d8"/>
        <function-ref name="set" scoped="" ref="0x403dc7b8"/>
        <function-ref name="clr" scoped="" ref="0x403dc898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403e3590" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403e3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3768"/>
        <function-ref name="isInput" scoped="" ref="0x403e3848"/>
        <function-ref name="toggle" scoped="" ref="0x403e3928"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3a08"/>
        <function-ref name="get" scoped="" ref="0x403e3ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3bc8"/>
        <function-ref name="set" scoped="" ref="0x403e3ca8"/>
        <function-ref name="clr" scoped="" ref="0x403e3d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403d2c08" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403d2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403da010"/>
        <function-ref name="isOutput" scoped="" ref="0x403da0f0"/>
        <function-ref name="get" scoped="" ref="0x403da1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da2b0"/>
        <function-ref name="set" scoped="" ref="0x403da390"/>
        <function-ref name="clr" scoped="" ref="0x403da470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403c6210" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403c6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c63e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c64c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c65a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6688"/>
        <function-ref name="get" scoped="" ref="0x403c6768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c6848"/>
        <function-ref name="set" scoped="" ref="0x403c6928"/>
        <function-ref name="clr" scoped="" ref="0x403c6a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403ca830" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403ca830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403caa08"/>
        <function-ref name="isInput" scoped="" ref="0x403caae8"/>
        <function-ref name="toggle" scoped="" ref="0x403cabc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403caca8"/>
        <function-ref name="get" scoped="" ref="0x403cad88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cae68"/>
        <function-ref name="set" scoped="" ref="0x403c9010"/>
        <function-ref name="clr" scoped="" ref="0x403c90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403e40c0" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403e40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4298"/>
        <function-ref name="isInput" scoped="" ref="0x403e4378"/>
        <function-ref name="toggle" scoped="" ref="0x403e4458"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4538"/>
        <function-ref name="get" scoped="" ref="0x403e4618"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e46f8"/>
        <function-ref name="set" scoped="" ref="0x403e47d8"/>
        <function-ref name="clr" scoped="" ref="0x403e48b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403c9ce8" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403c9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c8010"/>
        <function-ref name="toggle" scoped="" ref="0x403c80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c81d0"/>
        <function-ref name="get" scoped="" ref="0x403c82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8390"/>
        <function-ref name="set" scoped="" ref="0x403c8470"/>
        <function-ref name="clr" scoped="" ref="0x403c8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403cc4b0" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403cc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc688"/>
        <function-ref name="isInput" scoped="" ref="0x403cc768"/>
        <function-ref name="toggle" scoped="" ref="0x403cc848"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc928"/>
        <function-ref name="get" scoped="" ref="0x403cca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ccae8"/>
        <function-ref name="set" scoped="" ref="0x403ccbc8"/>
        <function-ref name="clr" scoped="" ref="0x403ccca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403d9a98" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403d9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d9d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d9e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9f10"/>
        <function-ref name="get" scoped="" ref="0x403d8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d80f0"/>
        <function-ref name="set" scoped="" ref="0x403d81d0"/>
        <function-ref name="clr" scoped="" ref="0x403d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403dec08" loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403dec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dede0"/>
        <function-ref name="isInput" scoped="" ref="0x403deec0"/>
        <function-ref name="toggle" scoped="" ref="0x403dd010"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd0f0"/>
        <function-ref name="get" scoped="" ref="0x403dd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd2b0"/>
        <function-ref name="set" scoped="" ref="0x403dd390"/>
        <function-ref name="clr" scoped="" ref="0x403dd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403c40a0" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403c40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4278"/>
        <function-ref name="isInput" scoped="" ref="0x403c4358"/>
        <function-ref name="toggle" scoped="" ref="0x403c4438"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4518"/>
        <function-ref name="get" scoped="" ref="0x403c45f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c46d8"/>
        <function-ref name="set" scoped="" ref="0x403c47b8"/>
        <function-ref name="clr" scoped="" ref="0x403c4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403c34b0" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403c34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3688"/>
        <function-ref name="isInput" scoped="" ref="0x403c3768"/>
        <function-ref name="toggle" scoped="" ref="0x403c3848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3928"/>
        <function-ref name="get" scoped="" ref="0x403c3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3ae8"/>
        <function-ref name="set" scoped="" ref="0x403c3bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403c7c08" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403c7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c7de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d0010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d00f0"/>
        <function-ref name="get" scoped="" ref="0x403d01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d02b0"/>
        <function-ref name="set" scoped="" ref="0x403d0390"/>
        <function-ref name="clr" scoped="" ref="0x403d0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403d42f0" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d44c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d45a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d4688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4768"/>
        <function-ref name="get" scoped="" ref="0x403d4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4928"/>
        <function-ref name="set" scoped="" ref="0x403d4a08"/>
        <function-ref name="clr" scoped="" ref="0x403d4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403d78e0" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403d78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d7b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d7c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7d58"/>
        <function-ref name="get" scoped="" ref="0x403d7e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7f18"/>
        <function-ref name="set" scoped="" ref="0x403d6010"/>
        <function-ref name="clr" scoped="" ref="0x403d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403bece8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403bece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403beec0"/>
        <function-ref name="isInput" scoped="" ref="0x403bd010"/>
        <function-ref name="toggle" scoped="" ref="0x403bd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd1d0"/>
        <function-ref name="get" scoped="" ref="0x403bd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd390"/>
        <function-ref name="set" scoped="" ref="0x403bd470"/>
        <function-ref name="clr" scoped="" ref="0x403bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403cb2f0" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb548"/>
        <function-ref name="isInput" scoped="" ref="0x403cb628"/>
        <function-ref name="toggle" scoped="" ref="0x403cb708"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb7e8"/>
        <function-ref name="get" scoped="" ref="0x403cb8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb9a8"/>
        <function-ref name="set" scoped="" ref="0x403cba88"/>
        <function-ref name="clr" scoped="" ref="0x403cbb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403cfa98" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403cfa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cfc70"/>
        <function-ref name="isInput" scoped="" ref="0x403cfd50"/>
        <function-ref name="toggle" scoped="" ref="0x403cfe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403cff10"/>
        <function-ref name="get" scoped="" ref="0x403ce010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ce0f0"/>
        <function-ref name="set" scoped="" ref="0x403ce1d0"/>
        <function-ref name="clr" scoped="" ref="0x403ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403dca98" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403dca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dcc70"/>
        <function-ref name="isInput" scoped="" ref="0x403dcd50"/>
        <function-ref name="toggle" scoped="" ref="0x403dce30"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcf10"/>
        <function-ref name="get" scoped="" ref="0x403db010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db0f0"/>
        <function-ref name="set" scoped="" ref="0x403db1d0"/>
        <function-ref name="clr" scoped="" ref="0x403db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403ceea8" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403ceea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd208"/>
        <function-ref name="isInput" scoped="" ref="0x403cd2e8"/>
        <function-ref name="toggle" scoped="" ref="0x403cd3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd4a8"/>
        <function-ref name="get" scoped="" ref="0x403cd588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd668"/>
        <function-ref name="set" scoped="" ref="0x403cd748"/>
        <function-ref name="clr" scoped="" ref="0x403cd828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403da670" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da848"/>
        <function-ref name="isInput" scoped="" ref="0x403da928"/>
        <function-ref name="toggle" scoped="" ref="0x403daa08"/>
        <function-ref name="isOutput" scoped="" ref="0x403daae8"/>
        <function-ref name="get" scoped="" ref="0x403dabc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daca8"/>
        <function-ref name="set" scoped="" ref="0x403dad88"/>
        <function-ref name="clr" scoped="" ref="0x403dae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403df750" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df928"/>
        <function-ref name="isInput" scoped="" ref="0x403dfa08"/>
        <function-ref name="toggle" scoped="" ref="0x403dfae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dfbc8"/>
        <function-ref name="get" scoped="" ref="0x403dfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dfd88"/>
        <function-ref name="set" scoped="" ref="0x403dfe68"/>
        <function-ref name="clr" scoped="" ref="0x403de010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403e2010" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e21e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e22c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2488"/>
        <function-ref name="get" scoped="" ref="0x403e2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2648"/>
        <function-ref name="set" scoped="" ref="0x403e2728"/>
        <function-ref name="clr" scoped="" ref="0x403e2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403c6c08" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403c6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c6de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403c5010"/>
        <function-ref name="isOutput" scoped="" ref="0x403c50f0"/>
        <function-ref name="get" scoped="" ref="0x403c51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c52b0"/>
        <function-ref name="set" scoped="" ref="0x403c5390"/>
        <function-ref name="clr" scoped="" ref="0x403c5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403c92f0" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c94c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c95a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c9688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9768"/>
        <function-ref name="get" scoped="" ref="0x403c9848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9928"/>
        <function-ref name="set" scoped="" ref="0x403c9a08"/>
        <function-ref name="clr" scoped="" ref="0x403c9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403d62f0" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d64c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d65a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d6688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6768"/>
        <function-ref name="get" scoped="" ref="0x403d6848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6928"/>
        <function-ref name="set" scoped="" ref="0x403d6a08"/>
        <function-ref name="clr" scoped="" ref="0x403d6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403c8750" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403c8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8928"/>
        <function-ref name="isInput" scoped="" ref="0x403c8a08"/>
        <function-ref name="toggle" scoped="" ref="0x403c8ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8bc8"/>
        <function-ref name="get" scoped="" ref="0x403c8ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8d88"/>
        <function-ref name="set" scoped="" ref="0x403c8e68"/>
        <function-ref name="clr" scoped="" ref="0x403c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403ccea8" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403ccea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d50c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d51a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d5280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5360"/>
        <function-ref name="get" scoped="" ref="0x403d5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5520"/>
        <function-ref name="set" scoped="" ref="0x403d5600"/>
        <function-ref name="clr" scoped="" ref="0x403d56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403d84b0" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403d84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8688"/>
        <function-ref name="isInput" scoped="" ref="0x403d8768"/>
        <function-ref name="toggle" scoped="" ref="0x403d8848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8928"/>
        <function-ref name="get" scoped="" ref="0x403d8a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8ae8"/>
        <function-ref name="set" scoped="" ref="0x403d8bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d8ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403dd670" loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd848"/>
        <function-ref name="isInput" scoped="" ref="0x403dd928"/>
        <function-ref name="toggle" scoped="" ref="0x403dda08"/>
        <function-ref name="isOutput" scoped="" ref="0x403ddae8"/>
        <function-ref name="get" scoped="" ref="0x403ddbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ddca8"/>
        <function-ref name="set" scoped="" ref="0x403ddd88"/>
        <function-ref name="clr" scoped="" ref="0x403dde68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403b48c8" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403b48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4aa0"/>
        <function-ref name="isInput" scoped="" ref="0x403b4b80"/>
        <function-ref name="toggle" scoped="" ref="0x403b4c60"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4d40"/>
        <function-ref name="get" scoped="" ref="0x403b4e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4f00"/>
        <function-ref name="set" scoped="" ref="0x403be010"/>
        <function-ref name="clr" scoped="" ref="0x403be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403c3ea8" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403c3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c20c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c21a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c2280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2360"/>
        <function-ref name="get" scoped="" ref="0x403c2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2520"/>
        <function-ref name="set" scoped="" ref="0x403c2600"/>
        <function-ref name="clr" scoped="" ref="0x403c26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403d0670" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0848"/>
        <function-ref name="isInput" scoped="" ref="0x403d0928"/>
        <function-ref name="toggle" scoped="" ref="0x403d0a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0ae8"/>
        <function-ref name="get" scoped="" ref="0x403d0bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0ca8"/>
        <function-ref name="set" scoped="" ref="0x403d0d88"/>
        <function-ref name="clr" scoped="" ref="0x403d0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403d4ce8" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403d4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d3010"/>
        <function-ref name="toggle" scoped="" ref="0x403d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d31d0"/>
        <function-ref name="get" scoped="" ref="0x403d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3390"/>
        <function-ref name="set" scoped="" ref="0x403d3470"/>
        <function-ref name="clr" scoped="" ref="0x403d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403e4ab8" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403e4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4c90"/>
        <function-ref name="isInput" scoped="" ref="0x403e4d70"/>
        <function-ref name="toggle" scoped="" ref="0x403e4e50"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3010"/>
        <function-ref name="get" scoped="" ref="0x403e30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e31d0"/>
        <function-ref name="set" scoped="" ref="0x403e32b0"/>
        <function-ref name="clr" scoped="" ref="0x403e3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403d2210" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403d2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d23e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d24c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d25a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2688"/>
        <function-ref name="get" scoped="" ref="0x403d2768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2848"/>
        <function-ref name="set" scoped="" ref="0x403d2928"/>
        <function-ref name="clr" scoped="" ref="0x403d2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403ce4b0" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403ce4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ce688"/>
        <function-ref name="isInput" scoped="" ref="0x403ce768"/>
        <function-ref name="toggle" scoped="" ref="0x403ce848"/>
        <function-ref name="isOutput" scoped="" ref="0x403ce928"/>
        <function-ref name="get" scoped="" ref="0x403cea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ceae8"/>
        <function-ref name="set" scoped="" ref="0x403cebc8"/>
        <function-ref name="clr" scoped="" ref="0x403ceca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403bd750" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403bd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd928"/>
        <function-ref name="isInput" scoped="" ref="0x403bda08"/>
        <function-ref name="toggle" scoped="" ref="0x403bdae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bdbc8"/>
        <function-ref name="get" scoped="" ref="0x403bdca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bdd88"/>
        <function-ref name="set" scoped="" ref="0x403bde68"/>
        <function-ref name="clr" scoped="" ref="0x403c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403cbd68" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403cbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca010"/>
        <function-ref name="isInput" scoped="" ref="0x403ca0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ca1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca2b0"/>
        <function-ref name="get" scoped="" ref="0x403ca390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca470"/>
        <function-ref name="set" scoped="" ref="0x403ca550"/>
        <function-ref name="clr" scoped="" ref="0x403ca630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40411030" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40411030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411208"/>
        <function-ref name="isInput" scoped="" ref="0x404112e8"/>
        <function-ref name="toggle" scoped="" ref="0x404113c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404114a8"/>
        <function-ref name="get" scoped="" ref="0x40411588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411668"/>
        <function-ref name="set" scoped="" ref="0x40411748"/>
        <function-ref name="clr" scoped="" ref="0x40411828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40410c88" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40410c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410e60"/>
        <function-ref name="isInput" scoped="" ref="0x4040f010"/>
        <function-ref name="toggle" scoped="" ref="0x4040f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f1d0"/>
        <function-ref name="get" scoped="" ref="0x4040f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f390"/>
        <function-ref name="set" scoped="" ref="0x4040f470"/>
        <function-ref name="clr" scoped="" ref="0x4040f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40409cc8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40409cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409ea0"/>
        <function-ref name="isInput" scoped="" ref="0x40408010"/>
        <function-ref name="toggle" scoped="" ref="0x404080f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404081d0"/>
        <function-ref name="get" scoped="" ref="0x404082b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408390"/>
        <function-ref name="set" scoped="" ref="0x40408470"/>
        <function-ref name="clr" scoped="" ref="0x40408550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40411988" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40411988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411b60"/>
        <function-ref name="isInput" scoped="" ref="0x40411c40"/>
        <function-ref name="toggle" scoped="" ref="0x40411d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40411e00"/>
        <function-ref name="get" scoped="" ref="0x40411ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410010"/>
        <function-ref name="set" scoped="" ref="0x404100f0"/>
        <function-ref name="clr" scoped="" ref="0x404101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040f6b0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f888"/>
        <function-ref name="isInput" scoped="" ref="0x4040f968"/>
        <function-ref name="toggle" scoped="" ref="0x4040fa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4040fb28"/>
        <function-ref name="get" scoped="" ref="0x4040fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fce8"/>
        <function-ref name="set" scoped="" ref="0x4040fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4040fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404086b0" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404086b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408888"/>
        <function-ref name="isInput" scoped="" ref="0x40408968"/>
        <function-ref name="toggle" scoped="" ref="0x40408a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40408b28"/>
        <function-ref name="get" scoped="" ref="0x40408c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408ce8"/>
        <function-ref name="set" scoped="" ref="0x40408dc8"/>
        <function-ref name="clr" scoped="" ref="0x40408ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40410330" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40410330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410508"/>
        <function-ref name="isInput" scoped="" ref="0x404105e8"/>
        <function-ref name="toggle" scoped="" ref="0x404106c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404107a8"/>
        <function-ref name="get" scoped="" ref="0x40410888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410968"/>
        <function-ref name="set" scoped="" ref="0x40410a48"/>
        <function-ref name="clr" scoped="" ref="0x40410b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040e030" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e208"/>
        <function-ref name="isInput" scoped="" ref="0x4040e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4040e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e4a8"/>
        <function-ref name="get" scoped="" ref="0x4040e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e668"/>
        <function-ref name="set" scoped="" ref="0x4040e748"/>
        <function-ref name="clr" scoped="" ref="0x4040e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e83978" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e83978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e83b50"/>
        <function-ref name="isInput" scoped="" ref="0x40e83c30"/>
        <function-ref name="toggle" scoped="" ref="0x40e83d10"/>
        <function-ref name="isOutput" scoped="" ref="0x40e83df0"/>
        <function-ref name="get" scoped="" ref="0x40e83ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e82010"/>
        <function-ref name="set" scoped="" ref="0x40e820f0"/>
        <function-ref name="clr" scoped="" ref="0x40e821d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e813b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e81588"/>
        <function-ref name="isInput" scoped="" ref="0x40e81668"/>
        <function-ref name="toggle" scoped="" ref="0x40e81748"/>
        <function-ref name="isOutput" scoped="" ref="0x40e81828"/>
        <function-ref name="get" scoped="" ref="0x40e81908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e819e8"/>
        <function-ref name="set" scoped="" ref="0x40e81ac8"/>
        <function-ref name="clr" scoped="" ref="0x40e81ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e80d70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e80d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7f010"/>
        <function-ref name="isInput" scoped="" ref="0x40e7f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e7f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e7f2b0"/>
        <function-ref name="get" scoped="" ref="0x40e7f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e7f470"/>
        <function-ref name="set" scoped="" ref="0x40e7f550"/>
        <function-ref name="clr" scoped="" ref="0x40e7f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7e7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e7eab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e7eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e7ec70"/>
        <function-ref name="get" scoped="" ref="0x40e7ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e7ee30"/>
        <function-ref name="set" scoped="" ref="0x40e7ef10"/>
        <function-ref name="clr" scoped="" ref="0x40e7d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7c228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7c400"/>
        <function-ref name="isInput" scoped="" ref="0x40e7c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e7c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e7c6a0"/>
        <function-ref name="get" scoped="" ref="0x40e7c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e7c860"/>
        <function-ref name="set" scoped="" ref="0x40e7c940"/>
        <function-ref name="clr" scoped="" ref="0x40e7ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7bc08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7bde0"/>
        <function-ref name="isInput" scoped="" ref="0x40e7bec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e79010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e790f0"/>
        <function-ref name="get" scoped="" ref="0x40e791d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e792b0"/>
        <function-ref name="set" scoped="" ref="0x40e79390"/>
        <function-ref name="clr" scoped="" ref="0x40e79470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e786c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e78898"/>
        <function-ref name="isInput" scoped="" ref="0x40e78978"/>
        <function-ref name="toggle" scoped="" ref="0x40e78a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e78b38"/>
        <function-ref name="get" scoped="" ref="0x40e78c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e78cf8"/>
        <function-ref name="set" scoped="" ref="0x40e78dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e78eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ead0b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ead0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ead288"/>
        <function-ref name="isInput" scoped="" ref="0x40ead368"/>
        <function-ref name="toggle" scoped="" ref="0x40ead448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ead528"/>
        <function-ref name="get" scoped="" ref="0x40ead608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ead6e8"/>
        <function-ref name="set" scoped="" ref="0x40ead7c8"/>
        <function-ref name="clr" scoped="" ref="0x40ead8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40413860" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40413860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413a38"/>
        <function-ref name="isInput" scoped="" ref="0x40413b18"/>
        <function-ref name="toggle" scoped="" ref="0x40413bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x40413cd8"/>
        <function-ref name="get" scoped="" ref="0x40413db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413e98"/>
        <function-ref name="set" scoped="" ref="0x40412010"/>
        <function-ref name="clr" scoped="" ref="0x404120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041b5d0" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4041b888"/>
        <function-ref name="toggle" scoped="" ref="0x4041b968"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ba48"/>
        <function-ref name="get" scoped="" ref="0x4041bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041bc08"/>
        <function-ref name="set" scoped="" ref="0x4041bce8"/>
        <function-ref name="clr" scoped="" ref="0x4041bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404145a0" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414778"/>
        <function-ref name="isInput" scoped="" ref="0x40414858"/>
        <function-ref name="toggle" scoped="" ref="0x40414938"/>
        <function-ref name="isOutput" scoped="" ref="0x40414a18"/>
        <function-ref name="get" scoped="" ref="0x40414af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414bd8"/>
        <function-ref name="set" scoped="" ref="0x40414cb8"/>
        <function-ref name="clr" scoped="" ref="0x40414d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40412250" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40412250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412428"/>
        <function-ref name="isInput" scoped="" ref="0x40412508"/>
        <function-ref name="toggle" scoped="" ref="0x404125e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404126c8"/>
        <function-ref name="get" scoped="" ref="0x404127a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412888"/>
        <function-ref name="set" scoped="" ref="0x40412968"/>
        <function-ref name="clr" scoped="" ref="0x40412a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041bf28" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a110"/>
        <function-ref name="isInput" scoped="" ref="0x4041a1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4041a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a3b0"/>
        <function-ref name="get" scoped="" ref="0x4041a490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a570"/>
        <function-ref name="set" scoped="" ref="0x4041a650"/>
        <function-ref name="clr" scoped="" ref="0x4041a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40414ef8" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40414ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404130e0"/>
        <function-ref name="isInput" scoped="" ref="0x404131c0"/>
        <function-ref name="toggle" scoped="" ref="0x404132a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40413380"/>
        <function-ref name="get" scoped="" ref="0x40413460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413540"/>
        <function-ref name="set" scoped="" ref="0x40413620"/>
        <function-ref name="clr" scoped="" ref="0x40413700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40412ba8" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40412ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412d80"/>
        <function-ref name="isInput" scoped="" ref="0x40412e60"/>
        <function-ref name="toggle" scoped="" ref="0x4041b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b0f0"/>
        <function-ref name="get" scoped="" ref="0x4041b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b2b0"/>
        <function-ref name="set" scoped="" ref="0x4041b390"/>
        <function-ref name="clr" scoped="" ref="0x4041b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041a890" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041aa68"/>
        <function-ref name="isInput" scoped="" ref="0x4041ab48"/>
        <function-ref name="toggle" scoped="" ref="0x4041ac28"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ad08"/>
        <function-ref name="get" scoped="" ref="0x4041ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041aec8"/>
        <function-ref name="set" scoped="" ref="0x40419010"/>
        <function-ref name="clr" scoped="" ref="0x404190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eb6538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eb6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb6710"/>
        <function-ref name="isInput" scoped="" ref="0x40eb67f0"/>
        <function-ref name="toggle" scoped="" ref="0x40eb68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb69b0"/>
        <function-ref name="get" scoped="" ref="0x40eb6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb6b70"/>
        <function-ref name="set" scoped="" ref="0x40eb6c50"/>
        <function-ref name="clr" scoped="" ref="0x40eb6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eb4010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eb4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb41e8"/>
        <function-ref name="isInput" scoped="" ref="0x40eb42c8"/>
        <function-ref name="toggle" scoped="" ref="0x40eb43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb4488"/>
        <function-ref name="get" scoped="" ref="0x40eb4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb4648"/>
        <function-ref name="set" scoped="" ref="0x40eb4728"/>
        <function-ref name="clr" scoped="" ref="0x40eb4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eb39e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eb39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40eb3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40eb3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb3e60"/>
        <function-ref name="get" scoped="" ref="0x40eb2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb20f0"/>
        <function-ref name="set" scoped="" ref="0x40eb21d0"/>
        <function-ref name="clr" scoped="" ref="0x40eb22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eb1538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eb1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb1710"/>
        <function-ref name="isInput" scoped="" ref="0x40eb17f0"/>
        <function-ref name="toggle" scoped="" ref="0x40eb18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb19b0"/>
        <function-ref name="get" scoped="" ref="0x40eb1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb1b70"/>
        <function-ref name="set" scoped="" ref="0x40eb1c50"/>
        <function-ref name="clr" scoped="" ref="0x40eb1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eaf010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eaf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eaf1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40eaf2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40eaf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eaf488"/>
        <function-ref name="get" scoped="" ref="0x40eaf568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eaf648"/>
        <function-ref name="set" scoped="" ref="0x40eaf728"/>
        <function-ref name="clr" scoped="" ref="0x40eaf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eae9e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eae9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eaebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40eaeca0"/>
        <function-ref name="toggle" scoped="" ref="0x40eaed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40eaee60"/>
        <function-ref name="get" scoped="" ref="0x40ee3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee30f0"/>
        <function-ref name="set" scoped="" ref="0x40ee31d0"/>
        <function-ref name="clr" scoped="" ref="0x40ee32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee2538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee2710"/>
        <function-ref name="isInput" scoped="" ref="0x40ee27f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ee28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee29b0"/>
        <function-ref name="get" scoped="" ref="0x40ee2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee2b70"/>
        <function-ref name="set" scoped="" ref="0x40ee2c50"/>
        <function-ref name="clr" scoped="" ref="0x40ee2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee0010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee01e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ee02c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ee03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee0488"/>
        <function-ref name="get" scoped="" ref="0x40ee0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee0648"/>
        <function-ref name="set" scoped="" ref="0x40ee0728"/>
        <function-ref name="clr" scoped="" ref="0x40ee0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041e170" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e348"/>
        <function-ref name="isInput" scoped="" ref="0x4041e428"/>
        <function-ref name="toggle" scoped="" ref="0x4041e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e5e8"/>
        <function-ref name="get" scoped="" ref="0x4041e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e7a8"/>
        <function-ref name="set" scoped="" ref="0x4041e888"/>
        <function-ref name="clr" scoped="" ref="0x4041e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041de48" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c050"/>
        <function-ref name="isInput" scoped="" ref="0x4041c130"/>
        <function-ref name="toggle" scoped="" ref="0x4041c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c2f0"/>
        <function-ref name="get" scoped="" ref="0x4041c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c4b0"/>
        <function-ref name="set" scoped="" ref="0x4041c590"/>
        <function-ref name="clr" scoped="" ref="0x4041c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40417e78" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40417e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f070"/>
        <function-ref name="isInput" scoped="" ref="0x4041f150"/>
        <function-ref name="toggle" scoped="" ref="0x4041f230"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f310"/>
        <function-ref name="get" scoped="" ref="0x4041f3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f4d0"/>
        <function-ref name="set" scoped="" ref="0x4041f5b0"/>
        <function-ref name="clr" scoped="" ref="0x4041f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041eac8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4041ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d010"/>
        <function-ref name="get" scoped="" ref="0x4041d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d1d0"/>
        <function-ref name="set" scoped="" ref="0x4041d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041c7d0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4041ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4041cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4041cc48"/>
        <function-ref name="get" scoped="" ref="0x4041cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ce08"/>
        <function-ref name="set" scoped="" ref="0x4041cee8"/>
        <function-ref name="clr" scoped="" ref="0x40425010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4041f7f0" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4041f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f9c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041faa8"/>
        <function-ref name="toggle" scoped="" ref="0x4041fb88"/>
        <function-ref name="isOutput" scoped="" ref="0x4041fc68"/>
        <function-ref name="get" scoped="" ref="0x4041fd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fe28"/>
        <function-ref name="set" scoped="" ref="0x4041ff08"/>
        <function-ref name="clr" scoped="" ref="0x4041e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041d4f0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d968"/>
        <function-ref name="get" scoped="" ref="0x4041da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041db28"/>
        <function-ref name="set" scoped="" ref="0x4041dc08"/>
        <function-ref name="clr" scoped="" ref="0x4041dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40425170" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40425170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425348"/>
        <function-ref name="isInput" scoped="" ref="0x40425428"/>
        <function-ref name="toggle" scoped="" ref="0x40425508"/>
        <function-ref name="isOutput" scoped="" ref="0x404255e8"/>
        <function-ref name="get" scoped="" ref="0x404256c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404257a8"/>
        <function-ref name="set" scoped="" ref="0x40425888"/>
        <function-ref name="clr" scoped="" ref="0x40425968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eea418" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eea418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eea5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40eea6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40eea7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eea890"/>
        <function-ref name="get" scoped="" ref="0x40eea970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eeaa50"/>
        <function-ref name="set" scoped="" ref="0x40eeab30"/>
        <function-ref name="clr" scoped="" ref="0x40eeac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee9de0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee8010"/>
        <function-ref name="isInput" scoped="" ref="0x40ee80f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ee81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee82b0"/>
        <function-ref name="get" scoped="" ref="0x40ee8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee8470"/>
        <function-ref name="set" scoped="" ref="0x40ee8550"/>
        <function-ref name="clr" scoped="" ref="0x40ee8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee77f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee79d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ee7ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ee7b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee7c70"/>
        <function-ref name="get" scoped="" ref="0x40ee7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee7e30"/>
        <function-ref name="set" scoped="" ref="0x40ee7f10"/>
        <function-ref name="clr" scoped="" ref="0x40ee6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee5228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee5228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee5400"/>
        <function-ref name="isInput" scoped="" ref="0x40ee54e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ee55c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee56a0"/>
        <function-ref name="get" scoped="" ref="0x40ee5780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee5860"/>
        <function-ref name="set" scoped="" ref="0x40ee5940"/>
        <function-ref name="clr" scoped="" ref="0x40ee5a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee4c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee4de0"/>
        <function-ref name="isInput" scoped="" ref="0x40ee4ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f18010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f180f0"/>
        <function-ref name="get" scoped="" ref="0x40f181d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f182b0"/>
        <function-ref name="set" scoped="" ref="0x40f18390"/>
        <function-ref name="clr" scoped="" ref="0x40f18470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f176c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f17898"/>
        <function-ref name="isInput" scoped="" ref="0x40f17978"/>
        <function-ref name="toggle" scoped="" ref="0x40f17a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f17b38"/>
        <function-ref name="get" scoped="" ref="0x40f17c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f17cf8"/>
        <function-ref name="set" scoped="" ref="0x40f17dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f17eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f150b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f150b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f15288"/>
        <function-ref name="isInput" scoped="" ref="0x40f15368"/>
        <function-ref name="toggle" scoped="" ref="0x40f15448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f15528"/>
        <function-ref name="get" scoped="" ref="0x40f15608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f156e8"/>
        <function-ref name="set" scoped="" ref="0x40f157c8"/>
        <function-ref name="clr" scoped="" ref="0x40f158a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f14a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f14a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f14c60"/>
        <function-ref name="isInput" scoped="" ref="0x40f14d40"/>
        <function-ref name="toggle" scoped="" ref="0x40f14e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f14f00"/>
        <function-ref name="get" scoped="" ref="0x40f13010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f130f0"/>
        <function-ref name="set" scoped="" ref="0x40f131d0"/>
        <function-ref name="clr" scoped="" ref="0x40f132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404219e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404219e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40421ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40421d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40421e60"/>
        <function-ref name="get" scoped="" ref="0x4042a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a0f0"/>
        <function-ref name="set" scoped="" ref="0x4042a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40429790" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40429790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429968"/>
        <function-ref name="isInput" scoped="" ref="0x40429a48"/>
        <function-ref name="toggle" scoped="" ref="0x40429b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40429c08"/>
        <function-ref name="get" scoped="" ref="0x40429ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429dc8"/>
        <function-ref name="set" scoped="" ref="0x40429ea8"/>
        <function-ref name="clr" scoped="" ref="0x40427010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404226f8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404226f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404228d0"/>
        <function-ref name="isInput" scoped="" ref="0x404229b0"/>
        <function-ref name="toggle" scoped="" ref="0x40422a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40422b70"/>
        <function-ref name="get" scoped="" ref="0x40422c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422d30"/>
        <function-ref name="set" scoped="" ref="0x40422e10"/>
        <function-ref name="clr" scoped="" ref="0x40422ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042a410" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042a7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a888"/>
        <function-ref name="get" scoped="" ref="0x4042a968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042aa48"/>
        <function-ref name="set" scoped="" ref="0x4042ab28"/>
        <function-ref name="clr" scoped="" ref="0x4042ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40427170" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40427170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427348"/>
        <function-ref name="isInput" scoped="" ref="0x40427428"/>
        <function-ref name="toggle" scoped="" ref="0x40427508"/>
        <function-ref name="isOutput" scoped="" ref="0x404275e8"/>
        <function-ref name="get" scoped="" ref="0x404276c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404277a8"/>
        <function-ref name="set" scoped="" ref="0x40427888"/>
        <function-ref name="clr" scoped="" ref="0x40427968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40421090" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40421090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421268"/>
        <function-ref name="isInput" scoped="" ref="0x40421348"/>
        <function-ref name="toggle" scoped="" ref="0x40421428"/>
        <function-ref name="isOutput" scoped="" ref="0x40421508"/>
        <function-ref name="get" scoped="" ref="0x404215e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404216c8"/>
        <function-ref name="set" scoped="" ref="0x404217a8"/>
        <function-ref name="clr" scoped="" ref="0x40421888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042ad68" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429010"/>
        <function-ref name="isInput" scoped="" ref="0x404290f0"/>
        <function-ref name="toggle" scoped="" ref="0x404291d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404292b0"/>
        <function-ref name="get" scoped="" ref="0x40429390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429470"/>
        <function-ref name="set" scoped="" ref="0x40429550"/>
        <function-ref name="clr" scoped="" ref="0x40429630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40427ac8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40427ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40427d80"/>
        <function-ref name="toggle" scoped="" ref="0x40427e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40426010"/>
        <function-ref name="get" scoped="" ref="0x404260f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404261d0"/>
        <function-ref name="set" scoped="" ref="0x404262b0"/>
        <function-ref name="clr" scoped="" ref="0x40426390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f21de8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f21de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1d010"/>
        <function-ref name="isInput" scoped="" ref="0x40f1d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f1d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1d2b0"/>
        <function-ref name="get" scoped="" ref="0x40f1d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1d470"/>
        <function-ref name="set" scoped="" ref="0x40f1d550"/>
        <function-ref name="clr" scoped="" ref="0x40f1d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1c7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f1cab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f1cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1cc70"/>
        <function-ref name="get" scoped="" ref="0x40f1cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1ce30"/>
        <function-ref name="set" scoped="" ref="0x40f1cf10"/>
        <function-ref name="clr" scoped="" ref="0x40f1b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1a228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1a400"/>
        <function-ref name="isInput" scoped="" ref="0x40f1a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f1a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1a6a0"/>
        <function-ref name="get" scoped="" ref="0x40f1a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1a860"/>
        <function-ref name="set" scoped="" ref="0x40f1a940"/>
        <function-ref name="clr" scoped="" ref="0x40f1aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f50c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f50c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f50de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f50ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f4f010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f4f0f0"/>
        <function-ref name="get" scoped="" ref="0x40f4f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f4f2b0"/>
        <function-ref name="set" scoped="" ref="0x40f4f390"/>
        <function-ref name="clr" scoped="" ref="0x40f4f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f4e6c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f4e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f4e898"/>
        <function-ref name="isInput" scoped="" ref="0x40f4e978"/>
        <function-ref name="toggle" scoped="" ref="0x40f4ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f4eb38"/>
        <function-ref name="get" scoped="" ref="0x40f4ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f4ecf8"/>
        <function-ref name="set" scoped="" ref="0x40f4edd8"/>
        <function-ref name="clr" scoped="" ref="0x40f4eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f4c0b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f4c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f4c288"/>
        <function-ref name="isInput" scoped="" ref="0x40f4c368"/>
        <function-ref name="toggle" scoped="" ref="0x40f4c448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f4c528"/>
        <function-ref name="get" scoped="" ref="0x40f4c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f4c6e8"/>
        <function-ref name="set" scoped="" ref="0x40f4c7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f4c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f4ba88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f4ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f4bc60"/>
        <function-ref name="isInput" scoped="" ref="0x40f4bd40"/>
        <function-ref name="toggle" scoped="" ref="0x40f4be20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f4bf00"/>
        <function-ref name="get" scoped="" ref="0x40f4a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f4a0f0"/>
        <function-ref name="set" scoped="" ref="0x40f4a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f49538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f49538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f49710"/>
        <function-ref name="isInput" scoped="" ref="0x40f497f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f498d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f499b0"/>
        <function-ref name="get" scoped="" ref="0x40f49a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f49b70"/>
        <function-ref name="set" scoped="" ref="0x40f49c50"/>
        <function-ref name="clr" scoped="" ref="0x40f49d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042d410" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042d6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042d7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d888"/>
        <function-ref name="get" scoped="" ref="0x4042d968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042da48"/>
        <function-ref name="set" scoped="" ref="0x4042db28"/>
        <function-ref name="clr" scoped="" ref="0x4042dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4042b170" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4042b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b348"/>
        <function-ref name="isInput" scoped="" ref="0x4042b428"/>
        <function-ref name="toggle" scoped="" ref="0x4042b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b5e8"/>
        <function-ref name="get" scoped="" ref="0x4042b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b7a8"/>
        <function-ref name="set" scoped="" ref="0x4042b888"/>
        <function-ref name="clr" scoped="" ref="0x4042b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042e128" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e300"/>
        <function-ref name="isInput" scoped="" ref="0x4042e3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4042e4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e5a0"/>
        <function-ref name="get" scoped="" ref="0x4042e680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e760"/>
        <function-ref name="set" scoped="" ref="0x4042e840"/>
        <function-ref name="clr" scoped="" ref="0x4042e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042dd68" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c010"/>
        <function-ref name="isInput" scoped="" ref="0x4042c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4042c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c2b0"/>
        <function-ref name="get" scoped="" ref="0x4042c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c470"/>
        <function-ref name="set" scoped="" ref="0x4042c550"/>
        <function-ref name="clr" scoped="" ref="0x4042c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042bac8" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4042bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4042be60"/>
        <function-ref name="isOutput" scoped="" ref="0x40436010"/>
        <function-ref name="get" scoped="" ref="0x404360f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404361d0"/>
        <function-ref name="set" scoped="" ref="0x404362b0"/>
        <function-ref name="clr" scoped="" ref="0x40436390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042ea80" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ec58"/>
        <function-ref name="isInput" scoped="" ref="0x4042ed38"/>
        <function-ref name="toggle" scoped="" ref="0x4042ee18"/>
        <function-ref name="isOutput" scoped="" ref="0x4042eef8"/>
        <function-ref name="get" scoped="" ref="0x4042d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d0f0"/>
        <function-ref name="set" scoped="" ref="0x4042d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042c790" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c968"/>
        <function-ref name="isInput" scoped="" ref="0x4042ca48"/>
        <function-ref name="toggle" scoped="" ref="0x4042cb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4042cc08"/>
        <function-ref name="get" scoped="" ref="0x4042cce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042cdc8"/>
        <function-ref name="set" scoped="" ref="0x4042cea8"/>
        <function-ref name="clr" scoped="" ref="0x4042b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404364f0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404366c8"/>
        <function-ref name="isInput" scoped="" ref="0x404367a8"/>
        <function-ref name="toggle" scoped="" ref="0x40436888"/>
        <function-ref name="isOutput" scoped="" ref="0x40436968"/>
        <function-ref name="get" scoped="" ref="0x40436a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436b28"/>
        <function-ref name="set" scoped="" ref="0x40436c08"/>
        <function-ref name="clr" scoped="" ref="0x40436ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f55938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f55938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f55b10"/>
        <function-ref name="isInput" scoped="" ref="0x40f55bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f55cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f55db0"/>
        <function-ref name="get" scoped="" ref="0x40f55e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f54010"/>
        <function-ref name="set" scoped="" ref="0x40f540f0"/>
        <function-ref name="clr" scoped="" ref="0x40f541d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f533b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f533b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f53588"/>
        <function-ref name="isInput" scoped="" ref="0x40f53668"/>
        <function-ref name="toggle" scoped="" ref="0x40f53748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f53828"/>
        <function-ref name="get" scoped="" ref="0x40f53908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f539e8"/>
        <function-ref name="set" scoped="" ref="0x40f53ac8"/>
        <function-ref name="clr" scoped="" ref="0x40f53ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f52d70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f52d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f88010"/>
        <function-ref name="isInput" scoped="" ref="0x40f880f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f881d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f882b0"/>
        <function-ref name="get" scoped="" ref="0x40f88390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f88470"/>
        <function-ref name="set" scoped="" ref="0x40f88550"/>
        <function-ref name="clr" scoped="" ref="0x40f88630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f877f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f877f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f879d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f87ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f87b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f87c70"/>
        <function-ref name="get" scoped="" ref="0x40f87d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f87e30"/>
        <function-ref name="set" scoped="" ref="0x40f87f10"/>
        <function-ref name="clr" scoped="" ref="0x40f86010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f85228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f85228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f85400"/>
        <function-ref name="isInput" scoped="" ref="0x40f854e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f855c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f856a0"/>
        <function-ref name="get" scoped="" ref="0x40f85780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f85860"/>
        <function-ref name="set" scoped="" ref="0x40f85940"/>
        <function-ref name="clr" scoped="" ref="0x40f85a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f84c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f84c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f84de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f84ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f83010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f830f0"/>
        <function-ref name="get" scoped="" ref="0x40f831d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f832b0"/>
        <function-ref name="set" scoped="" ref="0x40f83390"/>
        <function-ref name="clr" scoped="" ref="0x40f83470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f826c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f82898"/>
        <function-ref name="isInput" scoped="" ref="0x40f82978"/>
        <function-ref name="toggle" scoped="" ref="0x40f82a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f82b38"/>
        <function-ref name="get" scoped="" ref="0x40f82c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f82cf8"/>
        <function-ref name="set" scoped="" ref="0x40f82dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f82eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f800b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f800b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f80288"/>
        <function-ref name="isInput" scoped="" ref="0x40f80368"/>
        <function-ref name="toggle" scoped="" ref="0x40f80448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f80528"/>
        <function-ref name="get" scoped="" ref="0x40f80608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f806e8"/>
        <function-ref name="set" scoped="" ref="0x40f807c8"/>
        <function-ref name="clr" scoped="" ref="0x40f808a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40431e48" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40431e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c050"/>
        <function-ref name="isInput" scoped="" ref="0x4043c130"/>
        <function-ref name="toggle" scoped="" ref="0x4043c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4043c2f0"/>
        <function-ref name="get" scoped="" ref="0x4043c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043c4b0"/>
        <function-ref name="set" scoped="" ref="0x4043c590"/>
        <function-ref name="clr" scoped="" ref="0x4043c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4043bac8" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4043bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4043bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4043be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a010"/>
        <function-ref name="get" scoped="" ref="0x4043a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a1d0"/>
        <function-ref name="set" scoped="" ref="0x4043a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4043a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40432b00" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40432b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40432db8"/>
        <function-ref name="toggle" scoped="" ref="0x40432e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40431010"/>
        <function-ref name="get" scoped="" ref="0x404310f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404311d0"/>
        <function-ref name="set" scoped="" ref="0x404312b0"/>
        <function-ref name="clr" scoped="" ref="0x40431390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043c7d0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4043ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4043cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4043cc48"/>
        <function-ref name="get" scoped="" ref="0x4043cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ce08"/>
        <function-ref name="set" scoped="" ref="0x4043cee8"/>
        <function-ref name="clr" scoped="" ref="0x4043b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4043a4f0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4043a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a968"/>
        <function-ref name="get" scoped="" ref="0x4043aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ab28"/>
        <function-ref name="set" scoped="" ref="0x4043ac08"/>
        <function-ref name="clr" scoped="" ref="0x4043ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404314f0" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404314f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404316c8"/>
        <function-ref name="isInput" scoped="" ref="0x404317a8"/>
        <function-ref name="toggle" scoped="" ref="0x40431888"/>
        <function-ref name="isOutput" scoped="" ref="0x40431968"/>
        <function-ref name="get" scoped="" ref="0x40431a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431b28"/>
        <function-ref name="set" scoped="" ref="0x40431c08"/>
        <function-ref name="clr" scoped="" ref="0x40431ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4043b170" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4043b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b348"/>
        <function-ref name="isInput" scoped="" ref="0x4043b428"/>
        <function-ref name="toggle" scoped="" ref="0x4043b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b5e8"/>
        <function-ref name="get" scoped="" ref="0x4043b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b7a8"/>
        <function-ref name="set" scoped="" ref="0x4043b888"/>
        <function-ref name="clr" scoped="" ref="0x4043b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4043ae48" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4043ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439050"/>
        <function-ref name="isInput" scoped="" ref="0x40439130"/>
        <function-ref name="toggle" scoped="" ref="0x40439210"/>
        <function-ref name="isOutput" scoped="" ref="0x404392f0"/>
        <function-ref name="get" scoped="" ref="0x404393d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404394b0"/>
        <function-ref name="set" scoped="" ref="0x40439590"/>
        <function-ref name="clr" scoped="" ref="0x40439670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8b538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8b710"/>
        <function-ref name="isInput" scoped="" ref="0x40f8b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f8b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8b9b0"/>
        <function-ref name="get" scoped="" ref="0x40f8ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8bb70"/>
        <function-ref name="set" scoped="" ref="0x40f8bc50"/>
        <function-ref name="clr" scoped="" ref="0x40f8bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f89010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f89010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f891e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f892c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f893a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f89488"/>
        <function-ref name="get" scoped="" ref="0x40f89568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f89648"/>
        <function-ref name="set" scoped="" ref="0x40f89728"/>
        <function-ref name="clr" scoped="" ref="0x40f89808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc09e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40fc0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc0e60"/>
        <function-ref name="get" scoped="" ref="0x40fbf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fbf0f0"/>
        <function-ref name="set" scoped="" ref="0x40fbf1d0"/>
        <function-ref name="clr" scoped="" ref="0x40fbf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fbe538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fbe538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fbe710"/>
        <function-ref name="isInput" scoped="" ref="0x40fbe7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fbe8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fbe9b0"/>
        <function-ref name="get" scoped="" ref="0x40fbea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fbeb70"/>
        <function-ref name="set" scoped="" ref="0x40fbec50"/>
        <function-ref name="clr" scoped="" ref="0x40fbed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fbc010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fbc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fbc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fbc2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fbc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fbc488"/>
        <function-ref name="get" scoped="" ref="0x40fbc568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fbc648"/>
        <function-ref name="set" scoped="" ref="0x40fbc728"/>
        <function-ref name="clr" scoped="" ref="0x40fbc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fbb9e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fbb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fbbbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40fbbca0"/>
        <function-ref name="toggle" scoped="" ref="0x40fbbd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40fbbe60"/>
        <function-ref name="get" scoped="" ref="0x40fba010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fba0f0"/>
        <function-ref name="set" scoped="" ref="0x40fba1d0"/>
        <function-ref name="clr" scoped="" ref="0x40fba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fb9538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fb9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fb9710"/>
        <function-ref name="isInput" scoped="" ref="0x40fb97f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fb98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fb99b0"/>
        <function-ref name="get" scoped="" ref="0x40fb9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fb9b70"/>
        <function-ref name="set" scoped="" ref="0x40fb9c50"/>
        <function-ref name="clr" scoped="" ref="0x40fb9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fb7010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fb71e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fb72c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fb73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fb7488"/>
        <function-ref name="get" scoped="" ref="0x40fb7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fb7648"/>
        <function-ref name="set" scoped="" ref="0x40fb7728"/>
        <function-ref name="clr" scoped="" ref="0x40fb7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40441010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40441010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404411e8"/>
        <function-ref name="isInput" scoped="" ref="0x404412c8"/>
        <function-ref name="toggle" scoped="" ref="0x404413a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40441488"/>
        <function-ref name="get" scoped="" ref="0x40441568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40441648"/>
        <function-ref name="set" scoped="" ref="0x40441728"/>
        <function-ref name="clr" scoped="" ref="0x40441808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044a7b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a990"/>
        <function-ref name="isInput" scoped="" ref="0x4044aa70"/>
        <function-ref name="toggle" scoped="" ref="0x4044ab50"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ac30"/>
        <function-ref name="get" scoped="" ref="0x4044ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044adf0"/>
        <function-ref name="set" scoped="" ref="0x4044aed0"/>
        <function-ref name="clr" scoped="" ref="0x40449010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40453010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40453010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404531e8"/>
        <function-ref name="isInput" scoped="" ref="0x404532c8"/>
        <function-ref name="toggle" scoped="" ref="0x404533a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40453488"/>
        <function-ref name="get" scoped="" ref="0x40453568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453648"/>
        <function-ref name="set" scoped="" ref="0x40453728"/>
        <function-ref name="clr" scoped="" ref="0x40453808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404517b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404517b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451990"/>
        <function-ref name="isInput" scoped="" ref="0x40451a70"/>
        <function-ref name="toggle" scoped="" ref="0x40451b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40451c30"/>
        <function-ref name="get" scoped="" ref="0x40451d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451df0"/>
        <function-ref name="set" scoped="" ref="0x40451ed0"/>
        <function-ref name="clr" scoped="" ref="0x40450010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40459010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40459010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404591e8"/>
        <function-ref name="isInput" scoped="" ref="0x404592c8"/>
        <function-ref name="toggle" scoped="" ref="0x404593a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40459488"/>
        <function-ref name="get" scoped="" ref="0x40459568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459648"/>
        <function-ref name="set" scoped="" ref="0x40459728"/>
        <function-ref name="clr" scoped="" ref="0x40459808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404577b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404577b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457990"/>
        <function-ref name="isInput" scoped="" ref="0x40457a70"/>
        <function-ref name="toggle" scoped="" ref="0x40457b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40457c30"/>
        <function-ref name="get" scoped="" ref="0x40457d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457df0"/>
        <function-ref name="set" scoped="" ref="0x40457ed0"/>
        <function-ref name="clr" scoped="" ref="0x40456010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045f080" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f258"/>
        <function-ref name="isInput" scoped="" ref="0x4045f338"/>
        <function-ref name="toggle" scoped="" ref="0x4045f418"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f4f8"/>
        <function-ref name="get" scoped="" ref="0x4045f5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f6b8"/>
        <function-ref name="set" scoped="" ref="0x4045f798"/>
        <function-ref name="clr" scoped="" ref="0x4045f878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045d840" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045da18"/>
        <function-ref name="isInput" scoped="" ref="0x4045daf8"/>
        <function-ref name="toggle" scoped="" ref="0x4045dbd8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dcb8"/>
        <function-ref name="get" scoped="" ref="0x4045dd98"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045de78"/>
        <function-ref name="set" scoped="" ref="0x4045c010"/>
        <function-ref name="clr" scoped="" ref="0x4045c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404660b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404660b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466288"/>
        <function-ref name="isInput" scoped="" ref="0x40466368"/>
        <function-ref name="toggle" scoped="" ref="0x40466448"/>
        <function-ref name="isOutput" scoped="" ref="0x40466528"/>
        <function-ref name="get" scoped="" ref="0x40466608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404666e8"/>
        <function-ref name="set" scoped="" ref="0x404667c8"/>
        <function-ref name="clr" scoped="" ref="0x404668a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40463880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40463880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463a58"/>
        <function-ref name="isInput" scoped="" ref="0x40463b38"/>
        <function-ref name="toggle" scoped="" ref="0x40463c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40463cf8"/>
        <function-ref name="get" scoped="" ref="0x40463dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463eb8"/>
        <function-ref name="set" scoped="" ref="0x40462010"/>
        <function-ref name="clr" scoped="" ref="0x404620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046c0b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c288"/>
        <function-ref name="isInput" scoped="" ref="0x4046c368"/>
        <function-ref name="toggle" scoped="" ref="0x4046c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c528"/>
        <function-ref name="get" scoped="" ref="0x4046c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c6e8"/>
        <function-ref name="set" scoped="" ref="0x4046c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4046c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046a880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046aa58"/>
        <function-ref name="isInput" scoped="" ref="0x4046ab38"/>
        <function-ref name="toggle" scoped="" ref="0x4046ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x4046acf8"/>
        <function-ref name="get" scoped="" ref="0x4046add8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046aeb8"/>
        <function-ref name="set" scoped="" ref="0x40469010"/>
        <function-ref name="clr" scoped="" ref="0x404690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404720b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404720b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472288"/>
        <function-ref name="isInput" scoped="" ref="0x40472368"/>
        <function-ref name="toggle" scoped="" ref="0x40472448"/>
        <function-ref name="isOutput" scoped="" ref="0x40472528"/>
        <function-ref name="get" scoped="" ref="0x40472608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404726e8"/>
        <function-ref name="set" scoped="" ref="0x404727c8"/>
        <function-ref name="clr" scoped="" ref="0x404728a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40470880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40470880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470a58"/>
        <function-ref name="isInput" scoped="" ref="0x40470b38"/>
        <function-ref name="toggle" scoped="" ref="0x40470c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40470cf8"/>
        <function-ref name="get" scoped="" ref="0x40470dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470eb8"/>
        <function-ref name="set" scoped="" ref="0x4046f010"/>
        <function-ref name="clr" scoped="" ref="0x4046f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4048abf8" loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4048abf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40495010" loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40495010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404951e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404952c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404953a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40495488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40495568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4049c808" loc="60:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4049c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403a7a30" loc="57:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a7c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4049c400" loc="59:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4049c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403a7dc8" loc="58:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403a7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c010"/>
        <function-ref name="taskLoop" scoped="" ref="0x4049c0f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4049c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403179c0" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40317b98"/>
        <function-ref name="runTask" scoped="" ref="0x40317c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40315250" loc="47:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40315428"/>
        <function-ref name="taskLoop" scoped="" ref="0x40315508"/>
        <function-ref name="runNextTask" scoped="" ref="0x403155e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40384100" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403842d8"/>
        <function-ref name="runTask" scoped="" ref="0x403843b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40384d70" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40383010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403858a8" loc="55:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40385a80"/>
        <function-ref name="taskLoop" scoped="" ref="0x40385b60"/>
        <function-ref name="runNextTask" scoped="" ref="0x40385c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40399e88" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40394070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4031c690" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4031c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40392370" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40392548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404b2090" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404b2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b2268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404bba38" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404bba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404bbc10"/>
        <function-ref name="stopDone" scoped="" ref="0x404bbcf0"/>
        <function-ref name="start" scoped="" ref="0x404bbdd0"/>
        <function-ref name="stop" scoped="" ref="0x404bbeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x404ff8d0" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x404ff8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404ffaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x4050c640" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x4050c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4050c818"/>
        <function-ref name="source" scoped="" ref="0x4050c8f8"/>
        <function-ref name="address" scoped="" ref="0x4050c9d8"/>
        <function-ref name="destination" scoped="" ref="0x4050cab8"/>
        <function-ref name="setSource" scoped="" ref="0x4050cb98"/>
        <function-ref name="setDestination" scoped="" ref="0x4050cc78"/>
        <function-ref name="type" scoped="" ref="0x4050cd58"/>
        <function-ref name="setType" scoped="" ref="0x4050ce38"/>
        <function-ref name="isForMe" scoped="" ref="0x4050cf18"/>
        <function-ref name="setGroup" scoped="" ref="0x4050a010"/>
        <function-ref name="localGroup" scoped="" ref="0x4050a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x4050eba0" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x4050eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4050ed78"/>
        <function-ref name="runTask" scoped="" ref="0x4050ee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404b1180" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404b1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404b1358"/>
        <function-ref name="stopDone" scoped="" ref="0x404b1438"/>
        <function-ref name="start" scoped="" ref="0x404b1518"/>
        <function-ref name="stop" scoped="" ref="0x404b15f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x404fae90" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x404fae90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4050c080"/>
        <function-ref name="payloadLength" scoped="" ref="0x4050c160"/>
        <function-ref name="getPayload" scoped="" ref="0x4050c240"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4050c320"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4050c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x404fa3e0" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x404fa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404fa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x4051b3f8" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x4051b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4051b5d0"/>
        <function-ref name="runTask" scoped="" ref="0x4051b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40510298" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40510298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405104f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405105d0"/>
        <function-ref name="led1On" scoped="" ref="0x405106b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40510790"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40510870"/>
        <function-ref name="get" scoped="" ref="0x40510950"/>
        <function-ref name="led1Off" scoped="" ref="0x40510a30"/>
        <function-ref name="led2Off" scoped="" ref="0x40510db0"/>
        <function-ref name="set" scoped="" ref="0x40510b10"/>
        <function-ref name="led0On" scoped="" ref="0x40510bf0"/>
        <function-ref name="led2On" scoped="" ref="0x40510cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x404fca68" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x404fca68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404fcc40"/>
        <function-ref name="payloadLength" scoped="" ref="0x404fcd20"/>
        <function-ref name="getPayload" scoped="" ref="0x404fce00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404fcee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404b0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x404ba950" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x404ba950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404bab28"/>
        <function-ref name="getPayload" scoped="" ref="0x404bac08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404bace8"/>
        <function-ref name="cancel" scoped="" ref="0x404badc8"/>
        <function-ref name="sendDone" scoped="" ref="0x404baea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x404f5400" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x404f5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f55d8"/>
        <function-ref name="getPayload" scoped="" ref="0x404f56b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404f5798"/>
        <function-ref name="cancel" scoped="" ref="0x404f5878"/>
        <function-ref name="sendDone" scoped="" ref="0x404f5958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x4050b930" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x4050b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4050bb08"/>
        <function-ref name="source" scoped="" ref="0x4050bbe8"/>
        <function-ref name="address" scoped="" ref="0x4050bcc8"/>
        <function-ref name="destination" scoped="" ref="0x4050bda8"/>
        <function-ref name="setSource" scoped="" ref="0x4050be88"/>
        <function-ref name="setDestination" scoped="" ref="0x404ba010"/>
        <function-ref name="type" scoped="" ref="0x404ba0f0"/>
        <function-ref name="setType" scoped="" ref="0x404ba1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x404ba2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x404ba390"/>
        <function-ref name="localGroup" scoped="" ref="0x404ba470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x404faaa8" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x404faaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404fac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40539090" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40539090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40539268"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40539348"/>
        <function-ref name="led1On" scoped="" ref="0x40539428"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40539508"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405395e8"/>
        <function-ref name="get" scoped="" ref="0x405396c8"/>
        <function-ref name="led1Off" scoped="" ref="0x405397a8"/>
        <function-ref name="led2Off" scoped="" ref="0x40539b28"/>
        <function-ref name="set" scoped="" ref="0x40539888"/>
        <function-ref name="led0On" scoped="" ref="0x40539968"/>
        <function-ref name="led2On" scoped="" ref="0x40539a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40545408" loc="50:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40545408"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405455e0"/>
        <function-ref name="isInput" scoped="" ref="0x405456c0"/>
        <function-ref name="toggle" scoped="" ref="0x405457a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40545880"/>
        <function-ref name="get" scoped="" ref="0x40545960"/>
        <function-ref name="makeOutput" scoped="" ref="0x40545a40"/>
        <function-ref name="set" scoped="" ref="0x40545b20"/>
        <function-ref name="clr" scoped="" ref="0x40545c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405463e8" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405463e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405465c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40545df0" loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40545df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40544010"/>
        <function-ref name="isInput" scoped="" ref="0x405440f0"/>
        <function-ref name="toggle" scoped="" ref="0x405441d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405442b0"/>
        <function-ref name="get" scoped="" ref="0x40544390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40544470"/>
        <function-ref name="set" scoped="" ref="0x40544550"/>
        <function-ref name="clr" scoped="" ref="0x40544630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40546730" loc="47:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40546730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40546908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405469e8"/>
        <function-ref name="led1On" scoped="" ref="0x40546ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40546ba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40546c88"/>
        <function-ref name="get" scoped="" ref="0x40546d68"/>
        <function-ref name="led1Off" scoped="" ref="0x40546e48"/>
        <function-ref name="led2Off" scoped="" ref="0x405451d8"/>
        <function-ref name="set" scoped="" ref="0x40546f28"/>
        <function-ref name="led0On" scoped="" ref="0x40545018"/>
        <function-ref name="led2On" scoped="" ref="0x405450f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40544820" loc="52:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40544820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405449f8"/>
        <function-ref name="isInput" scoped="" ref="0x40544ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40544bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40544c98"/>
        <function-ref name="get" scoped="" ref="0x40544d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40544e58"/>
        <function-ref name="set" scoped="" ref="0x40543010"/>
        <function-ref name="clr" scoped="" ref="0x405430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40548ab8" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40548ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40548c90"/>
        <function-ref name="isInput" scoped="" ref="0x40548d70"/>
        <function-ref name="toggle" scoped="" ref="0x40548e50"/>
        <function-ref name="isOutput" scoped="" ref="0x40552010"/>
        <function-ref name="get" scoped="" ref="0x405520f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405521d0"/>
        <function-ref name="set" scoped="" ref="0x405522b0"/>
        <function-ref name="clr" scoped="" ref="0x40552390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405525a0" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405525a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40552778"/>
        <function-ref name="isInput" scoped="" ref="0x40552858"/>
        <function-ref name="toggle" scoped="" ref="0x40552938"/>
        <function-ref name="isOutput" scoped="" ref="0x40552a18"/>
        <function-ref name="get" scoped="" ref="0x40552af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40552bd8"/>
        <function-ref name="set" scoped="" ref="0x40552cb8"/>
        <function-ref name="clr" scoped="" ref="0x40552d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40551998" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40551998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40551b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40551010" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40551010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405511e8"/>
        <function-ref name="isInput" scoped="" ref="0x405512c8"/>
        <function-ref name="toggle" scoped="" ref="0x405513a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40551488"/>
        <function-ref name="get" scoped="" ref="0x40551568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40551648"/>
        <function-ref name="set" scoped="" ref="0x40551728"/>
        <function-ref name="clr" scoped="" ref="0x40551808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4053aa58" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4053aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4053ac30"/>
        <function-ref name="stopDone" scoped="" ref="0x4053ad10"/>
        <function-ref name="start" scoped="" ref="0x4053adf0"/>
        <function-ref name="stop" scoped="" ref="0x4053aed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40568b18" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40568b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40568cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40568e70" loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40568e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4055a070"/>
        <function-ref name="payloadLength" scoped="" ref="0x4055a150"/>
        <function-ref name="getPayload" scoped="" ref="0x4055a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4055a310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4055a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4055d340" loc="43:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4055d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4055d518"/>
        <function-ref name="getPayload" scoped="" ref="0x4055d5f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4055d6d8"/>
        <function-ref name="cancel" scoped="" ref="0x4055d7b8"/>
        <function-ref name="sendDone" scoped="" ref="0x4055d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4055b3e0" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4055b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4055b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405704f0" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405706c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405707a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40570888"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40570968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4055dd00" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4055dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4055ded8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405657b8" loc="51:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405657b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40565990"/>
        <function-ref name="noAck" scoped="" ref="0x40565a70"/>
        <function-ref name="wasAcked" scoped="" ref="0x40565b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4056cdf0" loc="53:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4056cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40567010"/>
        <function-ref name="setRetries" scoped="" ref="0x405670f0"/>
        <function-ref name="getRetries" scoped="" ref="0x405671d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405672b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40567390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4055a588" loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4055a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4055a760"/>
        <function-ref name="source" scoped="" ref="0x4055a840"/>
        <function-ref name="address" scoped="" ref="0x4055a920"/>
        <function-ref name="destination" scoped="" ref="0x4055aa00"/>
        <function-ref name="setSource" scoped="" ref="0x4055aae0"/>
        <function-ref name="setDestination" scoped="" ref="0x4055abc0"/>
        <function-ref name="type" scoped="" ref="0x4055aca0"/>
        <function-ref name="setType" scoped="" ref="0x4055ad80"/>
        <function-ref name="isForMe" scoped="" ref="0x4055ae60"/>
        <function-ref name="setGroup" scoped="" ref="0x40559010"/>
        <function-ref name="localGroup" scoped="" ref="0x405590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40569800" loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40569800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405699d8"/>
        <function-ref name="setChannel" scoped="" ref="0x40569ab8"/>
        <function-ref name="getChannel" scoped="" ref="0x40569b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40566178" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40566178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40566c78"/>
        <function-ref name="clear" scoped="" ref="0x4056b048"/>
        <function-ref name="isValid" scoped="" ref="0x405668c8"/>
        <function-ref name="set" scoped="" ref="0x4056b3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4056bb30" loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4056bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405766c8"/>
        <function-ref name="clear" scoped="" ref="0x40576a78"/>
        <function-ref name="isValid" scoped="" ref="0x40576318"/>
        <function-ref name="set" scoped="" ref="0x40576e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405728c0" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405728c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40572a98"/>
        <function-ref name="stopDone" scoped="" ref="0x40572b78"/>
        <function-ref name="start" scoped="" ref="0x40572c58"/>
        <function-ref name="stop" scoped="" ref="0x40572d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40583110" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40583110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40583cd8"/>
        <function-ref name="get" scoped="" ref="0x40583a18"/>
        <function-ref name="isSet" scoped="" ref="0x40583758"/>
        <function-ref name="set" scoped="" ref="0x40581010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4058c9d8" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058b5b0"/>
        <function-ref name="clear" scoped="" ref="0x4058b960"/>
        <function-ref name="isValid" scoped="" ref="0x4058b200"/>
        <function-ref name="set" scoped="" ref="0x4058bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4057e8b0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4057e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4057ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4057da48" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4057da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057dc20"/>
        <function-ref name="payloadLength" scoped="" ref="0x4057dd00"/>
        <function-ref name="getPayload" scoped="" ref="0x4057dde0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057dec0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4057b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4057f1b0" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4057f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4057f388"/>
        <function-ref name="getPayload" scoped="" ref="0x4057f468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057f548"/>
        <function-ref name="cancel" scoped="" ref="0x4057f628"/>
        <function-ref name="sendDone" scoped="" ref="0x4057f708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4057e238" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4057e238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4057e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40588d70" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40588d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40584960"/>
        <function-ref name="get" scoped="" ref="0x405846a0"/>
        <function-ref name="isSet" scoped="" ref="0x405843e0"/>
        <function-ref name="set" scoped="" ref="0x40584c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4057a400" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4057a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4057a5d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4057a6b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4057a798"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4057a878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4057fb70" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4057fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4057fd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40590010" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40590010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40590b10"/>
        <function-ref name="clear" scoped="" ref="0x40590ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40590760"/>
        <function-ref name="set" scoped="" ref="0x4058c2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4058e3e8" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4058e3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4058ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40585940" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40585940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40588590"/>
        <function-ref name="get" scoped="" ref="0x405882d0"/>
        <function-ref name="isSet" scoped="" ref="0x40588010"/>
        <function-ref name="set" scoped="" ref="0x40588850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4057be60" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4057a050"/>
        <function-ref name="noAck" scoped="" ref="0x4057a130"/>
        <function-ref name="wasAcked" scoped="" ref="0x4057a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4057d010" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4057d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4057d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4057aa20" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4057aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4057abf8"/>
        <function-ref name="setRetries" scoped="" ref="0x4057acd8"/>
        <function-ref name="getRetries" scoped="" ref="0x4057adb8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4057ae98"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40579010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4057b1a8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4057b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4057b380"/>
        <function-ref name="source" scoped="" ref="0x4057b460"/>
        <function-ref name="address" scoped="" ref="0x4057b540"/>
        <function-ref name="destination" scoped="" ref="0x4057b620"/>
        <function-ref name="setSource" scoped="" ref="0x4057b700"/>
        <function-ref name="setDestination" scoped="" ref="0x4057b7e0"/>
        <function-ref name="type" scoped="" ref="0x4057b8c0"/>
        <function-ref name="setType" scoped="" ref="0x4057b9a0"/>
        <function-ref name="isForMe" scoped="" ref="0x4057ba80"/>
        <function-ref name="setGroup" scoped="" ref="0x4057bb60"/>
        <function-ref name="localGroup" scoped="" ref="0x4057bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405791d0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405791d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40579428"/>
        <function-ref name="setChannel" scoped="" ref="0x40579508"/>
        <function-ref name="getChannel" scoped="" ref="0x405795e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4058d228" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4058d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4058d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4057d6f0" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4057d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4057d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40589710" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40589710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405898e8"/>
        <function-ref name="stopDone" scoped="" ref="0x405899c8"/>
        <function-ref name="start" scoped="" ref="0x40589aa8"/>
        <function-ref name="stop" scoped="" ref="0x40589b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405aeb60" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405aeb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ad780"/>
        <function-ref name="get" scoped="" ref="0x405ad4c0"/>
        <function-ref name="isSet" scoped="" ref="0x405ad200"/>
        <function-ref name="set" scoped="" ref="0x405ada40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40592a58" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40592a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40592c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x405911d0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x405911d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40591428"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40591508"/>
        <function-ref name="request" scoped="" ref="0x405915e8"/>
        <function-ref name="granted" scoped="" ref="0x405916c8"/>
        <function-ref name="isOwner" scoped="" ref="0x405917a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40595778" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40595778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40595950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40596010" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40596010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405961e8"/>
        <function-ref name="getPayload" scoped="" ref="0x405962c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405963a8"/>
        <function-ref name="cancel" scoped="" ref="0x40596488"/>
        <function-ref name="sendDone" scoped="" ref="0x40596568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40595100" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40595100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405952d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x405a25b8" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x405a25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x405a2790"/>
        <function-ref name="address" scoped="" ref="0x405a2870"/>
        <function-ref name="destination" scoped="" ref="0x405a2950"/>
        <function-ref name="setSource" scoped="" ref="0x405a2a30"/>
        <function-ref name="setDestination" scoped="" ref="0x405a2b10"/>
        <function-ref name="pan" scoped="" ref="0x405a2bf0"/>
        <function-ref name="setPan" scoped="" ref="0x405a2cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x405a2db0"/>
        <function-ref name="localPan" scoped="" ref="0x405a2e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40599148" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40599148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40599320"/>
        <function-ref name="payloadLength" scoped="" ref="0x40599400"/>
        <function-ref name="getPayload" scoped="" ref="0x405994e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405995c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405996a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405b07f0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405b07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ae3d8"/>
        <function-ref name="get" scoped="" ref="0x405ae118"/>
        <function-ref name="isSet" scoped="" ref="0x405b0e38"/>
        <function-ref name="set" scoped="" ref="0x405ae698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40599e48" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40599e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405a7050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405a7130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405a7210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405a72f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40593618" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40593618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405937f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x405938d0"/>
        <function-ref name="getPayload" scoped="" ref="0x405939b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40593a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40593b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405969d0" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405969d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40596ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405acec8" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405acec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405aab30"/>
        <function-ref name="clear" scoped="" ref="0x405aaee0"/>
        <function-ref name="isValid" scoped="" ref="0x405aa780"/>
        <function-ref name="set" scoped="" ref="0x405a92d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x405ac330" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ac330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405ac978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405a1368" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b0010"/>
        <function-ref name="get" scoped="" ref="0x405a1c70"/>
        <function-ref name="isSet" scoped="" ref="0x405a19b0"/>
        <function-ref name="set" scoped="" ref="0x405b02d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405998c0" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405998c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40599a98"/>
        <function-ref name="noAck" scoped="" ref="0x40599b78"/>
        <function-ref name="wasAcked" scoped="" ref="0x40599c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4059de60" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4059de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40592050"/>
        <function-ref name="getPayload" scoped="" ref="0x40592130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40592210"/>
        <function-ref name="cancel" scoped="" ref="0x405922f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405923d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40595e78" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40595e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40594070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405a7498" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405a7498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405a7670"/>
        <function-ref name="setRetries" scoped="" ref="0x405a7750"/>
        <function-ref name="getRetries" scoped="" ref="0x405a7830"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405a7910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405a79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405a7bb0" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405a7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405a7d88"/>
        <function-ref name="setChannel" scoped="" ref="0x405a7e68"/>
        <function-ref name="getChannel" scoped="" ref="0x405a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405948e8" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405948e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40594ac0"/>
        <function-ref name="source" scoped="" ref="0x40594ba0"/>
        <function-ref name="address" scoped="" ref="0x40594c80"/>
        <function-ref name="destination" scoped="" ref="0x40594d60"/>
        <function-ref name="setSource" scoped="" ref="0x40594e40"/>
        <function-ref name="setDestination" scoped="" ref="0x40594f20"/>
        <function-ref name="type" scoped="" ref="0x40593018"/>
        <function-ref name="setType" scoped="" ref="0x405930f8"/>
        <function-ref name="isForMe" scoped="" ref="0x405931d8"/>
        <function-ref name="setGroup" scoped="" ref="0x405932b8"/>
        <function-ref name="localGroup" scoped="" ref="0x40593398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405a9a08" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405b95b0"/>
        <function-ref name="clear" scoped="" ref="0x405b9960"/>
        <function-ref name="isValid" scoped="" ref="0x405b9200"/>
        <function-ref name="set" scoped="" ref="0x405b9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40592608" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40592608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405927e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405addf0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405addf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40594578" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40594578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40594750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405c2be8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405c2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x405c2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x405ca408" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405ca408"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x405ca5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x405d2c08" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405d2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405d2de0"/>
        <function-ref name="checkFrame" scoped="" ref="0x405d2ec0"/>
        <function-ref name="source" scoped="" ref="0x405c2010"/>
        <function-ref name="destination" scoped="" ref="0x405c20f0"/>
        <function-ref name="setSource" scoped="" ref="0x405c21d0"/>
        <function-ref name="setDestination" scoped="" ref="0x405c22b0"/>
        <function-ref name="setGroup" scoped="" ref="0x405c2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405c40e0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405c40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405c42b8"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405c4398"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405c4478"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405c4558"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405c4638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405e2b30" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405e2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405e2d08"/>
        <function-ref name="wait" scoped="" ref="0x405e2de8"/>
        <function-ref name="cancel" scoped="" ref="0x405e2ec8"/>
        <function-ref name="isFree" scoped="" ref="0x405e4010"/>
        <function-ref name="getNow" scoped="" ref="0x405e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x405dede0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x405dede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e3010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e31d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e32b0"/>
        <function-ref name="headerLength" scoped="" ref="0x405e3390"/>
        <function-ref name="metadataLength" scoped="" ref="0x405e3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x405e3800" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x405e3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405e13c0"/>
        <function-ref name="clear" scoped="" ref="0x405e1770"/>
        <function-ref name="isValid" scoped="" ref="0x405e1010"/>
        <function-ref name="set" scoped="" ref="0x405e1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x405b19e0" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x405b19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b1bb8"/>
        <function-ref name="headerLength" scoped="" ref="0x405b1c98"/>
        <function-ref name="metadataLength" scoped="" ref="0x405b1d78"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x405b1e58"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x405b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x405cb6d0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x405cb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x405cb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x405b3010" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405b31e8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405b32c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405b33a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405b3488"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x405b3568"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x405b3648"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405b3728"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405b3808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x405e5598" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405e5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405e5770"/>
        <function-ref name="getDSN" scoped="" ref="0x405e5850"/>
        <function-ref name="setFCF" scoped="" ref="0x405e5930"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405e5a10"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405e5af0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405e5bd0"/>
        <function-ref name="setDSN" scoped="" ref="0x405e5cb0"/>
        <function-ref name="createAckReply" scoped="" ref="0x405e5d90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405e5e70"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405d1010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405d10f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405d11d0"/>
        <function-ref name="localAddr" scoped="" ref="0x405d12b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405d1410"/>
        <function-ref name="localPan" scoped="" ref="0x405d14f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405d15d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405d16b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405d1790"/>
        <function-ref name="setDestPan" scoped="" ref="0x405d1870"/>
        <function-ref name="isForMe" scoped="" ref="0x405d1950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405d1a30"/>
        <function-ref name="getFCF" scoped="" ref="0x405d1b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405d1bf0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405d1cd0"/>
        <function-ref name="getFramePending" scoped="" ref="0x405d1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405ba6f0" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405ba6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405ba8c8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405ba9a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405baa88"/>
        <function-ref name="getSender" scoped="" ref="0x405bab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405c7548" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405c7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405c7720"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x405c7800"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x405c78e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405c79c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x406166e8" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x406166e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406168d0"/>
        <function-ref name="wait" scoped="" ref="0x406169b0"/>
        <function-ref name="cancel" scoped="" ref="0x40616a90"/>
        <function-ref name="isFree" scoped="" ref="0x40616b70"/>
        <function-ref name="getNow" scoped="" ref="0x40616c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40615010" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40615010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404e19d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406424e0"/>
        <function-ref name="fired" scoped="" ref="0x40615c78"/>
        <function-ref name="startAt" scoped="" ref="0x406421a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40615ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40642758"/>
        <function-ref name="start" scoped="" ref="0x40615760"/>
        <function-ref name="stop" scoped="" ref="0x40615a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x410260c8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410260c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410262b0"/>
        <function-ref name="wait" scoped="" ref="0x41026390"/>
        <function-ref name="cancel" scoped="" ref="0x41026470"/>
        <function-ref name="isFree" scoped="" ref="0x41026550"/>
        <function-ref name="getNow" scoped="" ref="0x41026630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x410268c0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410268c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404e19d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41025d90"/>
        <function-ref name="fired" scoped="" ref="0x41025560"/>
        <function-ref name="startAt" scoped="" ref="0x41025a50"/>
        <function-ref name="isRunning" scoped="" ref="0x410257d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41023048"/>
        <function-ref name="start" scoped="" ref="0x41025048"/>
        <function-ref name="stop" scoped="" ref="0x410252e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41023258" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41023258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41023430"/>
        <function-ref name="suspend" scoped="" ref="0x41023510"/>
        <function-ref name="resume" scoped="" ref="0x410235f0"/>
        <function-ref name="run" scoped="" ref="0x410236d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tasklet" ref="0x40641bd8" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tasklet" scoped="" ref="0x40641bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40641db0"/>
        <function-ref name="runTask" scoped="" ref="0x40641e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40641040" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40641040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40641218"/>
        <function-ref name="suspend" scoped="" ref="0x406412f8"/>
        <function-ref name="resume" scoped="" ref="0x406413d8"/>
        <function-ref name="run" scoped="" ref="0x406414b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4069f410" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4069f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4069f5e8"/>
        <function-ref name="cancel" scoped="" ref="0x4069f6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4069f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4069f908" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4069f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4069fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406a0108" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406a0108"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406a02f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406a3a80" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406a3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a3c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x406a3d38"/>
        <function-ref name="getPayload" scoped="" ref="0x406a3e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a3ef8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406a21e8" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406a21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a23d0"/>
        <function-ref name="getPayload" scoped="" ref="0x406a24b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a2590"/>
        <function-ref name="cancel" scoped="" ref="0x406a2670"/>
        <function-ref name="sendDone" scoped="" ref="0x406a2750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406a2d08" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406a2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a2ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406a0c40" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406a0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a0e18"/>
        <function-ref name="payloadLength" scoped="" ref="0x406a0ef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4069f010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4069f0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x4069f1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4069f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4069fc40" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4069fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4069fe18"/>
        <function-ref name="checkFrame" scoped="" ref="0x4069fef8"/>
        <function-ref name="source" scoped="" ref="0x4069e010"/>
        <function-ref name="destination" scoped="" ref="0x4069e0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4069e1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4069e2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4069e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406a2928" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406a2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406a04e8" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406a04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406a4e90" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406a4e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406a3080"/>
        <function-ref name="source" scoped="" ref="0x406a3160"/>
        <function-ref name="address" scoped="" ref="0x406a3240"/>
        <function-ref name="destination" scoped="" ref="0x406a3320"/>
        <function-ref name="setSource" scoped="" ref="0x406a3400"/>
        <function-ref name="setDestination" scoped="" ref="0x406a34e0"/>
        <function-ref name="type" scoped="" ref="0x406a35c0"/>
        <function-ref name="setType" scoped="" ref="0x406a36a0"/>
        <function-ref name="isForMe" scoped="" ref="0x406a3780"/>
        <function-ref name="setGroup" scoped="" ref="0x406a3860"/>
        <function-ref name="localGroup" scoped="" ref="0x406a3940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406a08c8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406a08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4104f030" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4104f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4104f208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41050b20" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41050b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41050cf8"/>
        <function-ref name="cancel" scoped="" ref="0x41050dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41050eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x410517b0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x410517b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x41051998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41052150" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41052150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41052328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41052408"/>
        <function-ref name="getPayload" scoped="" ref="0x410524e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410525c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410526a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41052880" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41052880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41052a68"/>
        <function-ref name="getPayload" scoped="" ref="0x41052b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41052c28"/>
        <function-ref name="cancel" scoped="" ref="0x41052d08"/>
        <function-ref name="sendDone" scoped="" ref="0x41052de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x410513f0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x410513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410515d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4101dd20" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4101dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4101def8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41053010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410530f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410531d0"/>
        <function-ref name="headerLength" scoped="" ref="0x410532b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41053390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4104f368" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4104f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4104f5c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x4104f6a0"/>
        <function-ref name="source" scoped="" ref="0x4104f780"/>
        <function-ref name="destination" scoped="" ref="0x4104f860"/>
        <function-ref name="setSource" scoped="" ref="0x4104f940"/>
        <function-ref name="setDestination" scoped="" ref="0x4104fa20"/>
        <function-ref name="setGroup" scoped="" ref="0x4104fb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4104fc40" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4104fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4104fe18"/>
        <function-ref name="changed" scoped="" ref="0x4104fef8"/>
        <function-ref name="amGroup" scoped="" ref="0x4104e010"/>
        <function-ref name="setAddress" scoped="" ref="0x4104e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41050388" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41050388"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41050560"/>
        <function-ref name="payloadLength" scoped="" ref="0x41050640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41050720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41050800"/>
        <function-ref name="headerLength" scoped="" ref="0x410508e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410509c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41051010" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41051010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410511f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x41051b90" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x41051b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41051d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410534d0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410534d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410536a8"/>
        <function-ref name="source" scoped="" ref="0x41053788"/>
        <function-ref name="address" scoped="" ref="0x41053868"/>
        <function-ref name="destination" scoped="" ref="0x41053948"/>
        <function-ref name="setSource" scoped="" ref="0x41053a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41053b08"/>
        <function-ref name="type" scoped="" ref="0x41053be8"/>
        <function-ref name="setType" scoped="" ref="0x41053cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41053da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41053e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41052010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x41050010" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x41050010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410501f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x4069a428" loc="54:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4069a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4069a600"/>
        <function-ref name="changed" scoped="" ref="0x4069a6e0"/>
        <function-ref name="amGroup" scoped="" ref="0x4069a7c0"/>
        <function-ref name="setAddress" scoped="" ref="0x4069a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406aee70" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406aee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ad070"/>
        <function-ref name="cancel" scoped="" ref="0x406ad150"/>
        <function-ref name="sendDone" scoped="" ref="0x406ad230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x406ad370" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406ad370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ad548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406ad628"/>
        <function-ref name="request" scoped="" ref="0x406ad708"/>
        <function-ref name="granted" scoped="" ref="0x406ad7e8"/>
        <function-ref name="isOwner" scoped="" ref="0x406ad8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x406ae948" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x406ae948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406aeb20"/>
        <function-ref name="cancel" scoped="" ref="0x406aec00"/>
        <function-ref name="sendDone" scoped="" ref="0x406aece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x406b6030" loc="86:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x406b6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x406b6218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406b62f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406b68e8" loc="89:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406b68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406b6ad0"/>
        <function-ref name="configure" scoped="" ref="0x406b6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406b78c0" loc="85:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406b78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406b7aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406b7b88"/>
        <function-ref name="request" scoped="" ref="0x406b7c68"/>
        <function-ref name="granted" scoped="" ref="0x406b7d48"/>
        <function-ref name="isOwner" scoped="" ref="0x406b7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406b6438" loc="87:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406b6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406b6610"/>
        <function-ref name="userId" scoped="" ref="0x406b66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4105fcb8" loc="44:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4105fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4105fe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4105d010" loc="45:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4105d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4105d1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4105d2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4105d3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x4105d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4105b750" loc="52:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4105b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4105b938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4105ba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4105a030" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4105a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4105a218"/>
        <function-ref name="configure" scoped="" ref="0x4105a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4105a458" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4105a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4105a630"/>
        <function-ref name="isEmpty" scoped="" ref="0x4105a710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4105a7f0"/>
        <function-ref name="dequeue" scoped="" ref="0x4105a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4105b010" loc="51:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4105b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4105b1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105b2d8"/>
        <function-ref name="request" scoped="" ref="0x4105b3b8"/>
        <function-ref name="granted" scoped="" ref="0x4105b498"/>
        <function-ref name="isOwner" scoped="" ref="0x4105b578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4105bb58" loc="53:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4105bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4105bd30"/>
        <function-ref name="userId" scoped="" ref="0x4105be10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4105aa50" loc="69:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4105aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4105ac28"/>
        <function-ref name="runTask" scoped="" ref="0x4105ad08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40710d68" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40710d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4070f010"/>
        <function-ref name="cancel" scoped="" ref="0x4070f0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4070f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4070f330" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4070f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4070f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406ea808" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406ea808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406ea9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406eb6d8" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406eb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406eb8b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x406eb990"/>
        <function-ref name="getPayload" scoped="" ref="0x406eba70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ebb50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406ebc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407105d0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407105d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407107a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40710888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40710968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40710a48"/>
        <function-ref name="headerLength" scoped="" ref="0x40710b28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40710c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406eab50" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406eab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406ead28"/>
        <function-ref name="getDSN" scoped="" ref="0x406eae08"/>
        <function-ref name="setFCF" scoped="" ref="0x406eaee8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40711010"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407110f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407111d0"/>
        <function-ref name="setDSN" scoped="" ref="0x407112b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40711390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40711470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40711550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40711630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40711710"/>
        <function-ref name="localAddr" scoped="" ref="0x407117f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40711950"/>
        <function-ref name="localPan" scoped="" ref="0x40711a30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40711b10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40711bf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40711cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40711db0"/>
        <function-ref name="isForMe" scoped="" ref="0x40711e90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40710010"/>
        <function-ref name="getFCF" scoped="" ref="0x407100f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407101d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407102b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40710390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406ebd70" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406ebd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ea010"/>
        <function-ref name="getPayload" scoped="" ref="0x406ea0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ea1d0"/>
        <function-ref name="cancel" scoped="" ref="0x406ea2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x406ea390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406ea4f0" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406ea4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ea6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4072f6b0" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4072f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072f888"/>
        <function-ref name="cancel" scoped="" ref="0x4072f968"/>
        <function-ref name="sendDone" scoped="" ref="0x4072fa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4072fba8" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4072fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4072fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4070be98" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4070be98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4070a0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4070a1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4070a280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4070a360"/>
        <function-ref name="headerLength" scoped="" ref="0x4070a440"/>
        <function-ref name="metadataLength" scoped="" ref="0x4070a520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x4070ab78" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x4070ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4070ad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4072fee0" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4072fee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072e0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072e1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072e2a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072e380"/>
        <function-ref name="headerLength" scoped="" ref="0x4072e460"/>
        <function-ref name="metadataLength" scoped="" ref="0x4072e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x4070a680" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x4070a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4070a858"/>
        <function-ref name="cancel" scoped="" ref="0x4070a938"/>
        <function-ref name="sendDone" scoped="" ref="0x4070aa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4070b668" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4070b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4070b840"/>
        <function-ref name="cancel" scoped="" ref="0x4070b920"/>
        <function-ref name="sendDone" scoped="" ref="0x4070ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4070bb60" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4070bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4070bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x4070aeb0" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x4070aeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072f0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072f1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072f280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072f360"/>
        <function-ref name="headerLength" scoped="" ref="0x4072f440"/>
        <function-ref name="metadataLength" scoped="" ref="0x4072f520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407804f0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407804f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407806c8"/>
        <function-ref name="address" scoped="" ref="0x407807a8"/>
        <function-ref name="destination" scoped="" ref="0x40780888"/>
        <function-ref name="setSource" scoped="" ref="0x40780968"/>
        <function-ref name="setDestination" scoped="" ref="0x40780a48"/>
        <function-ref name="pan" scoped="" ref="0x40780b28"/>
        <function-ref name="setPan" scoped="" ref="0x40780c08"/>
        <function-ref name="isForMe" scoped="" ref="0x40780ce8"/>
        <function-ref name="localPan" scoped="" ref="0x40780dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40780f08" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40780f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077f0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4077f1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077f2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4077f390"/>
        <function-ref name="headerLength" scoped="" ref="0x4077f470"/>
        <function-ref name="metadataLength" scoped="" ref="0x4077f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40782a58" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40782a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40782c30"/>
        <function-ref name="getDSN" scoped="" ref="0x40782d10"/>
        <function-ref name="setFCF" scoped="" ref="0x40782df0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40782ed0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40781010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407810f0"/>
        <function-ref name="setDSN" scoped="" ref="0x407811d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x407812b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40781390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40781470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40781550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40781630"/>
        <function-ref name="localAddr" scoped="" ref="0x40781710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40781870"/>
        <function-ref name="localPan" scoped="" ref="0x40781950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40781a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40781b10"/>
        <function-ref name="setFramePending" scoped="" ref="0x40781bf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40781cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x40781db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40781e90"/>
        <function-ref name="getFCF" scoped="" ref="0x40780010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407800f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407801d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x407802b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4077f6e0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4077f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077f8b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4077f998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077fa78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4077fb58"/>
        <function-ref name="headerLength" scoped="" ref="0x4077fc38"/>
        <function-ref name="metadataLength" scoped="" ref="0x4077fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x410996b0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x410996b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x41099888"/>
        <function-ref name="address" scoped="" ref="0x41099968"/>
        <function-ref name="destination" scoped="" ref="0x41099a48"/>
        <function-ref name="setSource" scoped="" ref="0x41099b28"/>
        <function-ref name="setDestination" scoped="" ref="0x41099c08"/>
        <function-ref name="pan" scoped="" ref="0x41099ce8"/>
        <function-ref name="setPan" scoped="" ref="0x41099dc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41099ea8"/>
        <function-ref name="localPan" scoped="" ref="0x41098010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41098150" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41098150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41098328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41098408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410984e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410985c8"/>
        <function-ref name="headerLength" scoped="" ref="0x410986a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41098788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x410a0bc0" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x410a0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x410a0d98"/>
        <function-ref name="getDSN" scoped="" ref="0x410a0e78"/>
        <function-ref name="setFCF" scoped="" ref="0x4109a010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4109a0f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4109a1d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4109a2b0"/>
        <function-ref name="setDSN" scoped="" ref="0x4109a390"/>
        <function-ref name="createAckReply" scoped="" ref="0x4109a470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4109a550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4109a630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4109a710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4109a7f0"/>
        <function-ref name="localAddr" scoped="" ref="0x4109a8d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4109aa30"/>
        <function-ref name="localPan" scoped="" ref="0x4109ab10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4109abf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4109acd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4109adb0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4109ae90"/>
        <function-ref name="isForMe" scoped="" ref="0x41099010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x410990f0"/>
        <function-ref name="getFCF" scoped="" ref="0x410991d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x410992b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41099390"/>
        <function-ref name="getFramePending" scoped="" ref="0x41099470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x410988f8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410988f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x41098ad0"/>
        <function-ref name="changed" scoped="" ref="0x41098bb0"/>
        <function-ref name="amGroup" scoped="" ref="0x41098c90"/>
        <function-ref name="setAddress" scoped="" ref="0x41098d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41098ed0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41098ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410970c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410971a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41097280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41097360"/>
        <function-ref name="headerLength" scoped="" ref="0x41097440"/>
        <function-ref name="metadataLength" scoped="" ref="0x41097520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407bd0a0" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407bd278"/>
        <function-ref name="cancel" scoped="" ref="0x407bd358"/>
        <function-ref name="sendDone" scoped="" ref="0x407bd438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407bd598" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407bd598"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407bd770"/>
        <function-ref name="header" scoped="" ref="0x407bd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40793760" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40793760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40793938"/>
        <function-ref name="cancel" scoped="" ref="0x40793a18"/>
        <function-ref name="sendDone" scoped="" ref="0x40793af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407bd9b0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407bd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x407bdb88"/>
        <function-ref name="reportChannelError" scoped="" ref="0x407bdc68"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x407bdd48"/>
        <function-ref name="getSender" scoped="" ref="0x407bde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40793c38" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40793c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40793e10"/>
        <function-ref name="header" scoped="" ref="0x40793ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410e8a70" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410e8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e8c48"/>
        <function-ref name="cancel" scoped="" ref="0x410e8d28"/>
        <function-ref name="sendDone" scoped="" ref="0x410e8e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410e7010" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e71e8"/>
        <function-ref name="header" scoped="" ref="0x410e72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x410e6070" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410e6070"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410e6248"/>
        <function-ref name="clearAll" scoped="" ref="0x410e6328"/>
        <function-ref name="get" scoped="" ref="0x410e6408"/>
        <function-ref name="set" scoped="" ref="0x410e64e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410ebd90" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410ebd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e8010"/>
        <function-ref name="cancel" scoped="" ref="0x410e80f0"/>
        <function-ref name="sendDone" scoped="" ref="0x410e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x410e79c0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x410e79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x410e7b98"/>
        <function-ref name="insertNode" scoped="" ref="0x410e7c78"/>
        <function-ref name="getNode" scoped="" ref="0x410e7d58"/>
        <function-ref name="evicted" scoped="" ref="0x410e7e38"/>
        <function-ref name="getIndex" scoped="" ref="0x410e7f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x410e8310" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x410e8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e84e8"/>
        <function-ref name="header" scoped="" ref="0x410e85c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410e8708" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410e8708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410e88e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x410e7408" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x410e7408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x410e75e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x410e76c0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x410e77a0"/>
        <function-ref name="getSender" scoped="" ref="0x410e7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407a8990" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407a8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407a8b68"/>
        <function-ref name="insertNode" scoped="" ref="0x407a8c48"/>
        <function-ref name="getNode" scoped="" ref="0x407a8d28"/>
        <function-ref name="evicted" scoped="" ref="0x407a8e08"/>
        <function-ref name="getIndex" scoped="" ref="0x407a8ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x407a23f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407a23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a25c8"/>
        <function-ref name="clearAll" scoped="" ref="0x407a26a8"/>
        <function-ref name="get" scoped="" ref="0x407a2788"/>
        <function-ref name="set" scoped="" ref="0x407a2868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407a5918" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407a5918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407a5af0"/>
        <function-ref name="insertNode" scoped="" ref="0x407a5bd0"/>
        <function-ref name="getNode" scoped="" ref="0x407a5cb0"/>
        <function-ref name="evicted" scoped="" ref="0x407a5d90"/>
        <function-ref name="getIndex" scoped="" ref="0x407a5e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407a5580" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407a5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407a5758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x410e44c0" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410e44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410e4698"/>
        <function-ref name="clearAll" scoped="" ref="0x410e4778"/>
        <function-ref name="get" scoped="" ref="0x410e4858"/>
        <function-ref name="set" scoped="" ref="0x410e4938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408ff520" loc="85:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408ff520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ff6f8"/>
        <function-ref name="cancel" scoped="" ref="0x408ff7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ff8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408ffa18" loc="86:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408ffa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ffbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407badf0" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407badf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40900010"/>
        <function-ref name="cancel" scoped="" ref="0x409000f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40900ce0" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40900ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40900eb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408ff010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ff0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408ff1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x408ff2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408ff390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408ffd50" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408ffd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408fff28"/>
        <function-ref name="payloadLength" scoped="" ref="0x408fe018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fe0f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408fe1d8"/>
        <function-ref name="headerLength" scoped="" ref="0x408fe2b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408fe398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40900330" loc="78:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40900330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40900508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x408fe4d8" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408fe4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408fe6b0"/>
        <function-ref name="noAck" scoped="" ref="0x408fe790"/>
        <function-ref name="wasAcked" scoped="" ref="0x408fe870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40900648" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40900648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40900820"/>
        <function-ref name="setRetries" scoped="" ref="0x40900900"/>
        <function-ref name="getRetries" scoped="" ref="0x409009e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40900ac0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40900ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410d4010" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d41e8"/>
        <function-ref name="cancel" scoped="" ref="0x410d42c8"/>
        <function-ref name="sendDone" scoped="" ref="0x410d43a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x4110e430" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x4110e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4110e608"/>
        <function-ref name="runTask" scoped="" ref="0x4110e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x410d4a70" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x410d4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4110f570"/>
        <function-ref name="fired" scoped="" ref="0x41110810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41110f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x41110cc0"/>
        <function-ref name="getdt" scoped="" ref="0x4110fa20"/>
        <function-ref name="gett0" scoped="" ref="0x4110f7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x41110a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411100b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4110f250"/>
        <function-ref name="startOneShot" scoped="" ref="0x41110338"/>
        <function-ref name="stop" scoped="" ref="0x411105b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410d9ba8" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410d9ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d9d80"/>
        <function-ref name="cancel" scoped="" ref="0x410d9e60"/>
        <function-ref name="sendDone" scoped="" ref="0x410d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x410d57e8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x410d57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410d59c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410d5aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d5b80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410d5c60"/>
        <function-ref name="headerLength" scoped="" ref="0x410d5d40"/>
        <function-ref name="metadataLength" scoped="" ref="0x410d5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4110fc50" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4110fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4110fe28"/>
        <function-ref name="payloadLength" scoped="" ref="0x4110ff08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4110e010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4110e0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x4110e1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4110e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x410d44e8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x410d44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x410d46c0"/>
        <function-ref name="noAck" scoped="" ref="0x410d47a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x410d4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x410d5150" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x410d5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x410d5328"/>
        <function-ref name="setRetries" scoped="" ref="0x410d5408"/>
        <function-ref name="getRetries" scoped="" ref="0x410d54e8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x410d55c8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x410d56a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4110d9e0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4110d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4110a508"/>
        <function-ref name="fired" scoped="" ref="0x4110c7a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4110cea8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4110cc50"/>
        <function-ref name="getdt" scoped="" ref="0x4110a9b8"/>
        <function-ref name="gett0" scoped="" ref="0x4110a760"/>
        <function-ref name="isRunning" scoped="" ref="0x4110c9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4110c048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4110a1e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4110c2c8"/>
        <function-ref name="stop" scoped="" ref="0x4110c548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407fd618" loc="49:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407fd618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40814130"/>
        <function-ref name="fired" scoped="" ref="0x407fc3c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407fcad0"/>
        <function-ref name="isOneShot" scoped="" ref="0x407fc878"/>
        <function-ref name="getdt" scoped="" ref="0x408145e0"/>
        <function-ref name="gett0" scoped="" ref="0x40814388"/>
        <function-ref name="isRunning" scoped="" ref="0x407fc620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407fdc40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407fcdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x407fdec0"/>
        <function-ref name="stop" scoped="" ref="0x407fc170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40811648" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40811648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4080e170"/>
        <function-ref name="fired" scoped="" ref="0x408103f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40810b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x408108a8"/>
        <function-ref name="getdt" scoped="" ref="0x4080e620"/>
        <function-ref name="gett0" scoped="" ref="0x4080e3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40810650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40811c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40810e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40811ef0"/>
        <function-ref name="stop" scoped="" ref="0x408101a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4080e980" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4080e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4080d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40814e70" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40814e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40811070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x408200c0" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x408200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40820810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40820d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40820a88"/>
        <function-ref name="overflow" scoped="" ref="0x4081d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4080a090" loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4080a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4080a268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4080a658" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4080a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40808b10"/>
        <function-ref name="fired" scoped="" ref="0x408082e0"/>
        <function-ref name="startAt" scoped="" ref="0x408087d0"/>
        <function-ref name="isRunning" scoped="" ref="0x40808558"/>
        <function-ref name="getAlarm" scoped="" ref="0x40808d88"/>
        <function-ref name="start" scoped="" ref="0x4080ada8"/>
        <function-ref name="stop" scoped="" ref="0x40808068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x408a6850" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408a6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408a4d58"/>
        <function-ref name="fired" scoped="" ref="0x408a4528"/>
        <function-ref name="startAt" scoped="" ref="0x408a4a18"/>
        <function-ref name="isRunning" scoped="" ref="0x408a47a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x408a3010"/>
        <function-ref name="start" scoped="" ref="0x408a4010"/>
        <function-ref name="stop" scoped="" ref="0x408a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408a6418" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408a6418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a65f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408a3340" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408a3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408a3a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408a2010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408a3d08"/>
        <function-ref name="overflow" scoped="" ref="0x408a2288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41126b60" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41126b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41126d38"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41126e18"/>
        <function-ref name="getControlA" scoped="" ref="0x41126ef8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41125010"/>
        <function-ref name="setControlB" scoped="" ref="0x411250f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411251d0"/>
        <function-ref name="getControlB" scoped="" ref="0x411252b0"/>
        <function-ref name="setControlA" scoped="" ref="0x41125390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4112dd18" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4112dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4112a1e8"/>
        <function-ref name="fired" scoped="" ref="0x4112b990"/>
        <function-ref name="startAt" scoped="" ref="0x4112be80"/>
        <function-ref name="isRunning" scoped="" ref="0x4112bc08"/>
        <function-ref name="getAlarm" scoped="" ref="0x4112a460"/>
        <function-ref name="start" scoped="" ref="0x4112b478"/>
        <function-ref name="stop" scoped="" ref="0x4112b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4112d8e0" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4112d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4112dab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4112a790" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4112a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4112aee0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x411283e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41128170"/>
        <function-ref name="overflow" scoped="" ref="0x41128660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41122010" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41122010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x411221e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x411222c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x411223a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x41122488"/>
        <function-ref name="countBusy" scoped="" ref="0x41122568"/>
        <function-ref name="compareABusy" scoped="" ref="0x41122648"/>
        <function-ref name="getAssr" scoped="" ref="0x41122728"/>
        <function-ref name="setAssr" scoped="" ref="0x41122808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41125580" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41125580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41123ad8"/>
        <function-ref name="fired" scoped="" ref="0x411230f8"/>
        <function-ref name="get" scoped="" ref="0x41125bc8"/>
        <function-ref name="reset" scoped="" ref="0x41123370"/>
        <function-ref name="isOn" scoped="" ref="0x41123d50"/>
        <function-ref name="set" scoped="" ref="0x41125e40"/>
        <function-ref name="start" scoped="" ref="0x411235e8"/>
        <function-ref name="stop" scoped="" ref="0x41123860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41128950" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41128950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41126418"/>
        <function-ref name="test" scoped="" ref="0x41127f08"/>
        <function-ref name="get" scoped="" ref="0x41127010"/>
        <function-ref name="setScale" scoped="" ref="0x41126690"/>
        <function-ref name="getScale" scoped="" ref="0x41126930"/>
        <function-ref name="reset" scoped="" ref="0x411277a0"/>
        <function-ref name="overflow" scoped="" ref="0x41127528"/>
        <function-ref name="isOn" scoped="" ref="0x411261a0"/>
        <function-ref name="set" scoped="" ref="0x41127288"/>
        <function-ref name="start" scoped="" ref="0x41127a18"/>
        <function-ref name="stop" scoped="" ref="0x41127c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40874878" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40874878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40874a50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40874b30"/>
        <function-ref name="getControlA" scoped="" ref="0x40874c10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40874cf0"/>
        <function-ref name="setControlB" scoped="" ref="0x40874dd0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40874eb0"/>
        <function-ref name="getControlB" scoped="" ref="0x40873010"/>
        <function-ref name="setControlA" scoped="" ref="0x408730f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40871010" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40871010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x408711e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x408712c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x408713a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40871488"/>
        <function-ref name="countBusy" scoped="" ref="0x40871568"/>
        <function-ref name="compareABusy" scoped="" ref="0x40871648"/>
        <function-ref name="getAssr" scoped="" ref="0x40871728"/>
        <function-ref name="setAssr" scoped="" ref="0x40871808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40873418" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40873418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408729f0"/>
        <function-ref name="fired" scoped="" ref="0x40872010"/>
        <function-ref name="get" scoped="" ref="0x40873a60"/>
        <function-ref name="reset" scoped="" ref="0x40872288"/>
        <function-ref name="isOn" scoped="" ref="0x40872c68"/>
        <function-ref name="set" scoped="" ref="0x40873cd8"/>
        <function-ref name="start" scoped="" ref="0x40872500"/>
        <function-ref name="stop" scoped="" ref="0x40872778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4085b550" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4085b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40874010"/>
        <function-ref name="test" scoped="" ref="0x4085aab8"/>
        <function-ref name="get" scoped="" ref="0x4085bb98"/>
        <function-ref name="setScale" scoped="" ref="0x40874288"/>
        <function-ref name="getScale" scoped="" ref="0x40874528"/>
        <function-ref name="reset" scoped="" ref="0x4085a350"/>
        <function-ref name="overflow" scoped="" ref="0x4085a0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4085ad30"/>
        <function-ref name="set" scoped="" ref="0x4085be10"/>
        <function-ref name="start" scoped="" ref="0x4085a5c8"/>
        <function-ref name="stop" scoped="" ref="0x4085a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4086a8d0" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4086a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4086aaa8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4086ab88"/>
        <function-ref name="getControlA" scoped="" ref="0x4086ac68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4086ad48"/>
        <function-ref name="setControlB" scoped="" ref="0x4086ae28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4086af08"/>
        <function-ref name="getControlB" scoped="" ref="0x40869010"/>
        <function-ref name="setControlA" scoped="" ref="0x408690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40868f20" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40868f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40882110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40882398" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40882398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40882570"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40882650"/>
        <function-ref name="controlABusy" scoped="" ref="0x40882730"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40882810"/>
        <function-ref name="countBusy" scoped="" ref="0x408828f0"/>
        <function-ref name="compareABusy" scoped="" ref="0x408829d0"/>
        <function-ref name="getAssr" scoped="" ref="0x40882ab0"/>
        <function-ref name="setAssr" scoped="" ref="0x40882b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40869418" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40869418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408689f0"/>
        <function-ref name="fired" scoped="" ref="0x40868010"/>
        <function-ref name="get" scoped="" ref="0x40869a60"/>
        <function-ref name="reset" scoped="" ref="0x40868288"/>
        <function-ref name="isOn" scoped="" ref="0x40868c68"/>
        <function-ref name="set" scoped="" ref="0x40869cd8"/>
        <function-ref name="start" scoped="" ref="0x40868500"/>
        <function-ref name="stop" scoped="" ref="0x40868778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4086d5f8" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4086d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4086a068"/>
        <function-ref name="test" scoped="" ref="0x4086bb50"/>
        <function-ref name="get" scoped="" ref="0x4086dc40"/>
        <function-ref name="setScale" scoped="" ref="0x4086a2e0"/>
        <function-ref name="getScale" scoped="" ref="0x4086a580"/>
        <function-ref name="reset" scoped="" ref="0x4086b3e8"/>
        <function-ref name="overflow" scoped="" ref="0x4086b170"/>
        <function-ref name="isOn" scoped="" ref="0x4086bdc8"/>
        <function-ref name="set" scoped="" ref="0x4086deb8"/>
        <function-ref name="start" scoped="" ref="0x4086b660"/>
        <function-ref name="stop" scoped="" ref="0x4086b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x408c34d8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x408c34d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408c36b0"/>
        <function-ref name="runTask" scoped="" ref="0x408c3790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408c5a48" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408c5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408c3010"/>
        <function-ref name="fired" scoped="" ref="0x408c4718"/>
        <function-ref name="startAt" scoped="" ref="0x408c4c08"/>
        <function-ref name="isRunning" scoped="" ref="0x408c4990"/>
        <function-ref name="getAlarm" scoped="" ref="0x408c3288"/>
        <function-ref name="start" scoped="" ref="0x408c4200"/>
        <function-ref name="stop" scoped="" ref="0x408c44a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4080b720" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4080b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408c5248"/>
        <function-ref name="fired" scoped="" ref="0x408c64e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408c6bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x408c6998"/>
        <function-ref name="getdt" scoped="" ref="0x408c56f8"/>
        <function-ref name="gett0" scoped="" ref="0x408c54a0"/>
        <function-ref name="isRunning" scoped="" ref="0x408c6740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4080bd48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408c6f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x408c6010"/>
        <function-ref name="stop" scoped="" ref="0x408c6290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x408f0bc8" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x408f0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408f0da0"/>
        <function-ref name="runTask" scoped="" ref="0x408f0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x408f3968" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x408f3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408f04c8"/>
        <function-ref name="fired" scoped="" ref="0x408f2768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408f2e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x408f2c18"/>
        <function-ref name="getdt" scoped="" ref="0x408f0978"/>
        <function-ref name="gett0" scoped="" ref="0x408f0720"/>
        <function-ref name="isRunning" scoped="" ref="0x408f29c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408f2010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408f01a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x408f2290"/>
        <function-ref name="stop" scoped="" ref="0x408f2510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408bf600" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408bf600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408f31a8"/>
        <function-ref name="fired" scoped="" ref="0x408f53d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408f5b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x408f58a8"/>
        <function-ref name="getdt" scoped="" ref="0x408f3678"/>
        <function-ref name="gett0" scoped="" ref="0x408f3410"/>
        <function-ref name="isRunning" scoped="" ref="0x408f5640"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408bfc38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408f5e40"/>
        <function-ref name="startOneShot" scoped="" ref="0x408bfec8"/>
        <function-ref name="stop" scoped="" ref="0x408f5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408ee0a0" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408ee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ee6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x408eea38" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408eea38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ed200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ed6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ed478"/>
        <function-ref name="overflow" scoped="" ref="0x408ed968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408fbe28" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408fbe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40912050"/>
        <function-ref name="stopDone" scoped="" ref="0x40912130"/>
        <function-ref name="start" scoped="" ref="0x40912210"/>
        <function-ref name="stop" scoped="" ref="0x409122f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4090b010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4090b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090b1e8"/>
        <function-ref name="cancel" scoped="" ref="0x4090b2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4090b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4090b508" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4090b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40912450" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40912450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40912628"/>
        <function-ref name="cancel" scoped="" ref="0x40912708"/>
        <function-ref name="sendDone" scoped="" ref="0x409127e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40912c60" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40912c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40912e38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40912f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090c010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090c0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x4090c1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4090c3f0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4090c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4090c5c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4090c6a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4090c788"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4090c868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4090c9f8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4090c9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090cbd0"/>
        <function-ref name="stopDone" scoped="" ref="0x4090ccb0"/>
        <function-ref name="start" scoped="" ref="0x4090cd90"/>
        <function-ref name="stop" scoped="" ref="0x4090ce70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40912948" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40912948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40912b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4090b840" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4090b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090ba18"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090baf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090bbd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090bcb8"/>
        <function-ref name="headerLength" scoped="" ref="0x4090bd98"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4116c060" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4116c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4116c238"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4116c318"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4116c3f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4116c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40924010" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40924010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409241e8"/>
        <function-ref name="stopDone" scoped="" ref="0x409242c8"/>
        <function-ref name="start" scoped="" ref="0x409243a8"/>
        <function-ref name="stop" scoped="" ref="0x40924488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40945340" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40945340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40945518"/>
        <function-ref name="turnOn" scoped="" ref="0x409455f8"/>
        <function-ref name="setChannel" scoped="" ref="0x409456d8"/>
        <function-ref name="done" scoped="" ref="0x409457b8"/>
        <function-ref name="standby" scoped="" ref="0x40945898"/>
        <function-ref name="getChannel" scoped="" ref="0x40945978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409245e8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409245e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409247c0"/>
        <function-ref name="cancel" scoped="" ref="0x409248a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40924980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40944010" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40944010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409441e8"/>
        <function-ref name="header" scoped="" ref="0x409442c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40924ae0" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40924ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40924cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40945ab8" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40945ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40945c90"/>
        <function-ref name="ready" scoped="" ref="0x40945d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40945e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40924df8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40924df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40945010"/>
        <function-ref name="setChannel" scoped="" ref="0x409450f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411683b0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411683b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41168588"/>
        <function-ref name="stopDone" scoped="" ref="0x41168668"/>
        <function-ref name="start" scoped="" ref="0x41168748"/>
        <function-ref name="stop" scoped="" ref="0x41168828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x41168988" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x41168988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41168b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41167a70" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41167a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41167c48"/>
        <function-ref name="turnOn" scoped="" ref="0x41167d28"/>
        <function-ref name="setChannel" scoped="" ref="0x41167e08"/>
        <function-ref name="done" scoped="" ref="0x41167ee8"/>
        <function-ref name="standby" scoped="" ref="0x41166010"/>
        <function-ref name="getChannel" scoped="" ref="0x411660f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41168cc0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41168cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41168e98"/>
        <function-ref name="cancel" scoped="" ref="0x41167010"/>
        <function-ref name="sendDone" scoped="" ref="0x411670f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x411645c8" loc="189:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x411645c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411647a0"/>
        <function-ref name="runTask" scoped="" ref="0x41164880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41166cc0" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41166cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41166e98"/>
        <function-ref name="header" scoped="" ref="0x41164010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41164a00" loc="144:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41164a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41164bd8"/>
        <function-ref name="runTask" scoped="" ref="0x41164cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41167250" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41167250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41167428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41164190" loc="322:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41164190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41164368"/>
        <function-ref name="runTask" scoped="" ref="0x41164448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x411667e8" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x411667e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411669c0"/>
        <function-ref name="ready" scoped="" ref="0x41166aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x41166b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41167568" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41167568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41167740"/>
        <function-ref name="setChannel" scoped="" ref="0x41167820"/>
        <function-ref name="getChannel" scoped="" ref="0x41167900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41166230" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41166230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41166408"/>
        <function-ref name="suspend" scoped="" ref="0x411664e8"/>
        <function-ref name="resume" scoped="" ref="0x411665c8"/>
        <function-ref name="run" scoped="" ref="0x411666a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409610c0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409610c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40961298"/>
        <function-ref name="ready" scoped="" ref="0x40961378"/>
        <function-ref name="sendDone" scoped="" ref="0x40961458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409615b8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409615b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40961790"/>
        <function-ref name="header" scoped="" ref="0x40961870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409619b0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409619b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40961b88"/>
        <function-ref name="wait" scoped="" ref="0x40961c68"/>
        <function-ref name="cancel" scoped="" ref="0x40961d48"/>
        <function-ref name="isFree" scoped="" ref="0x40961e28"/>
        <function-ref name="getNow" scoped="" ref="0x40961f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097b090" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4097b268"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4097b348"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4097b428"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4097b508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40962c60" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40962c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40962e38"/>
        <function-ref name="header" scoped="" ref="0x40962f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40962788" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40962788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40962960"/>
        <function-ref name="ready" scoped="" ref="0x40962a40"/>
        <function-ref name="sendDone" scoped="" ref="0x40962b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41186cd8" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41186cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41186eb0"/>
        <function-ref name="ready" scoped="" ref="0x41185010"/>
        <function-ref name="sendDone" scoped="" ref="0x411850f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41185250" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41185250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41185428"/>
        <function-ref name="header" scoped="" ref="0x41185508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x41185648" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41185648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41185820"/>
        <function-ref name="wait" scoped="" ref="0x41185900"/>
        <function-ref name="cancel" scoped="" ref="0x411859e0"/>
        <function-ref name="isFree" scoped="" ref="0x41185ac0"/>
        <function-ref name="getNow" scoped="" ref="0x41185ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41185ce0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41185ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41185eb8"/>
        <function-ref name="rand32" scoped="" ref="0x41184010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41184170" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41184170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41184348"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x41184428"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x41184508"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x411845e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41186890" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41186890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41186a68"/>
        <function-ref name="header" scoped="" ref="0x41186b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x411863b8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x411863b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41186590"/>
        <function-ref name="ready" scoped="" ref="0x41186670"/>
        <function-ref name="sendDone" scoped="" ref="0x41186750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x41184768" loc="78:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x41184768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41184940"/>
        <function-ref name="runTask" scoped="" ref="0x41184a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097cc68" loc="46:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097ce40"/>
        <function-ref name="rand32" scoped="" ref="0x4097cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097c3a8" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097c3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097f188" loc="44:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097f188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097f360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097a6e0" loc="48:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097a8b8"/>
        <function-ref name="rand32" scoped="" ref="0x4097a998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097ee08" loc="47:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097e8e8" loc="46:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097e8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097eac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4098e1a0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4098e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098e378"/>
        <function-ref name="ready" scoped="" ref="0x4098e458"/>
        <function-ref name="sendDone" scoped="" ref="0x4098e538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4098e698" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4098e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4098e870"/>
        <function-ref name="header" scoped="" ref="0x4098e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4098ea90" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4098ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4098ec68"/>
        <function-ref name="wait" scoped="" ref="0x4098ed48"/>
        <function-ref name="cancel" scoped="" ref="0x4098ee28"/>
        <function-ref name="isFree" scoped="" ref="0x4098ef08"/>
        <function-ref name="getNow" scoped="" ref="0x40995010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40995ac8" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40995ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40995ca0"/>
        <function-ref name="get" scoped="" ref="0x40995d80"/>
        <function-ref name="setValue" scoped="" ref="0x40995e60"/>
        <function-ref name="set" scoped="" ref="0x40994010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40995170" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40995170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40995348"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40995428"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40995508"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409955e8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409956c8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409957a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40995888"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40995968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40990818" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40990818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409909f0"/>
        <function-ref name="header" scoped="" ref="0x40990ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40990340" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40990340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40990518"/>
        <function-ref name="ready" scoped="" ref="0x409905f8"/>
        <function-ref name="sendDone" scoped="" ref="0x409906d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40990c10" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40990c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40990de8"/>
        <function-ref name="noAck" scoped="" ref="0x40990ec8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4098e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409af0e8" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409af0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409af2c0"/>
        <function-ref name="stopDone" scoped="" ref="0x409af3a0"/>
        <function-ref name="start" scoped="" ref="0x409af480"/>
        <function-ref name="stop" scoped="" ref="0x409af560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409a5ef0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409a5ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c40e0"/>
        <function-ref name="request" scoped="" ref="0x409c41c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c24f0" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c26c8"/>
        <function-ref name="ready" scoped="" ref="0x409c27a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c2888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409c29e8" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409c29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c2bc0"/>
        <function-ref name="header" scoped="" ref="0x409c2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409afe90" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409afe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409a5080"/>
        <function-ref name="turnOn" scoped="" ref="0x409a5160"/>
        <function-ref name="setChannel" scoped="" ref="0x409a5240"/>
        <function-ref name="done" scoped="" ref="0x409a5320"/>
        <function-ref name="standby" scoped="" ref="0x409a5400"/>
        <function-ref name="getChannel" scoped="" ref="0x409a54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c4300" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c44d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c45b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c4698"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c4778"/>
        <function-ref name="headerLength" scoped="" ref="0x409c4858"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c4938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409c3c40" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409c3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c3e98"/>
        <function-ref name="turnOn" scoped="" ref="0x409c2010"/>
        <function-ref name="setChannel" scoped="" ref="0x409c20f0"/>
        <function-ref name="done" scoped="" ref="0x409c21d0"/>
        <function-ref name="standby" scoped="" ref="0x409c22b0"/>
        <function-ref name="getChannel" scoped="" ref="0x409c2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409c4a98" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a5af8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a5cd0"/>
        <function-ref name="header" scoped="" ref="0x409a5db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409c3908" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409c3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409c4e00" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409c4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c3010"/>
        <function-ref name="stopDone" scoped="" ref="0x409c30f0"/>
        <function-ref name="start" scoped="" ref="0x409c31d0"/>
        <function-ref name="stop" scoped="" ref="0x409c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c1250" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c1428"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c1508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c15e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c16c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409c17a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c1888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409afb78" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409afb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409afd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409c19e8" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409c19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409c3410" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409c3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c35e8"/>
        <function-ref name="cancel" scoped="" ref="0x409c36c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c37a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a5620" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a5620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a57f8"/>
        <function-ref name="ready" scoped="" ref="0x409a58d8"/>
        <function-ref name="sendDone" scoped="" ref="0x409a59b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409c2e00" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409c2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c1010"/>
        <function-ref name="request" scoped="" ref="0x409c10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409af6a0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409af6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409af878"/>
        <function-ref name="cancel" scoped="" ref="0x409af958"/>
        <function-ref name="sendDone" scoped="" ref="0x409afa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409efaf0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409efaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409efcc8"/>
        <function-ref name="get" scoped="" ref="0x409efda8"/>
        <function-ref name="setValue" scoped="" ref="0x409efe88"/>
        <function-ref name="set" scoped="" ref="0x409ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409f0270" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409f0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f0448"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f0528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f0608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f06e8"/>
        <function-ref name="headerLength" scoped="" ref="0x409f07c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f08a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409ef358" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409ef358"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ef530"/>
        <function-ref name="payloadLength" scoped="" ref="0x409ef610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ef6f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409ef7d0"/>
        <function-ref name="headerLength" scoped="" ref="0x409ef8b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ef990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409f3bd0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409f16f0"/>
        <function-ref name="clear" scoped="" ref="0x409f1aa0"/>
        <function-ref name="isValid" scoped="" ref="0x409f1340"/>
        <function-ref name="set" scoped="" ref="0x409f1e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409f0ac8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ef128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409bd428" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409bd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409bdf28"/>
        <function-ref name="clear" scoped="" ref="0x409f32e8"/>
        <function-ref name="isValid" scoped="" ref="0x409bdb78"/>
        <function-ref name="set" scoped="" ref="0x409f3698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41198af8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41198af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41198cd0"/>
        <function-ref name="get" scoped="" ref="0x41198db0"/>
        <function-ref name="setValue" scoped="" ref="0x41198e90"/>
        <function-ref name="set" scoped="" ref="0x41197010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41198330" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41198330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41198508"/>
        <function-ref name="payloadLength" scoped="" ref="0x411985e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411986c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411987a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41198888"/>
        <function-ref name="metadataLength" scoped="" ref="0x41198968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41196430" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41196430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41196608"/>
        <function-ref name="payloadLength" scoped="" ref="0x411966e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411967c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411968a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41196988"/>
        <function-ref name="metadataLength" scoped="" ref="0x41196a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4119bca8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4119bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4119a7c0"/>
        <function-ref name="clear" scoped="" ref="0x4119ab70"/>
        <function-ref name="isValid" scoped="" ref="0x4119a410"/>
        <function-ref name="set" scoped="" ref="0x4119af20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x41197200" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41197200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41197848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x41197b08" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x41197b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41196200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4119c4f0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4119c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4119b010"/>
        <function-ref name="clear" scoped="" ref="0x4119b3c0"/>
        <function-ref name="isValid" scoped="" ref="0x4119cc40"/>
        <function-ref name="set" scoped="" ref="0x4119b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409f4010" loc="20:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f4658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409ecce0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409ecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eceb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409eb010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409eb0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409eb1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x409eb2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409eb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409eb520" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409eb520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eb6f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409eb7d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409eb8b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409eb998"/>
        <function-ref name="headerLength" scoped="" ref="0x409eba78"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ebb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409ec718" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409ec718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ec900"/>
        <function-ref name="get" scoped="" ref="0x409ec9e0"/>
        <function-ref name="setValue" scoped="" ref="0x409ecac0"/>
        <function-ref name="set" scoped="" ref="0x409ecba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409fadf0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409fadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409f9010"/>
        <function-ref name="stopDone" scoped="" ref="0x409f90f0"/>
        <function-ref name="start" scoped="" ref="0x409f91d0"/>
        <function-ref name="stop" scoped="" ref="0x409f92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409f8cc0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409f8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409f8e98"/>
        <function-ref name="request" scoped="" ref="0x40a18010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a16330" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a16330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a16508"/>
        <function-ref name="ready" scoped="" ref="0x40a165e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a166c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a16828" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a16828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a16a00"/>
        <function-ref name="header" scoped="" ref="0x40a16ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409f9be0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409f9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409f9db8"/>
        <function-ref name="turnOn" scoped="" ref="0x409f9e98"/>
        <function-ref name="setChannel" scoped="" ref="0x409f8010"/>
        <function-ref name="done" scoped="" ref="0x409f80f0"/>
        <function-ref name="standby" scoped="" ref="0x409f81d0"/>
        <function-ref name="getChannel" scoped="" ref="0x409f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a18150" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a18150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a18328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a18408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a184e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a185c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a186a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a18788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40a17a80" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40a17a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a17cd8"/>
        <function-ref name="turnOn" scoped="" ref="0x40a17db8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a17e98"/>
        <function-ref name="done" scoped="" ref="0x40a16010"/>
        <function-ref name="standby" scoped="" ref="0x40a160f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40a161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40a188e8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a188e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a18ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409f88c8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409f88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f8aa0"/>
        <function-ref name="header" scoped="" ref="0x409f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40a17748" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40a17748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a17920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a18c50" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a18e28"/>
        <function-ref name="stopDone" scoped="" ref="0x40a18f08"/>
        <function-ref name="start" scoped="" ref="0x40a17010"/>
        <function-ref name="stop" scoped="" ref="0x40a170f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a15090" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a15090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a15268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a15348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a15428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a15508"/>
        <function-ref name="headerLength" scoped="" ref="0x40a155e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a156c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409f98c8" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409f98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a15828" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a15828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a15a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40a17250" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40a17250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a17428"/>
        <function-ref name="cancel" scoped="" ref="0x40a17508"/>
        <function-ref name="sendDone" scoped="" ref="0x40a175e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409f83f0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409f83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f85c8"/>
        <function-ref name="ready" scoped="" ref="0x409f86a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409f8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40a16c40" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40a16c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a16e18"/>
        <function-ref name="request" scoped="" ref="0x40a16ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409f93f0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409f93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f95c8"/>
        <function-ref name="cancel" scoped="" ref="0x409f96a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409f9788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a0f368" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a0f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a0f540"/>
        <function-ref name="request" scoped="" ref="0x40a0f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a0c510" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a0c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0b0f8"/>
        <function-ref name="get" scoped="" ref="0x40a0ce18"/>
        <function-ref name="isSet" scoped="" ref="0x40a0cb58"/>
        <function-ref name="set" scoped="" ref="0x40a0b3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a223f0" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a225c8"/>
        <function-ref name="get" scoped="" ref="0x40a226a8"/>
        <function-ref name="setValue" scoped="" ref="0x40a22788"/>
        <function-ref name="set" scoped="" ref="0x40a22868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a25480" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a24010"/>
        <function-ref name="clear" scoped="" ref="0x40a243c0"/>
        <function-ref name="isValid" scoped="" ref="0x40a25bd0"/>
        <function-ref name="set" scoped="" ref="0x40a24770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a101d8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a101d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a103b0"/>
        <function-ref name="turnOn" scoped="" ref="0x40a10490"/>
        <function-ref name="setChannel" scoped="" ref="0x40a10570"/>
        <function-ref name="done" scoped="" ref="0x40a10650"/>
        <function-ref name="standby" scoped="" ref="0x40a10730"/>
        <function-ref name="getChannel" scoped="" ref="0x40a10810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a210e0" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a210e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a212b8"/>
        <function-ref name="wait" scoped="" ref="0x40a21398"/>
        <function-ref name="cancel" scoped="" ref="0x40a21478"/>
        <function-ref name="isFree" scoped="" ref="0x40a21558"/>
        <function-ref name="getNow" scoped="" ref="0x40a21638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a0e190" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a0e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0ed58"/>
        <function-ref name="get" scoped="" ref="0x40a0ea98"/>
        <function-ref name="isSet" scoped="" ref="0x40a0e7d8"/>
        <function-ref name="set" scoped="" ref="0x40a0c048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a0f7d0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a0f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0f9a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a0fa88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a0fb68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a0fc48"/>
        <function-ref name="headerLength" scoped="" ref="0x40a0fd28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a0fe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a26ac8" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a26ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a26d20"/>
        <function-ref name="headerLength" scoped="" ref="0x40a26e00"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a26ee0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a25010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a10f08" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a10f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0f0f0"/>
        <function-ref name="header" scoped="" ref="0x40a0f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a27010" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a27010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404e19d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a264e0"/>
        <function-ref name="fired" scoped="" ref="0x40a27c78"/>
        <function-ref name="startAt" scoped="" ref="0x40a261a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a27ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a26758"/>
        <function-ref name="start" scoped="" ref="0x40a27760"/>
        <function-ref name="stop" scoped="" ref="0x40a27a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a0b8e8" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0b8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0a590"/>
        <function-ref name="get" scoped="" ref="0x40a0a2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40a0a010"/>
        <function-ref name="set" scoped="" ref="0x40a0a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a29508" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a29508"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a29b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a109b0" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a10b88"/>
        <function-ref name="ready" scoped="" ref="0x40a10c68"/>
        <function-ref name="sendDone" scoped="" ref="0x40a10d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a0ad60" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2a960"/>
        <function-ref name="get" scoped="" ref="0x40a2a6a0"/>
        <function-ref name="isSet" scoped="" ref="0x40a2a3e0"/>
        <function-ref name="set" scoped="" ref="0x40a2ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a22ab0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a22ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a22c88"/>
        <function-ref name="get" scoped="" ref="0x40a22d68"/>
        <function-ref name="setValue" scoped="" ref="0x40a22e48"/>
        <function-ref name="set" scoped="" ref="0x40a22f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a24ca0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a24ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a24e78"/>
        <function-ref name="get" scoped="" ref="0x40a22010"/>
        <function-ref name="setValue" scoped="" ref="0x40a220f0"/>
        <function-ref name="set" scoped="" ref="0x40a221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a29010" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a291e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a1a0b8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a1a0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a1a290"/>
        <function-ref name="request" scoped="" ref="0x40a1a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a31010" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a31010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a31760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a3a240" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a3a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3ae08"/>
        <function-ref name="get" scoped="" ref="0x40a3ab48"/>
        <function-ref name="isSet" scoped="" ref="0x40a3a888"/>
        <function-ref name="set" scoped="" ref="0x40a390f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a4d310" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a4d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4d4e8"/>
        <function-ref name="get" scoped="" ref="0x40a4d5c8"/>
        <function-ref name="setValue" scoped="" ref="0x40a4d6a8"/>
        <function-ref name="set" scoped="" ref="0x40a4d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a1cb18" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a1cb18"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a4c1f8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4c1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a4cdf8"/>
        <function-ref name="clear" scoped="" ref="0x40a4b1d8"/>
        <function-ref name="isValid" scoped="" ref="0x40a4ca48"/>
        <function-ref name="set" scoped="" ref="0x40a4b588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a323c0" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a323c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a32598"/>
        <function-ref name="isInput" scoped="" ref="0x40a32678"/>
        <function-ref name="toggle" scoped="" ref="0x40a32758"/>
        <function-ref name="isOutput" scoped="" ref="0x40a32838"/>
        <function-ref name="get" scoped="" ref="0x40a32918"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a329f8"/>
        <function-ref name="set" scoped="" ref="0x40a32ad8"/>
        <function-ref name="clr" scoped="" ref="0x40a32bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a49010" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a491e8"/>
        <function-ref name="wait" scoped="" ref="0x40a492c8"/>
        <function-ref name="cancel" scoped="" ref="0x40a493a8"/>
        <function-ref name="isFree" scoped="" ref="0x40a49488"/>
        <function-ref name="getNow" scoped="" ref="0x40a49568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a1ce98" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a1ce98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a1b0c0"/>
        <function-ref name="turnOn" scoped="" ref="0x40a1b1a0"/>
        <function-ref name="setChannel" scoped="" ref="0x40a1b280"/>
        <function-ref name="done" scoped="" ref="0x40a1b360"/>
        <function-ref name="standby" scoped="" ref="0x40a1b440"/>
        <function-ref name="getChannel" scoped="" ref="0x40a1b520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a31ac8" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a31ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2e128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a1aec0" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1aec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3baa0"/>
        <function-ref name="get" scoped="" ref="0x40a3b7e0"/>
        <function-ref name="isSet" scoped="" ref="0x40a3b520"/>
        <function-ref name="set" scoped="" ref="0x40a3bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a1a520" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a1a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1a6f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1a7d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1a8b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1a998"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1aa78"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1ab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a2f930" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a2f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a2fb08"/>
        <function-ref name="isInput" scoped="" ref="0x40a2fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x40a2fcc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a2fda8"/>
        <function-ref name="get" scoped="" ref="0x40a2fe88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a32010"/>
        <function-ref name="set" scoped="" ref="0x40a320f0"/>
        <function-ref name="clr" scoped="" ref="0x40a321d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a2e448" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a2e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2e620"/>
        <function-ref name="headerLength" scoped="" ref="0x40a2e700"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a2e7e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a2e8c0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a2e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a1bc18" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a1bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a1bdf0"/>
        <function-ref name="header" scoped="" ref="0x40a1bed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a869e8" loc="847:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a869e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a86bc0"/>
        <function-ref name="runTask" scoped="" ref="0x40a86ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a39628" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a39628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a372d0"/>
        <function-ref name="get" scoped="" ref="0x40a37010"/>
        <function-ref name="isSet" scoped="" ref="0x40a39c70"/>
        <function-ref name="set" scoped="" ref="0x40a37590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a1c4b8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a1c4b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a34be0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a34be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a34db8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a34e98"/>
        <function-ref name="request" scoped="" ref="0x40a33010"/>
        <function-ref name="granted" scoped="" ref="0x40a330f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a331d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a34140" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a34140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a34398"/>
        <function-ref name="isInput" scoped="" ref="0x40a34478"/>
        <function-ref name="toggle" scoped="" ref="0x40a34558"/>
        <function-ref name="isOutput" scoped="" ref="0x40a34638"/>
        <function-ref name="get" scoped="" ref="0x40a34718"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a347f8"/>
        <function-ref name="set" scoped="" ref="0x40a348d8"/>
        <function-ref name="clr" scoped="" ref="0x40a349b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a37aa0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a37aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a366a0"/>
        <function-ref name="get" scoped="" ref="0x40a363e0"/>
        <function-ref name="isSet" scoped="" ref="0x40a36120"/>
        <function-ref name="set" scoped="" ref="0x40a36960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a1b6c0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a1b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1b898"/>
        <function-ref name="ready" scoped="" ref="0x40a1b978"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a2c4d0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a2c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a2c6a8"/>
        <function-ref name="disable" scoped="" ref="0x40a2c788"/>
        <function-ref name="captured" scoped="" ref="0x40a2c868"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a2c948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a2f2b8" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a2f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a2f490"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a2f570"/>
        <function-ref name="splitRead" scoped="" ref="0x40a2f650"/>
        <function-ref name="write" scoped="" ref="0x40a2f730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a4d9d0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a4d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4dba8"/>
        <function-ref name="get" scoped="" ref="0x40a4dc88"/>
        <function-ref name="setValue" scoped="" ref="0x40a4dd68"/>
        <function-ref name="set" scoped="" ref="0x40a4de48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a2ec18" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a2ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2edf0"/>
        <function-ref name="get" scoped="" ref="0x40a2eed0"/>
        <function-ref name="setValue" scoped="" ref="0x40a4d010"/>
        <function-ref name="set" scoped="" ref="0x40a4d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a36d10" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a36d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a36ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a4b9c8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a4b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a4bba0"/>
        <function-ref name="suspend" scoped="" ref="0x40a4bc80"/>
        <function-ref name="resume" scoped="" ref="0x40a4bd60"/>
        <function-ref name="run" scoped="" ref="0x40a4be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40accdb8" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40accdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40acb010"/>
        <function-ref name="isInput" scoped="" ref="0x40acb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40acb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40acb2b0"/>
        <function-ref name="get" scoped="" ref="0x40acb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40acb470"/>
        <function-ref name="set" scoped="" ref="0x40acb550"/>
        <function-ref name="clr" scoped="" ref="0x40acb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40acc3d0" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40acc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40acc5a8"/>
        <function-ref name="isInput" scoped="" ref="0x40acc688"/>
        <function-ref name="toggle" scoped="" ref="0x40acc768"/>
        <function-ref name="isOutput" scoped="" ref="0x40acc848"/>
        <function-ref name="get" scoped="" ref="0x40acc928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40acca08"/>
        <function-ref name="set" scoped="" ref="0x40accae8"/>
        <function-ref name="clr" scoped="" ref="0x40accbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40aca030" loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40aca030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac94e0"/>
        <function-ref name="fired" scoped="" ref="0x40acac98"/>
        <function-ref name="startAt" scoped="" ref="0x40ac91a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40acaf10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ac9758"/>
        <function-ref name="start" scoped="" ref="0x40aca780"/>
        <function-ref name="stop" scoped="" ref="0x40acaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40acd5b8" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40acd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40acd790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40acd870"/>
        <function-ref name="request" scoped="" ref="0x40acd950"/>
        <function-ref name="granted" scoped="" ref="0x40acda30"/>
        <function-ref name="isOwner" scoped="" ref="0x40acdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40aabb10" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40aabb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aabce8"/>
        <function-ref name="isInput" scoped="" ref="0x40aabdc8"/>
        <function-ref name="toggle" scoped="" ref="0x40aabea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40acd010"/>
        <function-ref name="get" scoped="" ref="0x40acd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40acd1d0"/>
        <function-ref name="set" scoped="" ref="0x40acd2b0"/>
        <function-ref name="clr" scoped="" ref="0x40acd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40acb820" loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40acb820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40acb9f8"/>
        <function-ref name="disable" scoped="" ref="0x40acbad8"/>
        <function-ref name="captured" scoped="" ref="0x40acbbb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40acbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40acdcc0" loc="43:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40acdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40acde98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40acc010"/>
        <function-ref name="splitRead" scoped="" ref="0x40acc0f0"/>
        <function-ref name="write" scoped="" ref="0x40acc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40ac9b48" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x404e1728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac7200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40ac2420" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40ac2420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac25f8"/>
        <function-ref name="isInput" scoped="" ref="0x40ac26d8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac27b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac2898"/>
        <function-ref name="get" scoped="" ref="0x40ac2978"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac2a58"/>
        <function-ref name="set" scoped="" ref="0x40ac2b38"/>
        <function-ref name="clr" scoped="" ref="0x40ac2c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40abf660" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40abf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ac2110"/>
        <function-ref name="test" scoped="" ref="0x40ac3be0"/>
        <function-ref name="get" scoped="" ref="0x40abfca8"/>
        <function-ref name="captured" scoped="" ref="0x40ac31d8"/>
        <function-ref name="reset" scoped="" ref="0x40ac3478"/>
        <function-ref name="isOn" scoped="" ref="0x40ac3e58"/>
        <function-ref name="set" scoped="" ref="0x40abff20"/>
        <function-ref name="start" scoped="" ref="0x40ac36f0"/>
        <function-ref name="stop" scoped="" ref="0x40ac3968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40ac2e20" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40ac2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40abd010"/>
        <function-ref name="isInput" scoped="" ref="0x40abd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40abd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40abd2b0"/>
        <function-ref name="get" scoped="" ref="0x40abd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abd470"/>
        <function-ref name="set" scoped="" ref="0x40abd550"/>
        <function-ref name="clr" scoped="" ref="0x40abd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40ac4030" loc="40:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40ac4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ac4208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ac7988" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ac7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ac7b60"/>
        <function-ref name="disable" scoped="" ref="0x40ac7c40"/>
        <function-ref name="captured" scoped="" ref="0x40ac7d20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ac7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ad2500" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ad2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad26d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad27b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40adaab0" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40adaab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40adac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ac6da0" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ac6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ada010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40adae58" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40adae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ad9050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ad9130"/>
        <function-ref name="splitRead" scoped="" ref="0x40ad9210"/>
        <function-ref name="write" scoped="" ref="0x40ad92f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad2c50" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad2e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad2f08"/>
        <function-ref name="request" scoped="" ref="0x40ad8010"/>
        <function-ref name="granted" scoped="" ref="0x40ad80f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40af61e0" loc="241:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40af61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af63b8"/>
        <function-ref name="runTask" scoped="" ref="0x40af6498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ad1b38" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ad1b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad1d10"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad1df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40ace100" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40ace100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ace2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ace3b8"/>
        <function-ref name="request" scoped="" ref="0x40ace498"/>
        <function-ref name="granted" scoped="" ref="0x40ace578"/>
        <function-ref name="isOwner" scoped="" ref="0x40ace658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40ad1198" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40ad1198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40ad1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ad8d90" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ad8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ae53d0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ae53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ae55a8"/>
        <function-ref name="sleep" scoped="" ref="0x40acfa30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ae5768"/>
        <function-ref name="dataReady" scoped="" ref="0x40acfb10"/>
        <function-ref name="initMaster" scoped="" ref="0x40ae5928"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ae5a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ae5ae8"/>
        <function-ref name="read" scoped="" ref="0x40ae5bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40ae5ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40ae5d88"/>
        <function-ref name="setClock" scoped="" ref="0x40ae5e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40acf010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40acf0f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40acf250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40acf330"/>
        <function-ref name="write" scoped="" ref="0x40acf410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40acf4f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40acf5d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40acf6b0"/>
        <function-ref name="getClock" scoped="" ref="0x40acf790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40acf870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ae5688"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ae5848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40acf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ad1520" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ad1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ad16f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ad17d8"/>
        <function-ref name="splitRead" scoped="" ref="0x40ad18b8"/>
        <function-ref name="write" scoped="" ref="0x40ad1998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad02a8" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad0480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad0560"/>
        <function-ref name="request" scoped="" ref="0x40ad0640"/>
        <function-ref name="granted" scoped="" ref="0x40ad0720"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40ace808" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ace808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ace9e0"/>
        <function-ref name="userId" scoped="" ref="0x40aceac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40acec88" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40acec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40acee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40ad4e50" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40ad4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b29050"/>
        <function-ref name="sleep" scoped="" ref="0x40b28470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b29210"/>
        <function-ref name="dataReady" scoped="" ref="0x40b28550"/>
        <function-ref name="initMaster" scoped="" ref="0x40b293d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b294b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b29590"/>
        <function-ref name="read" scoped="" ref="0x40b29670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b29750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b29830"/>
        <function-ref name="setClock" scoped="" ref="0x40b29910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b299f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b29ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b29c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b29d10"/>
        <function-ref name="write" scoped="" ref="0x40b29df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b29ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b28010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b280f0"/>
        <function-ref name="getClock" scoped="" ref="0x40b281d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b282b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b29130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b292f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b28390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b22e88" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b22e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b20070"/>
        <function-ref name="isInput" scoped="" ref="0x40b20150"/>
        <function-ref name="toggle" scoped="" ref="0x40b20230"/>
        <function-ref name="isOutput" scoped="" ref="0x40b20310"/>
        <function-ref name="get" scoped="" ref="0x40b203f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b204d0"/>
        <function-ref name="set" scoped="" ref="0x40b205b0"/>
        <function-ref name="clr" scoped="" ref="0x40b20690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b239e8" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b239e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b23bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40b23ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40b23d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40b23e60"/>
        <function-ref name="get" scoped="" ref="0x40b22010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b220f0"/>
        <function-ref name="set" scoped="" ref="0x40b221d0"/>
        <function-ref name="clr" scoped="" ref="0x40b222b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b23010" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b231e8"/>
        <function-ref name="isInput" scoped="" ref="0x40b232c8"/>
        <function-ref name="toggle" scoped="" ref="0x40b233a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b23488"/>
        <function-ref name="get" scoped="" ref="0x40b23568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b23648"/>
        <function-ref name="set" scoped="" ref="0x40b23728"/>
        <function-ref name="clr" scoped="" ref="0x40b23808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b21ac0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b21ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b21c98"/>
        <function-ref name="stop" scoped="" ref="0x40b21d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b20898" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b20898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b20a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b251e8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b251e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b253c0"/>
        <function-ref name="sleep" scoped="" ref="0x40b247f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b25580"/>
        <function-ref name="dataReady" scoped="" ref="0x40b248d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40b25740"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b25820"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b25900"/>
        <function-ref name="read" scoped="" ref="0x40b259e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b25ac0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b25ba0"/>
        <function-ref name="setClock" scoped="" ref="0x40b25c80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b25d60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b25e40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b24010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b240f0"/>
        <function-ref name="write" scoped="" ref="0x40b241d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b242b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b24390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b24470"/>
        <function-ref name="getClock" scoped="" ref="0x40b24550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b24630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b254a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b25660"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b24710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b224a0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b224a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b22678"/>
        <function-ref name="isInput" scoped="" ref="0x40b22758"/>
        <function-ref name="toggle" scoped="" ref="0x40b22838"/>
        <function-ref name="isOutput" scoped="" ref="0x40b22918"/>
        <function-ref name="get" scoped="" ref="0x40b229f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b22ad8"/>
        <function-ref name="set" scoped="" ref="0x40b22bb8"/>
        <function-ref name="clr" scoped="" ref="0x40b22c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b472c8" loc="86:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b472c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b474b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b47590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b47b80" loc="89:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b47b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b47d68"/>
        <function-ref name="configure" scoped="" ref="0x40b47e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b49b30" loc="85:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b49b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b49d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b49df8"/>
        <function-ref name="request" scoped="" ref="0x40b49ed8"/>
        <function-ref name="granted" scoped="" ref="0x40b47010"/>
        <function-ref name="isOwner" scoped="" ref="0x40b470f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b476d0" loc="87:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b478a8"/>
        <function-ref name="userId" scoped="" ref="0x40b47988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411fa3e0" loc="44:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411fa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411fa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x411fa718" loc="45:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x411fa718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411fa8f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x411fa9d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411faab0"/>
        <function-ref name="dequeue" scoped="" ref="0x411fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411f8e50" loc="52:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411f7050"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411f7130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411f7730" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411f7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411f7918"/>
        <function-ref name="configure" scoped="" ref="0x411f79f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411f7b58" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411f7b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411f7d30"/>
        <function-ref name="isEmpty" scoped="" ref="0x411f7e10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411f7ef0"/>
        <function-ref name="dequeue" scoped="" ref="0x411f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411f8710" loc="51:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f88f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f89d8"/>
        <function-ref name="request" scoped="" ref="0x411f8ab8"/>
        <function-ref name="granted" scoped="" ref="0x411f8b98"/>
        <function-ref name="isOwner" scoped="" ref="0x411f8c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411f7270" loc="53:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411f7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411f7448"/>
        <function-ref name="userId" scoped="" ref="0x411f7528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411f6190" loc="69:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411f6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f6368"/>
        <function-ref name="runTask" scoped="" ref="0x411f6448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b60c40" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b60c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b60e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b60ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x40b65010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b650f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b651d0"/>
        <function-ref name="setControlB" scoped="" ref="0x40b652b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b65390"/>
        <function-ref name="getControlB" scoped="" ref="0x40b65470"/>
        <function-ref name="setControlC" scoped="" ref="0x40b65550"/>
        <function-ref name="setControlA" scoped="" ref="0x40b65630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b65968" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b65968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b5f500"/>
        <function-ref name="test" scoped="" ref="0x40b5f010"/>
        <function-ref name="get" scoped="" ref="0x40b64010"/>
        <function-ref name="captured" scoped="" ref="0x40b64528"/>
        <function-ref name="reset" scoped="" ref="0x40b647c8"/>
        <function-ref name="isOn" scoped="" ref="0x40b5f288"/>
        <function-ref name="set" scoped="" ref="0x40b64288"/>
        <function-ref name="start" scoped="" ref="0x40b64a40"/>
        <function-ref name="stop" scoped="" ref="0x40b64cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b5fc10" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b5fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b5c1a0"/>
        <function-ref name="fired" scoped="" ref="0x40b5d790"/>
        <function-ref name="get" scoped="" ref="0x40b5d278"/>
        <function-ref name="reset" scoped="" ref="0x40b5da08"/>
        <function-ref name="isOn" scoped="" ref="0x40b5c418"/>
        <function-ref name="set" scoped="" ref="0x40b5d4f0"/>
        <function-ref name="start" scoped="" ref="0x40b5dc80"/>
        <function-ref name="stop" scoped="" ref="0x40b5def8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b41230" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b41230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b67ca0"/>
        <function-ref name="test" scoped="" ref="0x40b677b0"/>
        <function-ref name="get" scoped="" ref="0x40b41878"/>
        <function-ref name="setScale" scoped="" ref="0x40b67f18"/>
        <function-ref name="getScale" scoped="" ref="0x40b661d0"/>
        <function-ref name="reset" scoped="" ref="0x40b67048"/>
        <function-ref name="overflow" scoped="" ref="0x40b41d90"/>
        <function-ref name="isOn" scoped="" ref="0x40b67a28"/>
        <function-ref name="set" scoped="" ref="0x40b41af0"/>
        <function-ref name="start" scoped="" ref="0x40b672c0"/>
        <function-ref name="stop" scoped="" ref="0x40b67538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b563c8" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b563c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b565a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b56680"/>
        <function-ref name="getControlA" scoped="" ref="0x40b56760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b56840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b56920"/>
        <function-ref name="setControlB" scoped="" ref="0x40b56a00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b56ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x40b56bc0"/>
        <function-ref name="setControlC" scoped="" ref="0x40b56ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b56d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b7a010" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b79578"/>
        <function-ref name="fired" scoped="" ref="0x40b7ab70"/>
        <function-ref name="get" scoped="" ref="0x40b7a658"/>
        <function-ref name="reset" scoped="" ref="0x40b7ade8"/>
        <function-ref name="isOn" scoped="" ref="0x40b797f0"/>
        <function-ref name="set" scoped="" ref="0x40b7a8d0"/>
        <function-ref name="start" scoped="" ref="0x40b79088"/>
        <function-ref name="stop" scoped="" ref="0x40b79300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b550f0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b550f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b7cb80"/>
        <function-ref name="test" scoped="" ref="0x40b7c690"/>
        <function-ref name="get" scoped="" ref="0x40b55738"/>
        <function-ref name="captured" scoped="" ref="0x40b55c50"/>
        <function-ref name="reset" scoped="" ref="0x40b55ef0"/>
        <function-ref name="isOn" scoped="" ref="0x40b7c908"/>
        <function-ref name="set" scoped="" ref="0x40b559b0"/>
        <function-ref name="start" scoped="" ref="0x40b7c1a0"/>
        <function-ref name="stop" scoped="" ref="0x40b7c418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b79c08" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b79c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b761a0"/>
        <function-ref name="fired" scoped="" ref="0x40b78790"/>
        <function-ref name="get" scoped="" ref="0x40b78278"/>
        <function-ref name="reset" scoped="" ref="0x40b78a08"/>
        <function-ref name="isOn" scoped="" ref="0x40b76418"/>
        <function-ref name="set" scoped="" ref="0x40b784f0"/>
        <function-ref name="start" scoped="" ref="0x40b78c80"/>
        <function-ref name="stop" scoped="" ref="0x40b78ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b76830" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b76830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b75d90"/>
        <function-ref name="fired" scoped="" ref="0x40b753b0"/>
        <function-ref name="get" scoped="" ref="0x40b76e78"/>
        <function-ref name="reset" scoped="" ref="0x40b75628"/>
        <function-ref name="isOn" scoped="" ref="0x40b74048"/>
        <function-ref name="set" scoped="" ref="0x40b75110"/>
        <function-ref name="start" scoped="" ref="0x40b758a0"/>
        <function-ref name="stop" scoped="" ref="0x40b75b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b590e0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b590e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b57b30"/>
        <function-ref name="test" scoped="" ref="0x40b57640"/>
        <function-ref name="get" scoped="" ref="0x40b59728"/>
        <function-ref name="setScale" scoped="" ref="0x40b57da8"/>
        <function-ref name="getScale" scoped="" ref="0x40b56068"/>
        <function-ref name="reset" scoped="" ref="0x40b59eb8"/>
        <function-ref name="overflow" scoped="" ref="0x40b59c40"/>
        <function-ref name="isOn" scoped="" ref="0x40b578b8"/>
        <function-ref name="set" scoped="" ref="0x40b599a0"/>
        <function-ref name="start" scoped="" ref="0x40b57150"/>
        <function-ref name="stop" scoped="" ref="0x40b573c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ba9c88" loc="30:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ba9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bce150"/>
        <function-ref name="fired" scoped="" ref="0x40bcf908"/>
        <function-ref name="startAt" scoped="" ref="0x40bcfdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40bcfb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bce3c8"/>
        <function-ref name="start" scoped="" ref="0x40bcf3f0"/>
        <function-ref name="stop" scoped="" ref="0x40bcf690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bcc480" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bcc480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bcc658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bcc868" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bcc868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bc32e0"/>
        <function-ref name="test" scoped="" ref="0x40bcbdd0"/>
        <function-ref name="get" scoped="" ref="0x40bcceb0"/>
        <function-ref name="setScale" scoped="" ref="0x40bc3558"/>
        <function-ref name="getScale" scoped="" ref="0x40bc37f8"/>
        <function-ref name="reset" scoped="" ref="0x40bcb668"/>
        <function-ref name="overflow" scoped="" ref="0x40bcb3f0"/>
        <function-ref name="isOn" scoped="" ref="0x40bc3068"/>
        <function-ref name="set" scoped="" ref="0x40bcb150"/>
        <function-ref name="start" scoped="" ref="0x40bcb8e0"/>
        <function-ref name="stop" scoped="" ref="0x40bcbb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411e0ac0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411e0ac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402fe040"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402fe040"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411de010"/>
        <function-ref name="fired" scoped="" ref="0x411df740"/>
        <function-ref name="startAt" scoped="" ref="0x411dfc30"/>
        <function-ref name="isRunning" scoped="" ref="0x411df9b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x411de288"/>
        <function-ref name="start" scoped="" ref="0x411df228"/>
        <function-ref name="stop" scoped="" ref="0x411df4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x411db7e8" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x411db7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411dad58"/>
        <function-ref name="fired" scoped="" ref="0x411da378"/>
        <function-ref name="get" scoped="" ref="0x411dbe30"/>
        <function-ref name="reset" scoped="" ref="0x411da5f0"/>
        <function-ref name="isOn" scoped="" ref="0x4121b010"/>
        <function-ref name="set" scoped="" ref="0x411da0d8"/>
        <function-ref name="start" scoped="" ref="0x411da868"/>
        <function-ref name="stop" scoped="" ref="0x411daae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x411de548" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x411de548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411db010"/>
        <function-ref name="test" scoped="" ref="0x411ddab8"/>
        <function-ref name="get" scoped="" ref="0x411deb90"/>
        <function-ref name="setScale" scoped="" ref="0x411db288"/>
        <function-ref name="getScale" scoped="" ref="0x411db528"/>
        <function-ref name="reset" scoped="" ref="0x411dd350"/>
        <function-ref name="overflow" scoped="" ref="0x411dd0d8"/>
        <function-ref name="isOn" scoped="" ref="0x411ddd30"/>
        <function-ref name="set" scoped="" ref="0x411dee08"/>
        <function-ref name="start" scoped="" ref="0x411dd5c8"/>
        <function-ref name="stop" scoped="" ref="0x411dd840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bf7580" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bf7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bf7bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bf3698" loc="24:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bf3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bf3de8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bf0300"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bf0088"/>
        <function-ref name="overflow" scoped="" ref="0x40bf0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40beee90" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40beee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bed600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bedaf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bed878"/>
        <function-ref name="overflow" scoped="" ref="0x40bedd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40be3078" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40be3078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c0cab8"/>
        <function-ref name="test" scoped="" ref="0x40c0c5c8"/>
        <function-ref name="get" scoped="" ref="0x40be36c0"/>
        <function-ref name="setScale" scoped="" ref="0x40c0cd30"/>
        <function-ref name="getScale" scoped="" ref="0x40c0b010"/>
        <function-ref name="reset" scoped="" ref="0x40be3e50"/>
        <function-ref name="overflow" scoped="" ref="0x40be3bd8"/>
        <function-ref name="isOn" scoped="" ref="0x40c0c840"/>
        <function-ref name="set" scoped="" ref="0x40be3938"/>
        <function-ref name="start" scoped="" ref="0x40c0c0d8"/>
        <function-ref name="stop" scoped="" ref="0x40c0c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40bf90e0" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40bf90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bf9830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bf9d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bf9aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40bf8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c0ae60" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c0ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfa5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfaad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfa858"/>
        <function-ref name="overflow" scoped="" ref="0x40bfad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bf8f18" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bf8f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c20578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c208c8" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c208c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c1f048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c1f538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c1f2c0"/>
        <function-ref name="overflow" scoped="" ref="0x40c1f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40c1b010" loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40c1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40c1b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c48ea8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c48ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c450c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40c451a0"/>
        <function-ref name="start" scoped="" ref="0x40c45280"/>
        <function-ref name="stop" scoped="" ref="0x40c45360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c457c0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c457c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c45998"/>
        <function-ref name="getPayload" scoped="" ref="0x40c45a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c45b58"/>
        <function-ref name="cancel" scoped="" ref="0x40c45c38"/>
        <function-ref name="sendDone" scoped="" ref="0x40c45d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c444e8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c444e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c446c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c447a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c44880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c44960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c44a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c44190" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c44190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c44368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c43e68" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c43e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c42050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c42130"/>
        <function-ref name="led1On" scoped="" ref="0x40c42210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c422f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c423d0"/>
        <function-ref name="get" scoped="" ref="0x40c424b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c42590"/>
        <function-ref name="led2Off" scoped="" ref="0x40c42910"/>
        <function-ref name="set" scoped="" ref="0x40c42670"/>
        <function-ref name="led0On" scoped="" ref="0x40c42750"/>
        <function-ref name="led2On" scoped="" ref="0x40c42830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c43930" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c43930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c43b08"/>
        <function-ref name="noAck" scoped="" ref="0x40c43be8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c43cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c44bd8" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c44bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c44db0"/>
        <function-ref name="source" scoped="" ref="0x40c44e90"/>
        <function-ref name="address" scoped="" ref="0x40c43010"/>
        <function-ref name="destination" scoped="" ref="0x40c430f0"/>
        <function-ref name="setSource" scoped="" ref="0x40c431d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c432b0"/>
        <function-ref name="type" scoped="" ref="0x40c43390"/>
        <function-ref name="setType" scoped="" ref="0x40c43470"/>
        <function-ref name="isForMe" scoped="" ref="0x40c43550"/>
        <function-ref name="setGroup" scoped="" ref="0x40c43630"/>
        <function-ref name="localGroup" scoped="" ref="0x40c43710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c8d430" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c8d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8d608"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8d6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8d7c8"/>
        <function-ref name="cancel" scoped="" ref="0x40c8d8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8d988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c8dae8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c8dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c41180" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c41180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c41368"/>
        <function-ref name="getPayload" scoped="" ref="0x40c41448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c41528"/>
        <function-ref name="cancel" scoped="" ref="0x40c41608"/>
        <function-ref name="sendDone" scoped="" ref="0x40c416e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c40850" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c40850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c40a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c40b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40c40be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c40cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c40da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c418c0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c418c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c41aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c40ee8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c40ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c8d0e0"/>
        <function-ref name="noAck" scoped="" ref="0x40c8d1c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c8d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c41be8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c41be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c41dc0"/>
        <function-ref name="source" scoped="" ref="0x40c41ea0"/>
        <function-ref name="address" scoped="" ref="0x40c40010"/>
        <function-ref name="destination" scoped="" ref="0x40c400f0"/>
        <function-ref name="setSource" scoped="" ref="0x40c401d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c402b0"/>
        <function-ref name="type" scoped="" ref="0x40c40390"/>
        <function-ref name="setType" scoped="" ref="0x40c40470"/>
        <function-ref name="isForMe" scoped="" ref="0x40c40550"/>
        <function-ref name="setGroup" scoped="" ref="0x40c40630"/>
        <function-ref name="localGroup" scoped="" ref="0x40c40710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c893a8" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c893a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c89580"/>
        <function-ref name="stopDone" scoped="" ref="0x40c89660"/>
        <function-ref name="start" scoped="" ref="0x40c89740"/>
        <function-ref name="stop" scoped="" ref="0x40c89820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c88288" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c88288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404acc30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c88460"/>
        <function-ref name="getPayload" scoped="" ref="0x40c88540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c88620"/>
        <function-ref name="cancel" scoped="" ref="0x40c88700"/>
        <function-ref name="sendDone" scoped="" ref="0x40c887e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c89010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c89010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c891e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c89c68" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c89c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404acc30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c89e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c83e80" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c83e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c87070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c87150"/>
        <function-ref name="led1On" scoped="" ref="0x40c87230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c87310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c873f0"/>
        <function-ref name="get" scoped="" ref="0x40c874d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c875b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c87930"/>
        <function-ref name="set" scoped="" ref="0x40c87690"/>
        <function-ref name="led0On" scoped="" ref="0x40c87770"/>
        <function-ref name="led2On" scoped="" ref="0x40c87850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40c83978" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c83978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404acc30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40c83b50"/>
        <function-ref name="offset" scoped="" ref="0x40c83c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40c83d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c9e3d8" loc="66:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c9e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c9e5b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40c9e690"/>
        <function-ref name="start" scoped="" ref="0x40c9e770"/>
        <function-ref name="stop" scoped="" ref="0x40c9e850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40ce81e0" loc="328:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40ce81e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ce83b8"/>
        <function-ref name="runTask" scoped="" ref="0x40ce8498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40cbb4d8" loc="74:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40cbb4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cbb6b0"/>
        <function-ref name="stop" scoped="" ref="0x40cbb790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40cada18" loc="191:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40cada18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cadbf0"/>
        <function-ref name="runTask" scoped="" ref="0x40cadcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c9e040" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c9e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c9e218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40cba560" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40cba560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40cba738"/>
        <function-ref name="flush" scoped="" ref="0x40cba818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40ce9010" loc="322:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40ce9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ce91e8"/>
        <function-ref name="runTask" scoped="" ref="0x40ce92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40c93f10" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40c93f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40c98108"/>
        <function-ref name="resetSend" scoped="" ref="0x40c981e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x40c982c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x40c983a8"/>
        <function-ref name="putData" scoped="" ref="0x40c98488"/>
        <function-ref name="putDone" scoped="" ref="0x40c98568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40c98648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c987b8" loc="73:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c987b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c98990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c98a70"/>
        <function-ref name="led1On" scoped="" ref="0x40c98b50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c98c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c98d10"/>
        <function-ref name="get" scoped="" ref="0x40c98df0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c98ed0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c952b0"/>
        <function-ref name="set" scoped="" ref="0x40c95010"/>
        <function-ref name="led0On" scoped="" ref="0x40c950f0"/>
        <function-ref name="led2On" scoped="" ref="0x40c951d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40ce7e08" loc="337:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40ce7e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ce6010"/>
        <function-ref name="runTask" scoped="" ref="0x40ce60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40c99b00" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40c99b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40c99cd8"/>
        <function-ref name="nextByte" scoped="" ref="0x40c99db8"/>
        <function-ref name="startSend" scoped="" ref="0x40c99e98"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40c9d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40c97c50" loc="68:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c97c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40c97e28"/>
        <function-ref name="byteReceived" scoped="" ref="0x40c97f08"/>
        <function-ref name="endPacket" scoped="" ref="0x40c9c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40d5ee48" loc="275:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40d5ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5d050"/>
        <function-ref name="runTask" scoped="" ref="0x40d5d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d0ca90" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d0ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404acc30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d0cc78"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0cd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0ce38"/>
        <function-ref name="cancel" scoped="" ref="0x40d0cf18"/>
        <function-ref name="sendDone" scoped="" ref="0x40d30010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40d5d2b0" loc="158:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40d5d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5d488"/>
        <function-ref name="runTask" scoped="" ref="0x40d5d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d0c6d0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d0c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404acc30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d0c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40d30238" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40d30238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404acc30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d30420"/>
        <function-ref name="offset" scoped="" ref="0x40d30500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d305e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d5e230" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d5e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d5e408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d5e4e8"/>
        <function-ref name="led1On" scoped="" ref="0x40d5e5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d5e6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d5e788"/>
        <function-ref name="get" scoped="" ref="0x40d5e868"/>
        <function-ref name="led1Off" scoped="" ref="0x40d5e948"/>
        <function-ref name="led2On" scoped="" ref="0x40d5ecc8"/>
        <function-ref name="set" scoped="" ref="0x40d5eb08"/>
        <function-ref name="led2Off" scoped="" ref="0x40d5ea28"/>
        <function-ref name="led0On" scoped="" ref="0x40d5ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40d30bf8" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d30bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d30dd0"/>
        <function-ref name="nextByte" scoped="" ref="0x40d30eb0"/>
        <function-ref name="startSend" scoped="" ref="0x40d5e010"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d5e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40d30720" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d30720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d308f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d309d8"/>
        <function-ref name="endPacket" scoped="" ref="0x40d30ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40d52990" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d52990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d52b68"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d52c48"/>
        <function-ref name="receive" scoped="" ref="0x40d52d28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d52e08"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d52ee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d58010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40d5c6b8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40d5c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d5c890"/>
        <function-ref name="resetSend" scoped="" ref="0x40d5c970"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d5ca50"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d5cb30"/>
        <function-ref name="putData" scoped="" ref="0x40d5cc10"/>
        <function-ref name="putDone" scoped="" ref="0x40d5ccf0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d5cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d58260" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d58260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d58438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d58518"/>
        <function-ref name="led1On" scoped="" ref="0x40d585f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d586d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d587b8"/>
        <function-ref name="get" scoped="" ref="0x40d58898"/>
        <function-ref name="led1Off" scoped="" ref="0x40d58978"/>
        <function-ref name="led2Off" scoped="" ref="0x40d58cf8"/>
        <function-ref name="set" scoped="" ref="0x40d58a58"/>
        <function-ref name="led0On" scoped="" ref="0x40d58b38"/>
        <function-ref name="led2On" scoped="" ref="0x40d58c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d6f488" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d6f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d6f660"/>
        <function-ref name="receive" scoped="" ref="0x40d6f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d735e8" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d735e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d737c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d738a0"/>
        <function-ref name="receive" scoped="" ref="0x40d73980"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d73a60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d73b40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d73c20"/>
        <function-ref name="sendDone" scoped="" ref="0x40d73d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d73168" loc="40:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d73168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d73340"/>
        <function-ref name="stop" scoped="" ref="0x40d73420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d6e358" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d6e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d6e530"/>
        <function-ref name="receive" scoped="" ref="0x40d6e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d6e7d8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d6e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d6e9b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d6ea90"/>
        <function-ref name="receive" scoped="" ref="0x40d6eb70"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d6ec50"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d6ed30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d6ee10"/>
        <function-ref name="sendDone" scoped="" ref="0x40d6eef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d6d270" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d6d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d6d9c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d6deb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d6dc38"/>
        <function-ref name="overflow" scoped="" ref="0x40d6c150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d6fe98" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d6fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d6e0c0"/>
        <function-ref name="stop" scoped="" ref="0x40d6e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d695c8" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d695c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d697a0"/>
        <function-ref name="receive" scoped="" ref="0x40d69880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40da3350" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40da3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40da3528"/>
        <function-ref name="stop" scoped="" ref="0x40da3608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d6ae68" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d6ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d69050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d699e0" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d699e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d69bb8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d69c98"/>
        <function-ref name="receive" scoped="" ref="0x40d69d78"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d69e58"/>
        <function-ref name="receiveDone" scoped="" ref="0x40da3010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40da30f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40da31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40da28b0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40da28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40da1010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40da1500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40da1288"/>
        <function-ref name="overflow" scoped="" ref="0x40da1778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40da3bc0" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40da3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40da3d98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40da3e78"/>
        <function-ref name="rxDone" scoped="" ref="0x40da2010"/>
        <function-ref name="txDone" scoped="" ref="0x40da20f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40da21d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40da22b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40da2390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40da2470"/>
        <function-ref name="tx" scoped="" ref="0x40da2550"/>
        <function-ref name="rx" scoped="" ref="0x40da2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d691b0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d691b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d69388"/>
        <function-ref name="stop" scoped="" ref="0x40d69468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40da3788" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40da3788"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40da3960"/>
        <function-ref name="stop" scoped="" ref="0x40da3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40dc3d40" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40dc3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40dc3f18"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40dc2010"/>
        <function-ref name="rxDone" scoped="" ref="0x40dc20f0"/>
        <function-ref name="txDone" scoped="" ref="0x40dc21d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40dc22b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40dc2390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40dc2470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40dc2550"/>
        <function-ref name="tx" scoped="" ref="0x40dc2630"/>
        <function-ref name="rx" scoped="" ref="0x40dc2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40dc0390" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40dc0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40dc0568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40dc0648"/>
        <function-ref name="rxDone" scoped="" ref="0x40dc0728"/>
        <function-ref name="txDone" scoped="" ref="0x40dc0808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40dc08e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40dc09c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40dc0aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40dc0b88"/>
        <function-ref name="tx" scoped="" ref="0x40dc0c68"/>
        <function-ref name="rx" scoped="" ref="0x40dc0d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40dc3848" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40dc3848"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dc3a20"/>
        <function-ref name="stop" scoped="" ref="0x40dc3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40dc2968" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40dc2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dc2b40"/>
        <function-ref name="stop" scoped="" ref="0x40dc2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40dc2e78" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40dc2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dc0070"/>
        <function-ref name="stop" scoped="" ref="0x40dc0150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40dc3338" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40dc3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dc3510"/>
        <function-ref name="stop" scoped="" ref="0x40dc35f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40dbf5c8" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40dbf5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dbf7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40dbc528" loc="117:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40dbc528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40dbc700"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40dbc7e0"/>
        <function-ref name="rxDone" scoped="" ref="0x40dbc8c0"/>
        <function-ref name="txDone" scoped="" ref="0x40dbc9a0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40dbca80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40dbcb60"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40dbcc40"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40dbcd20"/>
        <function-ref name="tx" scoped="" ref="0x40dbce00"/>
        <function-ref name="rx" scoped="" ref="0x40dbcee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40dbb110" loc="119:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40dbb110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dbb2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40dba010" loc="122:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40dba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40dba1e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40dba2c8"/>
        <function-ref name="rxDone" scoped="" ref="0x40dba3a8"/>
        <function-ref name="txDone" scoped="" ref="0x40dba488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40dba568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40dba648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40dba728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40dba808"/>
        <function-ref name="tx" scoped="" ref="0x40dba8e8"/>
        <function-ref name="rx" scoped="" ref="0x40dba9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40dbc010" loc="116:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40dbc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbc1e8"/>
        <function-ref name="stop" scoped="" ref="0x40dbc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40dbb560" loc="120:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40dbb560"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbb738"/>
        <function-ref name="stop" scoped="" ref="0x40dbb818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40dbba90" loc="121:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40dbba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbbc68"/>
        <function-ref name="stop" scoped="" ref="0x40dbbd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40dbabc0" loc="124:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40dbabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40dbad98"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40dbae78"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40db9010"/>
        <function-ref name="actualMicro" scoped="" ref="0x40db90f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40db91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40db93b8" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40db93b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40db9590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40dbfa18" loc="115:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40dbfa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbfbf0"/>
        <function-ref name="stop" scoped="" ref="0x40dbfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40de83c0" loc="24:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40de83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40de8b10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40de7010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40de8d88"/>
        <function-ref name="overflow" scoped="" ref="0x40de7288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40de7df0" loc="24:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40de7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40380010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40de4570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40de4a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40de47e8"/>
        <function-ref name="overflow" scoped="" ref="0x40de4cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40ddeb00" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40ddeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40ddecd8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ddedb8"/>
        <function-ref name="getControlA" scoped="" ref="0x40ddee98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ddd010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40ddd0f0"/>
        <function-ref name="setControlB" scoped="" ref="0x40ddd1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40ddd2b0"/>
        <function-ref name="getControlB" scoped="" ref="0x40ddd390"/>
        <function-ref name="setControlC" scoped="" ref="0x40ddd470"/>
        <function-ref name="setControlA" scoped="" ref="0x40ddd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40ddd888" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ddd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e0c320"/>
        <function-ref name="test" scoped="" ref="0x40e0ee18"/>
        <function-ref name="get" scoped="" ref="0x40ddded0"/>
        <function-ref name="captured" scoped="" ref="0x40e0e410"/>
        <function-ref name="reset" scoped="" ref="0x40e0e6b0"/>
        <function-ref name="isOn" scoped="" ref="0x40e0c0a8"/>
        <function-ref name="set" scoped="" ref="0x40e0e170"/>
        <function-ref name="start" scoped="" ref="0x40e0e928"/>
        <function-ref name="stop" scoped="" ref="0x40e0eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e0ca30" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e0ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e0a010"/>
        <function-ref name="fired" scoped="" ref="0x40e0b5a0"/>
        <function-ref name="get" scoped="" ref="0x40e0b088"/>
        <function-ref name="reset" scoped="" ref="0x40e0b818"/>
        <function-ref name="isOn" scoped="" ref="0x40e0a288"/>
        <function-ref name="set" scoped="" ref="0x40e0b300"/>
        <function-ref name="start" scoped="" ref="0x40e0ba90"/>
        <function-ref name="stop" scoped="" ref="0x40e0bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40de3790" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40de3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dde288"/>
        <function-ref name="test" scoped="" ref="0x40ddfce8"/>
        <function-ref name="get" scoped="" ref="0x40de3dd8"/>
        <function-ref name="setScale" scoped="" ref="0x40dde500"/>
        <function-ref name="getScale" scoped="" ref="0x40dde7a0"/>
        <function-ref name="reset" scoped="" ref="0x40ddf580"/>
        <function-ref name="overflow" scoped="" ref="0x40ddf308"/>
        <function-ref name="isOn" scoped="" ref="0x40dde010"/>
        <function-ref name="set" scoped="" ref="0x40ddf068"/>
        <function-ref name="start" scoped="" ref="0x40ddf7f8"/>
        <function-ref name="stop" scoped="" ref="0x40ddfa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e04370" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e04370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40e04548"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e04628"/>
        <function-ref name="getControlA" scoped="" ref="0x40e04708"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e047e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e048c8"/>
        <function-ref name="setControlB" scoped="" ref="0x40e049a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e04a88"/>
        <function-ref name="getControlB" scoped="" ref="0x40e04b68"/>
        <function-ref name="setControlC" scoped="" ref="0x40e04c48"/>
        <function-ref name="setControlA" scoped="" ref="0x40e04d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e00010" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e00010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dff578"/>
        <function-ref name="fired" scoped="" ref="0x40e00b70"/>
        <function-ref name="get" scoped="" ref="0x40e00658"/>
        <function-ref name="reset" scoped="" ref="0x40e00de8"/>
        <function-ref name="isOn" scoped="" ref="0x40dff7f0"/>
        <function-ref name="set" scoped="" ref="0x40e008d0"/>
        <function-ref name="start" scoped="" ref="0x40dff088"/>
        <function-ref name="stop" scoped="" ref="0x40dff300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e03078" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e03078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e01af0"/>
        <function-ref name="test" scoped="" ref="0x40e01600"/>
        <function-ref name="get" scoped="" ref="0x40e036c0"/>
        <function-ref name="captured" scoped="" ref="0x40e03bd8"/>
        <function-ref name="reset" scoped="" ref="0x40e03e78"/>
        <function-ref name="isOn" scoped="" ref="0x40e01878"/>
        <function-ref name="set" scoped="" ref="0x40e03938"/>
        <function-ref name="start" scoped="" ref="0x40e01110"/>
        <function-ref name="stop" scoped="" ref="0x40e01388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40dffc08" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40dffc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dfc1a0"/>
        <function-ref name="fired" scoped="" ref="0x40dfe790"/>
        <function-ref name="get" scoped="" ref="0x40dfe278"/>
        <function-ref name="reset" scoped="" ref="0x40dfea08"/>
        <function-ref name="isOn" scoped="" ref="0x40dfc418"/>
        <function-ref name="set" scoped="" ref="0x40dfe4f0"/>
        <function-ref name="start" scoped="" ref="0x40dfec80"/>
        <function-ref name="stop" scoped="" ref="0x40dfeef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40dfc830" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40dfc830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dfbd90"/>
        <function-ref name="fired" scoped="" ref="0x40dfb3b0"/>
        <function-ref name="get" scoped="" ref="0x40dfce78"/>
        <function-ref name="reset" scoped="" ref="0x40dfb628"/>
        <function-ref name="isOn" scoped="" ref="0x40dfa048"/>
        <function-ref name="set" scoped="" ref="0x40dfb110"/>
        <function-ref name="start" scoped="" ref="0x40dfb8a0"/>
        <function-ref name="stop" scoped="" ref="0x40dfbb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e06010" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e05a68"/>
        <function-ref name="test" scoped="" ref="0x40e05578"/>
        <function-ref name="get" scoped="" ref="0x40e06658"/>
        <function-ref name="setScale" scoped="" ref="0x40e05ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40e04010"/>
        <function-ref name="reset" scoped="" ref="0x40e06de8"/>
        <function-ref name="overflow" scoped="" ref="0x40e06b70"/>
        <function-ref name="isOn" scoped="" ref="0x40e057f0"/>
        <function-ref name="set" scoped="" ref="0x40e068d0"/>
        <function-ref name="start" scoped="" ref="0x40e05088"/>
        <function-ref name="stop" scoped="" ref="0x40e05300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e4d440" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e4d440"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e4d618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e4d828" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e4d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e4b2c0"/>
        <function-ref name="test" scoped="" ref="0x40e4cd90"/>
        <function-ref name="get" scoped="" ref="0x40e4de70"/>
        <function-ref name="setScale" scoped="" ref="0x40e4b538"/>
        <function-ref name="getScale" scoped="" ref="0x40e4b7d8"/>
        <function-ref name="reset" scoped="" ref="0x40e4c628"/>
        <function-ref name="overflow" scoped="" ref="0x40e4c3b0"/>
        <function-ref name="isOn" scoped="" ref="0x40e4b048"/>
        <function-ref name="set" scoped="" ref="0x40e4c110"/>
        <function-ref name="start" scoped="" ref="0x40e4c8a0"/>
        <function-ref name="stop" scoped="" ref="0x40e4cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e50a68" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e50a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40380010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e4f200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e4f6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e4f478"/>
        <function-ref name="overflow" scoped="" ref="0x40e4f968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e4fc48" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e4fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e466a0"/>
        <function-ref name="test" scoped="" ref="0x40e461b0"/>
        <function-ref name="get" scoped="" ref="0x40e482a8"/>
        <function-ref name="setScale" scoped="" ref="0x40e46918"/>
        <function-ref name="getScale" scoped="" ref="0x40e46bb8"/>
        <function-ref name="reset" scoped="" ref="0x40e48a38"/>
        <function-ref name="overflow" scoped="" ref="0x40e487c0"/>
        <function-ref name="isOn" scoped="" ref="0x40e46428"/>
        <function-ref name="set" scoped="" ref="0x40e48520"/>
        <function-ref name="start" scoped="" ref="0x40e48cb0"/>
        <function-ref name="stop" scoped="" ref="0x40e48f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e43cd8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e43cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40380010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e42478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e42968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e426f0"/>
        <function-ref name="overflow" scoped="" ref="0x40e42be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40de5a10" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40de5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e43200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e436f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e43478"/>
        <function-ref name="overflow" scoped="" ref="0x40e43968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40e73738" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40e73738"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40e73910"/>
        <function-ref name="offset" scoped="" ref="0x40e739f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40e73ad0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403a6a70" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403a9e18" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403b0508" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403b03b0" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403acb58" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403b21c0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403b2068" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403b2888" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403b2730" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403b2de0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403b8158" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b8540" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403ba9b0" loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403b8d10" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403bad70" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b8918" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403ba270" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403ba600" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40313658" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40315010" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40313a98" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40318f20" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40317450" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40384b98" loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40399b28" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4033fbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403920f8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404af738" loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404af5e0" loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404bb730" loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404bb5d8" loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404b2c30" loc="104:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404afc48" loc="130:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404f3690" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
              <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f3148" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404f3328" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404f3508" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4050d168" loc="177:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050d010" loc="177:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40506a10" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405068b8" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404b0940" loc="68:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40506010" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404b0e80" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40503378" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40503010" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40503218" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40505668" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40505300" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40505508" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40502a68" loc="147:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40502910" loc="147:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x405015e8" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405012b8" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40501488" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4048d778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40503f18" loc="136:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40503dc0" loc="136:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4050dde8" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050da88" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4050dc88" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4050b670" loc="195:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404f2398" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f2240" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x404f2d68" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f2c10" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404fbe58" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404fbaf8" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404fbcd8" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404fb510" loc="106:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x404fdb60" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404fd820" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404fda00" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40514460" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405148a8" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40514d28" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405125b0" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x405112b8" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40511760" loc="117:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40512168" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40511ea0" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40511d48" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40514038" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40512a30" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40512e58" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x404ecac0" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404ec560" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404ec778" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ec958" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404f67a0" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f6440" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404f6620" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404f8de8" loc="123:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404f77b0" loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f7658" loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404f84e0" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f8188" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404f8380" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405682a8" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4055bf00" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40568148" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40561480" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405610e8" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40561320" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40570010" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40561de8" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40562be8" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40562568" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40562410" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40559bb8" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40559a60" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x405646e0" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40564588" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40565188" loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40565030" loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x4056c010" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056de98" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4056f440" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056f0a8" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4056f2e0" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4056d6a0" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056d548" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4056d028" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056fc80" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4056feb8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x4056c930" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056c7d8" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40569138" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40567c38" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40567ae0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40569638" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x405780c0" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405780c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40578228" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578228"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40577418" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578228"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405772c0" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40577eb0" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40577d58" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x405788b0" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578758" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40575990" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578228"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40575620" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40575830" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578228"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40579a48" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40579a48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40586da8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40586c50" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40586788" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40579a48"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40586630" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40586168" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40586010" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40585570" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40579a48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405851f8" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40585410" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40579a48"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4058db40" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4058db40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4058e038" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40581bf0" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40581a98" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4059a4a8" loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4059bb78" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4059b578" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4059a038" loc="102:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4059aba0" loc="128:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x405a6d08" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a6bb0" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x405a6138" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405a6738" loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a65e0" loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405a5cc8" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a5928" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405a5b68" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405a5528" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a5188" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405a53c8" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x405a4850" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x404e0d18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a46f8" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x405a2010" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x404e0d18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a4c30" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405a4e60" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x404e0d18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405a42a0" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a4148" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405a2450" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x404e0d18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405a0940" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x405a03e0" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405a05f8" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405a07d8" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4059db98" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059d838" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4059da18" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4059d2d8" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4059f2e0" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f188" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4059fcc0" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f968" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4059fb60" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x405c2a38" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x405ca240" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ca0e8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x405d3b28" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d39d0" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x405d2948" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d27f0" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405c3da8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3c50" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405c3010" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c4e50" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405d3560" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d31f8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d3400" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405c37d8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3470" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405c3678" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x405d2370" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d2010" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405d2210" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405c62a8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405c68b0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405c5eb0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c5d58" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405c5010" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c6ea0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405c5708" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c55b0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405e2488" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405d0c50" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x404e19d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405d0af8" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x404e19d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405e2090" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405d05e0" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405e2948" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404e19d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x405deb48" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405de9f0" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405e0168" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405e0e80" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405e09c0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0660" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405e0860" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405e49c0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e4868" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405de530" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405de3d8" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x405b23e8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405b7ed0" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7d78" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405b2ac8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2970" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x405b1038" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405b1768" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b1610" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405cb478" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cb320" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405bed68" loc="86:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405be8d0" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405be558" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405be770" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405c0750" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c05f8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405c0e18" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c0cc0" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405bf820" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405bf4a8" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405bf6c0" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x405b47e8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405c0090" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b4d30" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405b4ef8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405be010" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bfde0" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405d9058" loc="131:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405daed0" loc="131:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405da220" loc="120:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405da0c8" loc="120:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405ce1c8" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bde40" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x405ce068" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405cd580" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cd428" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405d64a8" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d6148" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d6348" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405ceed0" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ced78" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405daa18" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405da6d8" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405da8b8" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405cc510" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405cc198" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405cc3b0" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405d7c98" loc="151:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d7b40" loc="151:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405ce830" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce6d8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405dc4e8" loc="99:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc390" loc="99:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405cce18" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405ccaa0" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405cccb8" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x405d5c00" loc="178:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404de010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405d6ad0" loc="162:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d6978" loc="162:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405d5760" loc="173:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x404e0d18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405d7670" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d7310" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d7510" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405cdc30" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cdad8" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405dbbf0" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db8a0" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405dba90" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405d9840" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d94f0" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405d96e0" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405e5200" loc="185:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e50a8" loc="185:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405dccf0" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc9c8" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405dcb90" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x405bd988" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bd830" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405d5200" loc="168:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d50a8" loc="168:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405d9e70" loc="141:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d9d18" loc="141:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405db3b8" loc="110:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db260" loc="110:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405ba010" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bbc80" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405bbe80" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x405ba488" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x405bb168" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb010" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405bb7b0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb658" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x405c96f0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c9598" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405c9010" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cae70" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405c9be8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405c72e0" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c7188" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40625aa0" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40625aa0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40625c08" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40620ed8" loc="98:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40622bb8" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40620890" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40620540" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          </variable>
          <variable name="dt" ref="0x40620730" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40620038" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4061f3a0" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40622278" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40622120" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625c08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40622758" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4062bb20" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40627138" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40627778" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4062b6f8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40648580" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40648428" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40645620" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406454c8" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40648ef0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40648b98" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40648d90" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x406475e8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
              <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40647470" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40660090" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40660900" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40660500" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4064fb88" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4064f820" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4048d9d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4064fa28" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406b5c58" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406b22c8" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406c4010" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406b4a70" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x406b15a8" loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x406b1aa8" loc="98:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406be940" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406b3300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406be7e8" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406b3300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x406c15d0" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x406c1c90" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406b3300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406c1b38" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406b3300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x406be258" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x406b3300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4078f938" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
              <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4078f7c0" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x4078f168" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4078f010" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4079c6f0" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4079c598" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x4079cb50" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4078ac58" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4078ab00" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4079c1c0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4079c068" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x407a0670" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407a0518" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x4079f328" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4079f1d0" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x407a0d20" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407a0bc8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x4079f9c0" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4079f868" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x407a0010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4078be90" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4048dc30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407c80c0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407c80c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407de820" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407e0668" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x407df800" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407df4b8" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407df6a0" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x407df010" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x407dd1a8" loc="140:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x407dec68" loc="133:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x407e0af8" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x407c8718" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407c85c0" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x407de200" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407dfea0" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407de0a0" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x407c8db0" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407c8c58" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407e02a0" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40821698" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40821698"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40821800" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40821800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40821ce8" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40821800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4081e7c0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4081e2c0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4081ebe8" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40838d50" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40838320" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40827f08" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x408388e0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40838788" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40839e70" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40839d18" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40837330" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x408371d8" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40839380" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x408398f8" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408397a0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x4084a9d0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x4082f668" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x4082fa90" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x4084a010" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4084ae90" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x4084a4f0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40836b60" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4082f188" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4082f030" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4083b2f8" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4083b2f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40833210" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408351c8" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4083b7f0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4083b2f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408355d0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40833670" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4083bd78" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4083b2f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4083bc20" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4083b2f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408359d8" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40835dd0" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40826010" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40826010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x408237c8" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40825f20" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40826500" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40826010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40823d58" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40823c00" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40822210" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408252f8" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40826ea8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x408233a0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40826a78" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40826010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40826920" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40826010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40825700" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40825af8" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40923e60" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x409208c8" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40920ef0" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40920d98" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x4091f360" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x409203f0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4091f880" loc="74:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40922940" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409227e8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x4091c660" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4091c168" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4091c010" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x409574b8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40957010" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4097f8d8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097f8d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4097ff28" loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097f8d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4097fdd0" loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097f8d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40987a48" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409878f0" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4098a700" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098a5a8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x4098aed0" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098ab90" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4098ad70" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409874b8" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40987360" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x409aa6a8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409aa550" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409aa090" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a4e3f0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a4e3f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a4e558" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a4e558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a4eb70" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a4e558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a4ea18" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a4e558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a2d910" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a2c2d8" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a2de78" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a2dd20" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a2d408" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a33d38" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a33be0" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a30948" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a307f0" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a30270" loc="68:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a2f010" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a30e38" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40ac4810" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac4810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40abf318" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40abf1c0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40ac0910" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ac4d08" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac4810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40ac1888" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac4810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ac1730" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac4810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40ac1cc8" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40ac0d70" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ac12b0" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac4810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ac1158" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac4810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ac00f8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac04f0" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ad6368" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ad9d40" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ad6010" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad6200" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ad59a8" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ad5228" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ad5440" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad5630" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ad5838" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40ada878" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40ada720" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40aee460" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40ae9b20" loc="109:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40aebca8" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40ae8168" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40ae8010" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40aee010" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40aeac20" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40aeaac8" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40aedec8" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40aedd70" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40aeecf0" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ae5218" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ae50c0" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40aeb338" loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40ae8af0" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40ae8998" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ae63a8" loc="120:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ae96d8" loc="108:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40ae9580" loc="108:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40ae6c70" loc="124:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40aea258" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40aea100" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40aed2b8" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aed160" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40aeb888" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40aeb730" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40ae90f8" loc="106:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40ae8590" loc="112:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40ae8f00" loc="115:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ae6800" loc="122:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40aea690" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40aee888" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40aed880" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aed728" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b212f0" loc="95:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b217d8" loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b63460" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b619f8" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b66bd0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b60480" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b60010" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b61e60" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b61010" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b63df8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b60a48" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b608f0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b63038" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b61588" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b61430" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b639d8" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b63880" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c39488" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c39148" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c39328" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40c61190" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c63d78" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c61010" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c63818" loc="112:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c64168" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c64010" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c64e00" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c64aa8" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40c64ca0" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40c833a0" loc="31:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c83010" loc="31:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40c83240" loc="31:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40c850c8" loc="15:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40c85998" loc="23:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c85620" loc="23:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404ed2e8"/>
                <typename><typedef-ref name="message_t" ref="0x404ec0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40c85838" loc="23:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40c95c28" loc="95:/home/user/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40cbb138" loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40cba368" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40cbbeb8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40c9c9c0" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40c94698" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40c93790" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c93638" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40c94bc0" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40c94168" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c94010" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40c93c98" loc="100:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40c93138" loc="85:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/user/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40c9baa0" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40c99090" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40c9b490" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40c9b338" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40c997c8" loc="91:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c99670" loc="91:/home/user/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40c9d9d0" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40c971e0" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c97088" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40c97878" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c97720" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d598d0" loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d59580" loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d59770" loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40d55c60" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d55b08" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d53480" loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d53130" loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d53320" loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40d550c8" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40d52370" loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d53da8" loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d52010" loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d52208" loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40d55650" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d56750" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d56200" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d563f0" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d565e8" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d725e0" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d72488" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d72e78" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d72b10" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40d72d18" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40d63698" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40d66de0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40d62cc0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d62b68" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40d623c0" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40d66568" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40d669a8" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40d63298" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40d63a98" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40d62010" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d63e48" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40d62790" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
