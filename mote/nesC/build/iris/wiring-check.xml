<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403ad078"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40420858"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40420858"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4041fa30"/></to>
    </wire>
    <wire loc="27:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403aa4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4041ef08"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4041ef08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405453f0"/></to>
    </wire>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x403f8a70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d0de08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d0de08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41147a68"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x403f6d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d6f2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d6f2c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405221f8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x403faba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c04940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c04940"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407d03f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x403ff218"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c3b188"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40c3b188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4113d5f0"/></to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4040cdf8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c07c90"/></to>
    </wire>
    <wire loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c07c90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c003e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41133a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410fd8c8"/></to>
    </wire>
    <wire loc="119:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x409f1118"/></to>
    </wire>
    <wire loc="52:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40955118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4107a988"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407e4060"/></to>
    </wire>
    <wire loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077a238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fd07b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f8d070"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4041fdc8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4051c400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a93300"/></to>
    </wire>
    <wire loc="122:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4051c400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409f2aa0"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4051c400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4041c868"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4041c868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40425c68"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4051c808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4042a9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c440b0"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4042a9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b91480"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042a268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40503010"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40428490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40504bf8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40428088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c166e0"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40428088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404244a0"/></to>
    </wire>
    <wire loc="23:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404244a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4042e420"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40424870"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4042a9c8"/></to>
    </wire>
    <wire loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40435a68"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4043cea8"/></to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4043cea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40480170"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4042d4a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40424870"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4045a210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404d40b0"/></to>
    </wire>
    <wire loc="165:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40446750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40499090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40499090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e3bde0"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4044cce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404a8d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404a8d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e68c08"/></to>
    </wire>
    <wire loc="185:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40452ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ab7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404ab7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecc7f8"/></to>
    </wire>
    <wire loc="196:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40457750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e2880"/></to>
    </wire>
    <wire loc="143:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4043a2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4047f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4047f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db0a88"/></to>
    </wire>
    <wire loc="183:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40453a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ac4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404ac4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9a3b0"/></to>
    </wire>
    <wire loc="146:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40439750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404863d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404863d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de4938"/></to>
    </wire>
    <wire loc="157:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4043fea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40494170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40494170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e0d9e8"/></to>
    </wire>
    <wire loc="168:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40444670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40498d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40498d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e36c08"/></to>
    </wire>
    <wire loc="179:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40449c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a6ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404a6ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e96a88"/></to>
    </wire>
    <wire loc="138:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40431010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40482410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40482410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d837f8"/></to>
    </wire>
    <wire loc="149:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40437670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40490030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40490030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddf7f8"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4043dce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40493e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40493e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e079e8"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4044e4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a2ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404a2ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e31a88"/></to>
    </wire>
    <wire loc="188:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40450ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a94f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404a94f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec76c0"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404582f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404da880"/></to>
    </wire>
    <wire loc="174:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4044d8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4049da80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4049da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e6b7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40480170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d7e6c0"/></to>
    </wire>
    <wire loc="152:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40441590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4048fc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4048fc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dda6c0"/></to>
    </wire>
    <wire loc="192:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4045ae08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404df880"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40440a08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4048bdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4048bdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e10538"/></to>
    </wire>
    <wire loc="166:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40445210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404999e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404999e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e397f8"/></to>
    </wire>
    <wire loc="177:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4044a750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404a7790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404a7790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e656c0"/></to>
    </wire>
    <wire loc="186:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404518e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404aa170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404aa170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eca228"/></to>
    </wire>
    <wire loc="144:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4043ace8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4047fe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4047fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dad538"/></to>
    </wire>
    <wire loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40438210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40486d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40486d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de23b0"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4043e8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40494ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40494ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e0b538"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404430a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40497790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40497790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e346c0"/></to>
    </wire>
    <wire loc="180:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40454670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a54f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404a54f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e94538"/></to>
    </wire>
    <wire loc="139:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40431a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40482d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40482d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d81228"/></to>
    </wire>
    <wire loc="150:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404420a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40490988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40490988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddd228"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40448750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404927d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404927d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e05538"/></to>
    </wire>
    <wire loc="189:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4044f750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a9e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404a9e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec50b0"/></to>
    </wire>
    <wire loc="164:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40447c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4049a6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4049a6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e3c418"/></to>
    </wire>
    <wire loc="175:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4044c2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404a8410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404a8410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e69228"/></to>
    </wire>
    <wire loc="184:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404524b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ace48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404ace48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e99d70"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40458ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e40b0"/></to>
    </wire>
    <wire loc="142:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4043b8e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40480ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40480ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db10b0"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40440010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4048e6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4048e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dd80b0"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404530a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404adb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404adb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9c938"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4043f4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40496790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40496790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e0e010"/></to>
    </wire>
    <wire loc="167:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40445c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40498410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40498410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e37228"/></to>
    </wire>
    <wire loc="178:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x40449210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404a6170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404a6170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e970b0"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404502f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404aaac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404aaac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec9c08"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40430538"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40483a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40483a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d88e18"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40438c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404856b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404856b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de1d70"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4043d2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404934f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404934f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e09010"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40443a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a2170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404a2170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e320b0"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40459830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404dc0b0"/></to>
    </wire>
    <wire loc="173:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4044eea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4049d128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4049d128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e70de8"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x40447210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40491170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40491170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e03010"/></to>
    </wire>
    <wire loc="140:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4043c4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40481790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40481790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d80c08"/></to>
    </wire>
    <wire loc="151:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40442b18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4048f330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4048f330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddcc08"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x408332c8"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405453f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4056a1c0"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40521120"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405504b0"/></to>
    </wire>
    <wire loc="84:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405504b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405681b0"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40525078"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4054f600"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4054f600"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40565110"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405077f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40545cc8"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40545cc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4056aa98"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40522890"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40552db0"/></to>
    </wire>
    <wire loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40552db0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40569b10"/></to>
    </wire>
    <wire loc="76:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40534e58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4054d010"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4054d010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4056f978"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405221f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40552718"/></to>
    </wire>
    <wire loc="82:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40552718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40569478"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4051d010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4054ea10"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4054ea10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4056f3f0"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4053e7a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4054d630"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4054d630"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4056b010"/></to>
    </wire>
    <wire loc="73:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4052cdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054fcf0"/></to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4054fcf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40567380"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4053c1d8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4054dd48"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4054dd48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4056b728"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40548c68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40561ba8"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40561ba8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4057f8c0"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40547650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4055f578"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4055f578"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057c3a0"/></to>
    </wire>
    <wire loc="215:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4056a1c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408db2c0"/></to>
    </wire>
    <wire loc="99:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4055ad18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40582580"/></to>
    </wire>
    <wire loc="305:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40582580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409e2bf8"/></to>
    </wire>
    <wire loc="270:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057c3a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40996998"/></to>
    </wire>
    <wire loc="124:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405681b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40671c28"/></to>
    </wire>
    <wire loc="126:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40565110"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406725b0"/></to>
    </wire>
    <wire loc="121:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4056aa98"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40672ce0"/></to>
    </wire>
    <wire loc="123:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40569b10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40671868"/></to>
    </wire>
    <wire loc="98:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4054b8f8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40573218"/></to>
    </wire>
    <wire loc="303:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40573218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409e3888"/></to>
    </wire>
    <wire loc="216:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4056f978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408d48c8"/></to>
    </wire>
    <wire loc="122:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40569478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40671488"/></to>
    </wire>
    <wire loc="269:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4057f8c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409c7180"/></to>
    </wire>
    <wire loc="102:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40561010"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="307:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40580cd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409dcb78"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40557540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4056be18"/></to>
    </wire>
    <wire loc="304:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4056be18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x409dd3d8"/></to>
    </wire>
    <wire loc="248:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4056f3f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4094a628"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40550bb0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x405688b0"/></to>
    </wire>
    <wire loc="128:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x405688b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40670030"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4056b010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x408c49a0"/></to>
    </wire>
    <wire loc="125:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40567380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40673940"/></to>
    </wire>
    <wire loc="224:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4056b728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40924570"/></to>
    </wire>
    <wire loc="100:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40554df8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405807e0"/></to>
    </wire>
    <wire loc="306:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405807e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409dc680"/></to>
    </wire>
    <wire loc="87:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x4054f2a8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40567010"/></to>
    </wire>
    <wire loc="129:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40567010"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40670410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408db2c0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408d4ed0"/></to>
    </wire>
    <wire loc="88:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409e2bf8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409ee7d0"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40564778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406d8488"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4056cf18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40685570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40685570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f8b3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40671c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40f4dc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40672ce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f4ece0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Snoop" scoped="" ref="0x40671868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40f4d868"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40576098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40755170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40755170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40fc2950"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40576bf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406c63b0"/></to>
    </wire>
    <wire loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409e3888"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409ef458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408d48c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41042060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x406725b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f4e5b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40671488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f4d488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409c7180"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x410a40c0"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409dcb78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a97dc0"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x409dd3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0b010"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40570ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x406c6a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40670030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40f4c030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketLink" scoped="" ref="0x408c49a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40ff7230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40924570"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41079568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40673940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f4f938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40996998"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x410a98c0"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40564328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x406d8170"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409dc680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0a278"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40670410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40f4c410"/></to>
    </wire>
    <wire loc="102:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405afe20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40757658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40757658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40fc9f20"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405bc4c8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f1108"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x405ae088"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409c7180"/></to>
    </wire>
    <wire loc="105:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x405b96a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409e4ed0"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409e4ed0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f0a90"/></to>
    </wire>
    <wire loc="110:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405f19c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409db618"/></to>
    </wire>
    <wire loc="100:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409db618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a982a8"/></to>
    </wire>
    <wire loc="116:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4066f768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4059d428"/></to>
    </wire>
    <wire loc="117:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40670f20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4067d538"/></to>
    </wire>
    <wire loc="118:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4066f430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x406e6748"/></to>
    </wire>
    <wire loc="119:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40670788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x406e6a80"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4067c010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40685570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4067da60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x406e6250"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406d87d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40757658"/></to>
    </wire>
    <wire loc="154:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406d59e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x406e7228"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406d5ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x406e7720"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x406d5250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x406e7a58"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4070a280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40751388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40751388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fd3ea8"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4070a778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408c4688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408c4688"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408c3d30"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4070aab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40755b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40755b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40fc13f0"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40754368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408c3070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408c3070"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ff78c8"/></to>
    </wire>
    <wire loc="181:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4078f668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40585010"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40751ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408c4190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408c4190"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ffbc98"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c1808"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4094a628"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408c3838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408db898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408db898"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408cf4c0"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408c3d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408dbd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408dbd90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408cf9b8"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408c1090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408d4150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408d4150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408cfcf0"/></to>
    </wire>
    <wire loc="211:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408d4ed0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408e7778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408e7778"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4107a3b0"/></to>
    </wire>
    <wire loc="212:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408cf4c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408e7d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408e7d50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4107acc0"/></to>
    </wire>
    <wire loc="213:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408cf9b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40924258"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40924258"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41079250"/></to>
    </wire>
    <wire loc="214:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408cfcf0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409c67f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409c67f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x410a37b8"/></to>
    </wire>
    <wire loc="221:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40923230"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4091f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x4091f010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x41094580"/></to>
    </wire>
    <wire loc="222:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40923708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40751860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40751860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40fd03c0"/></to>
    </wire>
    <wire loc="223:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40924a78"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409cd328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409cd328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409c91b0"/></to>
    </wire>
    <wire loc="228:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4078f250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4091f4e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4091f4e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41094a58"/></to>
    </wire>
    <wire loc="237:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4093b928"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40596e28"/></to>
    </wire>
    <wire loc="238:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4091f930"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4094bcf8"/></to>
    </wire>
    <wire loc="239:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4091fe28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4094a230"/></to>
    </wire>
    <wire loc="240:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4093b270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f1108"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x4096f4f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409cfdb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40970458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f1108"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40970b10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4058d8d8"/></to>
    </wire>
    <wire loc="253:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4094ab50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40980de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40980de0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4097dcc8"/></to>
    </wire>
    <wire loc="254:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40970060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4097f310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4097f310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4097b250"/></to>
    </wire>
    <wire loc="259:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097a250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4059c3c0"/></to>
    </wire>
    <wire loc="260:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4097dcc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409cdaa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409cdaa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409c99c8"/></to>
    </wire>
    <wire loc="261:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4097b250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409cc010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409cc010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409c9ec0"/></to>
    </wire>
    <wire loc="262:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x4097b668"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409e4a68"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409e4a68"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409f0628"/></to>
    </wire>
    <wire loc="267:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409c4078"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409dcb78"/></to>
    </wire>
    <wire loc="268:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409c48f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409c03f0"/></to>
    </wire>
    <wire loc="271:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409c3098"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409cfdb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409c0bb8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409e4ed0"/></to>
    </wire>
    <wire loc="286:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409eaeb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4059c3c0"/></to>
    </wire>
    <wire loc="287:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c99c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409e40c0"/></to>
    </wire>
    <wire loc="76:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409e40c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409f1c70"/></to>
    </wire>
    <wire loc="288:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409c9ec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409e4618"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409e4618"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409f01d8"/></to>
    </wire>
    <wire loc="289:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x409c91b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409e78b0"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409e78b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409f1498"/></to>
    </wire>
    <wire loc="301:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409fa170"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x40592518"/></to>
    </wire>
    <wire loc="302:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409faad8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409c7180"/></to>
    </wire>
    <wire loc="309:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409f8370"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409cfdb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x409f8a08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409cfdb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x409f60e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409cfdb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409f6700"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f1108"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405f1108"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40f21608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40f21e00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405f19c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x40f1e7d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4060aa60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f4a070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066cd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f4c788"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40670788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40f4cf20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40670f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f4b430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4066f430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x40f4b768"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4066f768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40685cb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f8bb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406c9150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f8bf20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f8a3f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406c9600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40f8a820"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f8d3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f8ae18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40fc1b98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066cd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40fc0250"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40754368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40fcf9e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4077d610"/></to>
    </wire>
    <wire loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4077d610"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4077a5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fce150"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41006578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41006578"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40777010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40fd0b20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40751ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x40fcf030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4078f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40fcf428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4078f668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40ff60c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408c3838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ff6598"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c1808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ff3d88"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408c1090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x40ff6b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ff1ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40ff1ba0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407d03f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="send" scoped="" ref="0x40ff25f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407d03f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407e4810"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407e4810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40888a60"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407e4060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407dd290"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x407e2b40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408b1460"/></to>
    </wire>
    <wire loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407dd290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40872870"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x408b7e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407dec60"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4088c010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x407dd858"/></to>
    </wire>
    <wire loc="36:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x407dd858"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40872ca8"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408b1df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x407f0310"/></to>
    </wire>
    <wire loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x407f0310"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4086f718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4086f718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4100a800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40872870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4100d948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40872ca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4100dd80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41008a68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40829980"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40829980"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4083b8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41040c48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40840c80"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40840c80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40837bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x4103f660"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4083f878"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4083f878"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40835798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4103c090"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4083c3c0"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4083c3c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40833728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4088b9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x408b2050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x41079a70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40924a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41078230"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4060aa60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x410787e8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40923230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41078cc0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40923708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x410765c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41076a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x41076190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41094ea0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4091f930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x410922b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4093b928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x410933e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4091fe28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x410937d8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4093b270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x41093e70"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4093a478"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4093a478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40955ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x410928a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40938b58"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40955638"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4093d918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40955118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4096a8a0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4097e698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4097f708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x4097b668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40980668"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4097d4b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4097fb00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4097ba80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x4097e330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4097a250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40980350"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x4097d178"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x4096ae58"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x4097ec70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x410a0888"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409c48f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x410a1678"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409c4078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x410a0010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409ab5e0"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409ab5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x407e2b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x410a1010"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409c3098"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x409ce548"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409cb378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409cc408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409ea300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409cc800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409ea718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409cb010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409eaeb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x409cd010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409cbe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x409ceb00"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409cb950"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a982a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b70c88"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409df010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ecba8"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a97dc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bb7580"/></to>
    </wire>
    <wire loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409ff730"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409fa170"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409fff00"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409f8370"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x409fd5b0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x409f8a08"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x409fdc70"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x409f60e0"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409fc488"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x409faad8"/></to>
    </wire>
    <wire loc="98:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409fedb8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a97dc0"/></to>
    </wire>
    <wire loc="101:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a1c298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409f6700"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a0a690"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40a7bd98"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a7bd98"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40439750"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a09148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a78858"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a78858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aa4010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a04728"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a9a010"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a9a010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aa61e0"/></to>
    </wire>
    <wire loc="107:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a04da0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a9a688"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a9a688"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40440010"/></to>
    </wire>
    <wire loc="108:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a08820"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a99090"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a99090"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4043a2f0"/></to>
    </wire>
    <wire loc="110:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a009e0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a99a78"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a99a78"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a96bb0"/></to>
    </wire>
    <wire loc="111:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a1dc48"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4060aa60"/></to>
    </wire>
    <wire loc="112:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409fe300"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bda010"/></to>
    </wire>
    <wire loc="847:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a56dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b70c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410e1010"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aa61e0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a9d850"/></to>
    </wire>
    <wire loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bb7580"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40be1f18"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a8c810"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40443a98"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a8b220"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40444670"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a8d998"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b2b968"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b2b968"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b420f0"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a9f800"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a9de68"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40aa7df0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a9d4c8"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40aa7178"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a9d168"/></to>
    </wire>
    <wire loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aa4010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a9c5a8"/></to>
    </wire>
    <wire loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40abf3d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b11b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b11b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410fac58"/></to>
    </wire>
    <wire loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40abfae0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b106d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b106d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410f97b8"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ab0780"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a9ee50"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a9ee50"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40af01e8"/></to>
    </wire>
    <wire loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40aaf010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="241:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40ac11e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40aeb898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40aee010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40439750"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40aee9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x40438210"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40aed4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40438c08"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40aede88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40437670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b102c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410f93b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410f9c78"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b10b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x410f8170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410fdc00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x410f8768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b27c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b433c8"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b2f230"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b1f0e0"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b25c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b40010"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b25c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b3ec08"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b25c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b3c830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x4111ea18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b2f230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4111bcd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b25c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b91868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b2f230"/></to>
    </wire>
    <wire loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40be08c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bb2e60"/></to>
    </wire>
    <wire loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40be20e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bb4698"/></to>
    </wire>
    <wire loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bb4698"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40baee90"/></to>
    </wire>
    <wire loc="32:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bcd078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b2f230"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c166e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c000a0"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40bff110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40c198e8"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c198e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40431a08"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40bffaf8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40c18308"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c18308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40431010"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c28580"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40c18d10"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c18d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40430538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x4113d5f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4113cde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x4113cde0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c2d348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4113b9a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d0ec88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c2a740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4113b9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c29010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c50010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40c4d418"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4113be80"/></to>
    </wire>
    <wire loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c2d348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cf39d8"/></to>
    </wire>
    <wire loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40c537a8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40cdc178"/></to>
    </wire>
    <wire loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d12390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c29010"/></to>
    </wire>
    <wire loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cdb6b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c2a740"/></to>
    </wire>
    <wire loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40cf2710"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cdd1d8"/></to>
    </wire>
    <wire loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40cdcde8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c4a9e8"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c4a9e8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c448f0"/></to>
    </wire>
    <wire loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40cdbd98"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bda010"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c47b88"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c44e78"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c50010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cc5420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40cc5420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4112f010"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40cc4b58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c4d418"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c66818"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c49a08"/></to>
    </wire>
    <wire loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c49a08"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c73730"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c42ce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042a268"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40cf09f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40c44460"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cef150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cc4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cc4010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4112fb58"/></to>
    </wire>
    <wire loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40c70b40"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40cc5b60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4112f750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40cc46a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4112e230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4112e6f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40cc4b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4112eb18"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41133dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4112dd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41151758"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40cf09f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41151b50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40cf0de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41151e68"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cef150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4114f510"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40cef7e8"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40cfe9b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41147a68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4113e538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d0c4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41144150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41144150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40525078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d0cb68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x411447e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411447e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052cdf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d75790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41143410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41143410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4051d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4113ec00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d4bf00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4117c310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052cdf8"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d4bf00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d45da0"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d4f598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405077f0"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d4fc40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052cdf8"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d4e850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40525078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40d4ef28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40d7d370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d6f5d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40525078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d6fc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052cdf8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="33(HplAtm128GeneralIOC.G5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RF230RadioC.PacketLinkLayerC.PacketLinkLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RF230RadioC.PacketLinkLayerC.DelayTimerC):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407d9f08"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="44(OscilloscopeAppC.TimerMilliC):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="19(OscilloscopeAppC.Sensor):/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.DemoChannel" loc="39(OscilloscopeAppC.Sensor.DemoChannel):/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC):/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404555e8" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40455800" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40455a18" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404649e8" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40464c10" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40464e38" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40461068" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404b0088" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404b02b0" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404b04d8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404b06c8" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406844c0" loc="83:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4068f298" loc="42:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407d9f08" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407d9f08"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407ee0f0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407e7328" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407e7328"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407e74e8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407df6e8" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407df6e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4088ad10" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4088ad10"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4088aef0" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408cd3f8" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408cd3f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b92c40" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b92c40"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40b92e60" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b94940" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b94940"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b94d88" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b94d88"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b84010" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40baf490" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40baf490"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40baf8d8" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40baf8d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40bc85e0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40bc85e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40bc8a40" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40bc8a40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40bc8ca8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40bc8ca8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40bc7148" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40bc7148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40bc73b0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40bc7838" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40bc7838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="19:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40c75860" loc="89:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40ca4b20" loc="42:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40cc0528" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40cdede8" loc="23:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40cdede8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c3a698" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d312b0" loc="47:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d2fd48" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40d473c0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d74a70" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x403ad078" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403ad078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403ad250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x403f8a70" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x403f8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403f8c48"/>
        <function-ref name="getPayload" scoped="" ref="0x403f8d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403f8e08"/>
        <function-ref name="cancel" scoped="" ref="0x403f8ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x403a7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403aa4e0" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403aa4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403aa6b8"/>
        <function-ref name="stopDone" scoped="" ref="0x403aa798"/>
        <function-ref name="start" scoped="" ref="0x403aa878"/>
        <function-ref name="stop" scoped="" ref="0x403aa958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x403ff218" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x403ff218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x403ff840"/>
        <function-ref name="readDone" scoped="" ref="0x403ffa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x403f6d50" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x403f6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403f6f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040cdf8" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40401010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404010f0"/>
        <function-ref name="led1On" scoped="" ref="0x404011d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404012b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40401390"/>
        <function-ref name="get" scoped="" ref="0x40401470"/>
        <function-ref name="led1Off" scoped="" ref="0x40401550"/>
        <function-ref name="led2Off" scoped="" ref="0x404018d0"/>
        <function-ref name="set" scoped="" ref="0x40401630"/>
        <function-ref name="led0On" scoped="" ref="0x40401710"/>
        <function-ref name="led2On" scoped="" ref="0x404017f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x403faba8" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x403faba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403f46a8"/>
        <function-ref name="fired" scoped="" ref="0x403f5948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403f4068"/>
        <function-ref name="isOneShot" scoped="" ref="0x403f5df8"/>
        <function-ref name="getdt" scoped="" ref="0x403f4b58"/>
        <function-ref name="gett0" scoped="" ref="0x403f4900"/>
        <function-ref name="isRunning" scoped="" ref="0x403f5ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403f51f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403f4388"/>
        <function-ref name="startOneShot" scoped="" ref="0x403f5470"/>
        <function-ref name="stop" scoped="" ref="0x403f56f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4041d4a0" loc="58:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4041d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041d678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40420858" loc="57:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40420858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40420a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4042a9c8" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4042a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4041c868" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4041c868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4042a268" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4042a440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4042a520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4042a600"/>
        <function-ref name="actualMicro" scoped="" ref="0x4042a6e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4042a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40428088" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40428088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40428260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40425c68" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40425c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40425e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40428490" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40428490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40428668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40424870" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40424870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40424a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404244a0" loc="17:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404244a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40424678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4042d4a8" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4042d4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40435a68" loc="21:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40435a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435c40"/>
        <function-ref name="isInput" scoped="" ref="0x40435d20"/>
        <function-ref name="toggle" scoped="" ref="0x40435e00"/>
        <function-ref name="isOutput" scoped="" ref="0x40435ee0"/>
        <function-ref name="get" scoped="" ref="0x4042d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d0f0"/>
        <function-ref name="set" scoped="" ref="0x4042d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4042e420" loc="20:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4042e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4045a210" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4045a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4045a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4045a7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a888"/>
        <function-ref name="get" scoped="" ref="0x4045a968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045aa48"/>
        <function-ref name="set" scoped="" ref="0x4045ab28"/>
        <function-ref name="clr" scoped="" ref="0x4045ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40446750" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40446750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446928"/>
        <function-ref name="isInput" scoped="" ref="0x40446a08"/>
        <function-ref name="toggle" scoped="" ref="0x40446ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40446bc8"/>
        <function-ref name="get" scoped="" ref="0x40446ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446d88"/>
        <function-ref name="set" scoped="" ref="0x40446e68"/>
        <function-ref name="clr" scoped="" ref="0x40445010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4044cce8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4044cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044cec0"/>
        <function-ref name="isInput" scoped="" ref="0x4044a010"/>
        <function-ref name="toggle" scoped="" ref="0x4044a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a1d0"/>
        <function-ref name="get" scoped="" ref="0x4044a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a390"/>
        <function-ref name="set" scoped="" ref="0x4044a470"/>
        <function-ref name="clr" scoped="" ref="0x4044a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40452ea8" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40452ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404510c0"/>
        <function-ref name="isInput" scoped="" ref="0x404511a0"/>
        <function-ref name="toggle" scoped="" ref="0x40451280"/>
        <function-ref name="isOutput" scoped="" ref="0x40451360"/>
        <function-ref name="get" scoped="" ref="0x40451440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451520"/>
        <function-ref name="set" scoped="" ref="0x40451600"/>
        <function-ref name="clr" scoped="" ref="0x404516e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40457750" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40457750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457928"/>
        <function-ref name="isInput" scoped="" ref="0x40457a08"/>
        <function-ref name="toggle" scoped="" ref="0x40457ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40457bc8"/>
        <function-ref name="get" scoped="" ref="0x40457ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457d88"/>
        <function-ref name="set" scoped="" ref="0x40457e68"/>
        <function-ref name="clr" scoped="" ref="0x40456010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4043a2f0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4043a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a768"/>
        <function-ref name="get" scoped="" ref="0x4043a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a928"/>
        <function-ref name="set" scoped="" ref="0x4043aa08"/>
        <function-ref name="clr" scoped="" ref="0x4043aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40453a98" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40453a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453c70"/>
        <function-ref name="isInput" scoped="" ref="0x40453d50"/>
        <function-ref name="toggle" scoped="" ref="0x40453e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40453f10"/>
        <function-ref name="get" scoped="" ref="0x40452010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404520f0"/>
        <function-ref name="set" scoped="" ref="0x404521d0"/>
        <function-ref name="clr" scoped="" ref="0x404522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40439750" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40439750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439928"/>
        <function-ref name="isInput" scoped="" ref="0x40439a08"/>
        <function-ref name="toggle" scoped="" ref="0x40439ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40439bc8"/>
        <function-ref name="get" scoped="" ref="0x40439ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439d88"/>
        <function-ref name="set" scoped="" ref="0x40439e68"/>
        <function-ref name="clr" scoped="" ref="0x40438010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4043fea8" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4043fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4043e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4043e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e360"/>
        <function-ref name="get" scoped="" ref="0x4043e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e520"/>
        <function-ref name="set" scoped="" ref="0x4043e600"/>
        <function-ref name="clr" scoped="" ref="0x4043e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40444670" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40444670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444848"/>
        <function-ref name="isInput" scoped="" ref="0x40444928"/>
        <function-ref name="toggle" scoped="" ref="0x40444a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40444ae8"/>
        <function-ref name="get" scoped="" ref="0x40444bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444ca8"/>
        <function-ref name="set" scoped="" ref="0x40444d88"/>
        <function-ref name="clr" scoped="" ref="0x40444e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40449c08" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40449c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449de0"/>
        <function-ref name="isInput" scoped="" ref="0x40449ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40454010"/>
        <function-ref name="isOutput" scoped="" ref="0x404540f0"/>
        <function-ref name="get" scoped="" ref="0x404541d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404542b0"/>
        <function-ref name="set" scoped="" ref="0x40454390"/>
        <function-ref name="clr" scoped="" ref="0x40454470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40431010" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40431010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404311e8"/>
        <function-ref name="isInput" scoped="" ref="0x404312c8"/>
        <function-ref name="toggle" scoped="" ref="0x404313a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40431488"/>
        <function-ref name="get" scoped="" ref="0x40431568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431648"/>
        <function-ref name="set" scoped="" ref="0x40431728"/>
        <function-ref name="clr" scoped="" ref="0x40431808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40437670" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40437670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437848"/>
        <function-ref name="isInput" scoped="" ref="0x40437928"/>
        <function-ref name="toggle" scoped="" ref="0x40437a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40437ae8"/>
        <function-ref name="get" scoped="" ref="0x40437bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437ca8"/>
        <function-ref name="set" scoped="" ref="0x40437d88"/>
        <function-ref name="clr" scoped="" ref="0x40437e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4043dce8" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4043dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043dec0"/>
        <function-ref name="isInput" scoped="" ref="0x40448010"/>
        <function-ref name="toggle" scoped="" ref="0x404480f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404481d0"/>
        <function-ref name="get" scoped="" ref="0x404482b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448390"/>
        <function-ref name="set" scoped="" ref="0x40448470"/>
        <function-ref name="clr" scoped="" ref="0x40448550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4044e4b0" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4044e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044e688"/>
        <function-ref name="isInput" scoped="" ref="0x4044e768"/>
        <function-ref name="toggle" scoped="" ref="0x4044e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4044e928"/>
        <function-ref name="get" scoped="" ref="0x4044ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044eae8"/>
        <function-ref name="set" scoped="" ref="0x4044ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4044eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40450ce8" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40450ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4044f010"/>
        <function-ref name="toggle" scoped="" ref="0x4044f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f1d0"/>
        <function-ref name="get" scoped="" ref="0x4044f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f390"/>
        <function-ref name="set" scoped="" ref="0x4044f470"/>
        <function-ref name="clr" scoped="" ref="0x4044f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404582f0" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404584c8"/>
        <function-ref name="isInput" scoped="" ref="0x404585a8"/>
        <function-ref name="toggle" scoped="" ref="0x40458688"/>
        <function-ref name="isOutput" scoped="" ref="0x40458768"/>
        <function-ref name="get" scoped="" ref="0x40458848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458928"/>
        <function-ref name="set" scoped="" ref="0x40458a08"/>
        <function-ref name="clr" scoped="" ref="0x40458ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4044d8e0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4044d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4044db98"/>
        <function-ref name="toggle" scoped="" ref="0x4044dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4044dd58"/>
        <function-ref name="get" scoped="" ref="0x4044de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044df18"/>
        <function-ref name="set" scoped="" ref="0x4044c010"/>
        <function-ref name="clr" scoped="" ref="0x4044c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4043cea8" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4043cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4043b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4043b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b360"/>
        <function-ref name="get" scoped="" ref="0x4043b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b520"/>
        <function-ref name="set" scoped="" ref="0x4043b600"/>
        <function-ref name="clr" scoped="" ref="0x4043b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40441590" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40441590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40441768"/>
        <function-ref name="isInput" scoped="" ref="0x40441848"/>
        <function-ref name="toggle" scoped="" ref="0x40441928"/>
        <function-ref name="isOutput" scoped="" ref="0x40441a08"/>
        <function-ref name="get" scoped="" ref="0x40441ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40441bc8"/>
        <function-ref name="set" scoped="" ref="0x40441ca8"/>
        <function-ref name="clr" scoped="" ref="0x40441d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4045ae08" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4045ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459010"/>
        <function-ref name="isInput" scoped="" ref="0x404590f0"/>
        <function-ref name="toggle" scoped="" ref="0x404591d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404592b0"/>
        <function-ref name="get" scoped="" ref="0x40459390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459470"/>
        <function-ref name="set" scoped="" ref="0x40459550"/>
        <function-ref name="clr" scoped="" ref="0x40459630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40440a08" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40440a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440be0"/>
        <function-ref name="isInput" scoped="" ref="0x40440cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40440da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40440e80"/>
        <function-ref name="get" scoped="" ref="0x4043f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f0f0"/>
        <function-ref name="set" scoped="" ref="0x4043f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4043f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40445210" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40445210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404453e8"/>
        <function-ref name="isInput" scoped="" ref="0x404454c8"/>
        <function-ref name="toggle" scoped="" ref="0x404455a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40445688"/>
        <function-ref name="get" scoped="" ref="0x40445768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40445848"/>
        <function-ref name="set" scoped="" ref="0x40445928"/>
        <function-ref name="clr" scoped="" ref="0x40445a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4044a750" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4044a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a928"/>
        <function-ref name="isInput" scoped="" ref="0x4044aa08"/>
        <function-ref name="toggle" scoped="" ref="0x4044aae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044abc8"/>
        <function-ref name="get" scoped="" ref="0x4044aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ad88"/>
        <function-ref name="set" scoped="" ref="0x4044ae68"/>
        <function-ref name="clr" scoped="" ref="0x40449010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404518e0" loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404518e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40451b98"/>
        <function-ref name="toggle" scoped="" ref="0x40451c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40451d58"/>
        <function-ref name="get" scoped="" ref="0x40451e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451f18"/>
        <function-ref name="set" scoped="" ref="0x40450010"/>
        <function-ref name="clr" scoped="" ref="0x404500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4043ace8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4043ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40439010"/>
        <function-ref name="toggle" scoped="" ref="0x404390f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404391d0"/>
        <function-ref name="get" scoped="" ref="0x404392b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439390"/>
        <function-ref name="set" scoped="" ref="0x40439470"/>
        <function-ref name="clr" scoped="" ref="0x40439550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40438210" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40438210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404383e8"/>
        <function-ref name="isInput" scoped="" ref="0x404384c8"/>
        <function-ref name="toggle" scoped="" ref="0x404385a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40438688"/>
        <function-ref name="get" scoped="" ref="0x40438768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438848"/>
        <function-ref name="set" scoped="" ref="0x40438928"/>
        <function-ref name="clr" scoped="" ref="0x40438a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4043e8e0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4043e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043eab8"/>
        <function-ref name="isInput" scoped="" ref="0x4043eb98"/>
        <function-ref name="toggle" scoped="" ref="0x4043ec78"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ed58"/>
        <function-ref name="get" scoped="" ref="0x4043ee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ef18"/>
        <function-ref name="set" scoped="" ref="0x4043d010"/>
        <function-ref name="clr" scoped="" ref="0x4043d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404430a0" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443278"/>
        <function-ref name="isInput" scoped="" ref="0x40443358"/>
        <function-ref name="toggle" scoped="" ref="0x40443438"/>
        <function-ref name="isOutput" scoped="" ref="0x40443518"/>
        <function-ref name="get" scoped="" ref="0x404435f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404436d8"/>
        <function-ref name="set" scoped="" ref="0x404437b8"/>
        <function-ref name="clr" scoped="" ref="0x40443898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40454670" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40454670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454848"/>
        <function-ref name="isInput" scoped="" ref="0x40454928"/>
        <function-ref name="toggle" scoped="" ref="0x40454a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40454ae8"/>
        <function-ref name="get" scoped="" ref="0x40454bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454ca8"/>
        <function-ref name="set" scoped="" ref="0x40454d88"/>
        <function-ref name="clr" scoped="" ref="0x40454e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40431a08" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40431a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431be0"/>
        <function-ref name="isInput" scoped="" ref="0x40431cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40431da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40431e80"/>
        <function-ref name="get" scoped="" ref="0x4043c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043c0f0"/>
        <function-ref name="set" scoped="" ref="0x4043c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4043c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404420a0" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404420a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404422f8"/>
        <function-ref name="isInput" scoped="" ref="0x404423d8"/>
        <function-ref name="toggle" scoped="" ref="0x404424b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40442598"/>
        <function-ref name="get" scoped="" ref="0x40442678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442758"/>
        <function-ref name="set" scoped="" ref="0x40442838"/>
        <function-ref name="clr" scoped="" ref="0x40442918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40448750" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40448750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448928"/>
        <function-ref name="isInput" scoped="" ref="0x40448a08"/>
        <function-ref name="toggle" scoped="" ref="0x40448ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40448bc8"/>
        <function-ref name="get" scoped="" ref="0x40448ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448d88"/>
        <function-ref name="set" scoped="" ref="0x40448e68"/>
        <function-ref name="clr" scoped="" ref="0x40447010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4044f750" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4044f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f928"/>
        <function-ref name="isInput" scoped="" ref="0x4044fa08"/>
        <function-ref name="toggle" scoped="" ref="0x4044fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044fbc8"/>
        <function-ref name="get" scoped="" ref="0x4044fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044fd88"/>
        <function-ref name="set" scoped="" ref="0x4044fe68"/>
        <function-ref name="clr" scoped="" ref="0x4045a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40447c08" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40447c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447ee0"/>
        <function-ref name="isInput" scoped="" ref="0x40446010"/>
        <function-ref name="toggle" scoped="" ref="0x404460f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404461d0"/>
        <function-ref name="get" scoped="" ref="0x404462b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446390"/>
        <function-ref name="set" scoped="" ref="0x40446470"/>
        <function-ref name="clr" scoped="" ref="0x40446550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4044c2f0" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4044c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4044c5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4044c688"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c768"/>
        <function-ref name="get" scoped="" ref="0x4044c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c928"/>
        <function-ref name="set" scoped="" ref="0x4044ca08"/>
        <function-ref name="clr" scoped="" ref="0x4044cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404524b0" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404524b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452688"/>
        <function-ref name="isInput" scoped="" ref="0x40452768"/>
        <function-ref name="toggle" scoped="" ref="0x40452848"/>
        <function-ref name="isOutput" scoped="" ref="0x40452928"/>
        <function-ref name="get" scoped="" ref="0x40452a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452ae8"/>
        <function-ref name="set" scoped="" ref="0x40452bc8"/>
        <function-ref name="clr" scoped="" ref="0x40452ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40458ce8" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40458ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40457010"/>
        <function-ref name="toggle" scoped="" ref="0x404570f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404571d0"/>
        <function-ref name="get" scoped="" ref="0x404572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457390"/>
        <function-ref name="set" scoped="" ref="0x40457470"/>
        <function-ref name="clr" scoped="" ref="0x40457550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4043b8e0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4043b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4043bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4043bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4043bd58"/>
        <function-ref name="get" scoped="" ref="0x4043be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043bf18"/>
        <function-ref name="set" scoped="" ref="0x4043a010"/>
        <function-ref name="clr" scoped="" ref="0x4043a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40440010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40440010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404401e8"/>
        <function-ref name="isInput" scoped="" ref="0x404402c8"/>
        <function-ref name="toggle" scoped="" ref="0x404403a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40440488"/>
        <function-ref name="get" scoped="" ref="0x40440568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440648"/>
        <function-ref name="set" scoped="" ref="0x40440728"/>
        <function-ref name="clr" scoped="" ref="0x40440808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404530a0" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453278"/>
        <function-ref name="isInput" scoped="" ref="0x40453358"/>
        <function-ref name="toggle" scoped="" ref="0x40453438"/>
        <function-ref name="isOutput" scoped="" ref="0x40453518"/>
        <function-ref name="get" scoped="" ref="0x404535f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404536d8"/>
        <function-ref name="set" scoped="" ref="0x404537b8"/>
        <function-ref name="clr" scoped="" ref="0x40453898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4043f4b0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4043f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f688"/>
        <function-ref name="isInput" scoped="" ref="0x4043f768"/>
        <function-ref name="toggle" scoped="" ref="0x4043f848"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f928"/>
        <function-ref name="get" scoped="" ref="0x4043fa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043fae8"/>
        <function-ref name="set" scoped="" ref="0x4043fbc8"/>
        <function-ref name="clr" scoped="" ref="0x4043fca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40445c08" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40445c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40445de0"/>
        <function-ref name="isInput" scoped="" ref="0x40445ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40444010"/>
        <function-ref name="isOutput" scoped="" ref="0x404440f0"/>
        <function-ref name="get" scoped="" ref="0x404441d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404442b0"/>
        <function-ref name="set" scoped="" ref="0x40444390"/>
        <function-ref name="clr" scoped="" ref="0x40444470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x40449210" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x40449210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404493e8"/>
        <function-ref name="isInput" scoped="" ref="0x404494c8"/>
        <function-ref name="toggle" scoped="" ref="0x404495a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40449688"/>
        <function-ref name="get" scoped="" ref="0x40449768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449848"/>
        <function-ref name="set" scoped="" ref="0x40449928"/>
        <function-ref name="clr" scoped="" ref="0x40449a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404502f0" loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404504c8"/>
        <function-ref name="isInput" scoped="" ref="0x404505a8"/>
        <function-ref name="toggle" scoped="" ref="0x40450688"/>
        <function-ref name="isOutput" scoped="" ref="0x40450768"/>
        <function-ref name="get" scoped="" ref="0x40450848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450928"/>
        <function-ref name="set" scoped="" ref="0x40450a08"/>
        <function-ref name="clr" scoped="" ref="0x40450ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40430538" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40430538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430710"/>
        <function-ref name="isInput" scoped="" ref="0x404307f0"/>
        <function-ref name="toggle" scoped="" ref="0x404308d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404309b0"/>
        <function-ref name="get" scoped="" ref="0x40430a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430b70"/>
        <function-ref name="set" scoped="" ref="0x40430c50"/>
        <function-ref name="clr" scoped="" ref="0x40430d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40438c08" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40438c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438de0"/>
        <function-ref name="isInput" scoped="" ref="0x40438ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40437010"/>
        <function-ref name="isOutput" scoped="" ref="0x404370f0"/>
        <function-ref name="get" scoped="" ref="0x404371d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404372b0"/>
        <function-ref name="set" scoped="" ref="0x40437390"/>
        <function-ref name="clr" scoped="" ref="0x40437470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4043d2f0" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4043d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d768"/>
        <function-ref name="get" scoped="" ref="0x4043d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d928"/>
        <function-ref name="set" scoped="" ref="0x4043da08"/>
        <function-ref name="clr" scoped="" ref="0x4043dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40443a98" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40443a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443c70"/>
        <function-ref name="isInput" scoped="" ref="0x40443d50"/>
        <function-ref name="toggle" scoped="" ref="0x40443e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40443f10"/>
        <function-ref name="get" scoped="" ref="0x4044e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044e0f0"/>
        <function-ref name="set" scoped="" ref="0x4044e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4044e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40459830" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40459830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459a08"/>
        <function-ref name="isInput" scoped="" ref="0x40459ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40459bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40459ca8"/>
        <function-ref name="get" scoped="" ref="0x40459d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459e68"/>
        <function-ref name="set" scoped="" ref="0x40458010"/>
        <function-ref name="clr" scoped="" ref="0x404580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4044eea8" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4044eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4044d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4044d280"/>
        <function-ref name="isOutput" scoped="" ref="0x4044d360"/>
        <function-ref name="get" scoped="" ref="0x4044d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d520"/>
        <function-ref name="set" scoped="" ref="0x4044d600"/>
        <function-ref name="clr" scoped="" ref="0x4044d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x40447210" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x40447210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404473e8"/>
        <function-ref name="isInput" scoped="" ref="0x404474c8"/>
        <function-ref name="toggle" scoped="" ref="0x404475a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40447688"/>
        <function-ref name="get" scoped="" ref="0x40447768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447848"/>
        <function-ref name="set" scoped="" ref="0x40447928"/>
        <function-ref name="clr" scoped="" ref="0x40447a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4043c4b0" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4043c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c688"/>
        <function-ref name="isInput" scoped="" ref="0x4043c768"/>
        <function-ref name="toggle" scoped="" ref="0x4043c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4043c928"/>
        <function-ref name="get" scoped="" ref="0x4043ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043cae8"/>
        <function-ref name="set" scoped="" ref="0x4043cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4043cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40442b18" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40442b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40442dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40442eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40441010"/>
        <function-ref name="get" scoped="" ref="0x404410f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404411d0"/>
        <function-ref name="set" scoped="" ref="0x404412b0"/>
        <function-ref name="clr" scoped="" ref="0x40441390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40482d68" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40482d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481010"/>
        <function-ref name="isInput" scoped="" ref="0x404810f0"/>
        <function-ref name="toggle" scoped="" ref="0x404811d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404812b0"/>
        <function-ref name="get" scoped="" ref="0x40481390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481470"/>
        <function-ref name="set" scoped="" ref="0x40481550"/>
        <function-ref name="clr" scoped="" ref="0x40481630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40480ac8" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40480ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40480d80"/>
        <function-ref name="toggle" scoped="" ref="0x40480e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f010"/>
        <function-ref name="get" scoped="" ref="0x4047f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f1d0"/>
        <function-ref name="set" scoped="" ref="0x4047f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4047f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40483a28" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40483a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483c00"/>
        <function-ref name="isInput" scoped="" ref="0x40483ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40483dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40483ea0"/>
        <function-ref name="get" scoped="" ref="0x40482010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404820f0"/>
        <function-ref name="set" scoped="" ref="0x404821d0"/>
        <function-ref name="clr" scoped="" ref="0x404822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40481790" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40481790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481968"/>
        <function-ref name="isInput" scoped="" ref="0x40481a48"/>
        <function-ref name="toggle" scoped="" ref="0x40481b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40481c08"/>
        <function-ref name="get" scoped="" ref="0x40481ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481dc8"/>
        <function-ref name="set" scoped="" ref="0x40481ea8"/>
        <function-ref name="clr" scoped="" ref="0x40480010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4047f4f0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4047f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4047f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4047f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f968"/>
        <function-ref name="get" scoped="" ref="0x4047fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047fb28"/>
        <function-ref name="set" scoped="" ref="0x4047fc08"/>
        <function-ref name="clr" scoped="" ref="0x4047fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40482410" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40482410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404825e8"/>
        <function-ref name="isInput" scoped="" ref="0x404826c8"/>
        <function-ref name="toggle" scoped="" ref="0x404827a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40482888"/>
        <function-ref name="get" scoped="" ref="0x40482968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482a48"/>
        <function-ref name="set" scoped="" ref="0x40482b28"/>
        <function-ref name="clr" scoped="" ref="0x40482c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40480170" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40480170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480348"/>
        <function-ref name="isInput" scoped="" ref="0x40480428"/>
        <function-ref name="toggle" scoped="" ref="0x40480508"/>
        <function-ref name="isOutput" scoped="" ref="0x404805e8"/>
        <function-ref name="get" scoped="" ref="0x404806c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404807a8"/>
        <function-ref name="set" scoped="" ref="0x40480888"/>
        <function-ref name="clr" scoped="" ref="0x40480968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4047fe48" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4047fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a050"/>
        <function-ref name="isInput" scoped="" ref="0x4048a130"/>
        <function-ref name="toggle" scoped="" ref="0x4048a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a2f0"/>
        <function-ref name="get" scoped="" ref="0x4048a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a4b0"/>
        <function-ref name="set" scoped="" ref="0x4048a590"/>
        <function-ref name="clr" scoped="" ref="0x4048a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d88e18" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d88e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d84010"/>
        <function-ref name="isInput" scoped="" ref="0x40d840f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d841d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d842b0"/>
        <function-ref name="get" scoped="" ref="0x40d84390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d84470"/>
        <function-ref name="set" scoped="" ref="0x40d84550"/>
        <function-ref name="clr" scoped="" ref="0x40d84630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d837f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d837f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d839d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d83ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d83b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d83c70"/>
        <function-ref name="get" scoped="" ref="0x40d83d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d83e30"/>
        <function-ref name="set" scoped="" ref="0x40d83f10"/>
        <function-ref name="clr" scoped="" ref="0x40d82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d81228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d81228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d81400"/>
        <function-ref name="isInput" scoped="" ref="0x40d814e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d815c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d816a0"/>
        <function-ref name="get" scoped="" ref="0x40d81780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d81860"/>
        <function-ref name="set" scoped="" ref="0x40d81940"/>
        <function-ref name="clr" scoped="" ref="0x40d81a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d80c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d80c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d80de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d80ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d7f010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7f0f0"/>
        <function-ref name="get" scoped="" ref="0x40d7f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7f2b0"/>
        <function-ref name="set" scoped="" ref="0x40d7f390"/>
        <function-ref name="clr" scoped="" ref="0x40d7f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d7e6c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d7e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7e898"/>
        <function-ref name="isInput" scoped="" ref="0x40d7e978"/>
        <function-ref name="toggle" scoped="" ref="0x40d7ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7eb38"/>
        <function-ref name="get" scoped="" ref="0x40d7ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7ecf8"/>
        <function-ref name="set" scoped="" ref="0x40d7edd8"/>
        <function-ref name="clr" scoped="" ref="0x40d7eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db10b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db1288"/>
        <function-ref name="isInput" scoped="" ref="0x40db1368"/>
        <function-ref name="toggle" scoped="" ref="0x40db1448"/>
        <function-ref name="isOutput" scoped="" ref="0x40db1528"/>
        <function-ref name="get" scoped="" ref="0x40db1608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db16e8"/>
        <function-ref name="set" scoped="" ref="0x40db17c8"/>
        <function-ref name="clr" scoped="" ref="0x40db18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db0a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db0c60"/>
        <function-ref name="isInput" scoped="" ref="0x40db0d40"/>
        <function-ref name="toggle" scoped="" ref="0x40db0e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40db0f00"/>
        <function-ref name="get" scoped="" ref="0x40dae010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dae0f0"/>
        <function-ref name="set" scoped="" ref="0x40dae1d0"/>
        <function-ref name="clr" scoped="" ref="0x40dae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dad538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dad538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dad710"/>
        <function-ref name="isInput" scoped="" ref="0x40dad7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40dad8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40dad9b0"/>
        <function-ref name="get" scoped="" ref="0x40dada90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dadb70"/>
        <function-ref name="set" scoped="" ref="0x40dadc50"/>
        <function-ref name="clr" scoped="" ref="0x40dadd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404856b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404856b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485888"/>
        <function-ref name="isInput" scoped="" ref="0x40485968"/>
        <function-ref name="toggle" scoped="" ref="0x40485a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40485b28"/>
        <function-ref name="get" scoped="" ref="0x40485c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485ce8"/>
        <function-ref name="set" scoped="" ref="0x40485dc8"/>
        <function-ref name="clr" scoped="" ref="0x40485ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4048f330" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4048f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f508"/>
        <function-ref name="isInput" scoped="" ref="0x4048f5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4048f6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f7a8"/>
        <function-ref name="get" scoped="" ref="0x4048f888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f968"/>
        <function-ref name="set" scoped="" ref="0x4048fa48"/>
        <function-ref name="clr" scoped="" ref="0x4048fb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404863d8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404863d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404865b0"/>
        <function-ref name="isInput" scoped="" ref="0x40486690"/>
        <function-ref name="toggle" scoped="" ref="0x40486770"/>
        <function-ref name="isOutput" scoped="" ref="0x40486850"/>
        <function-ref name="get" scoped="" ref="0x40486930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486a10"/>
        <function-ref name="set" scoped="" ref="0x40486af0"/>
        <function-ref name="clr" scoped="" ref="0x40486bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40490030" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40490030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490208"/>
        <function-ref name="isInput" scoped="" ref="0x404902e8"/>
        <function-ref name="toggle" scoped="" ref="0x404903c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404904a8"/>
        <function-ref name="get" scoped="" ref="0x40490588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490668"/>
        <function-ref name="set" scoped="" ref="0x40490748"/>
        <function-ref name="clr" scoped="" ref="0x40490828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4048fc88" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4048fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048fe60"/>
        <function-ref name="isInput" scoped="" ref="0x4048e010"/>
        <function-ref name="toggle" scoped="" ref="0x4048e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e1d0"/>
        <function-ref name="get" scoped="" ref="0x4048e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048e390"/>
        <function-ref name="set" scoped="" ref="0x4048e470"/>
        <function-ref name="clr" scoped="" ref="0x4048e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40486d30" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40486d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486f08"/>
        <function-ref name="isInput" scoped="" ref="0x40485010"/>
        <function-ref name="toggle" scoped="" ref="0x404850f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404851d0"/>
        <function-ref name="get" scoped="" ref="0x404852b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485390"/>
        <function-ref name="set" scoped="" ref="0x40485470"/>
        <function-ref name="clr" scoped="" ref="0x40485550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40490988" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40490988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490b60"/>
        <function-ref name="isInput" scoped="" ref="0x40490c40"/>
        <function-ref name="toggle" scoped="" ref="0x40490d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40490e00"/>
        <function-ref name="get" scoped="" ref="0x40490ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f010"/>
        <function-ref name="set" scoped="" ref="0x4048f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4048f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4048e6b0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4048e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e888"/>
        <function-ref name="isInput" scoped="" ref="0x4048e968"/>
        <function-ref name="toggle" scoped="" ref="0x4048ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4048eb28"/>
        <function-ref name="get" scoped="" ref="0x4048ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ece8"/>
        <function-ref name="set" scoped="" ref="0x4048edc8"/>
        <function-ref name="clr" scoped="" ref="0x4048eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de4938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de4938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de4b10"/>
        <function-ref name="isInput" scoped="" ref="0x40de4bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40de4cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40de4db0"/>
        <function-ref name="get" scoped="" ref="0x40de4e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de3010"/>
        <function-ref name="set" scoped="" ref="0x40de30f0"/>
        <function-ref name="clr" scoped="" ref="0x40de31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de23b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de2588"/>
        <function-ref name="isInput" scoped="" ref="0x40de2668"/>
        <function-ref name="toggle" scoped="" ref="0x40de2748"/>
        <function-ref name="isOutput" scoped="" ref="0x40de2828"/>
        <function-ref name="get" scoped="" ref="0x40de2908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de29e8"/>
        <function-ref name="set" scoped="" ref="0x40de2ac8"/>
        <function-ref name="clr" scoped="" ref="0x40de2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de1d70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de0010"/>
        <function-ref name="isInput" scoped="" ref="0x40de00f0"/>
        <function-ref name="toggle" scoped="" ref="0x40de01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40de02b0"/>
        <function-ref name="get" scoped="" ref="0x40de0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de0470"/>
        <function-ref name="set" scoped="" ref="0x40de0550"/>
        <function-ref name="clr" scoped="" ref="0x40de0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddf7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddf7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddf9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ddfab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ddfb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddfc70"/>
        <function-ref name="get" scoped="" ref="0x40ddfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddfe30"/>
        <function-ref name="set" scoped="" ref="0x40ddff10"/>
        <function-ref name="clr" scoped="" ref="0x40dde010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddd228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddd400"/>
        <function-ref name="isInput" scoped="" ref="0x40ddd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ddd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddd6a0"/>
        <function-ref name="get" scoped="" ref="0x40ddd780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddd860"/>
        <function-ref name="set" scoped="" ref="0x40ddd940"/>
        <function-ref name="clr" scoped="" ref="0x40ddda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddcc08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddcc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddcde0"/>
        <function-ref name="isInput" scoped="" ref="0x40ddcec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ddb010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddb0f0"/>
        <function-ref name="get" scoped="" ref="0x40ddb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddb2b0"/>
        <function-ref name="set" scoped="" ref="0x40ddb390"/>
        <function-ref name="clr" scoped="" ref="0x40ddb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dda6c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dda6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dda898"/>
        <function-ref name="isInput" scoped="" ref="0x40dda978"/>
        <function-ref name="toggle" scoped="" ref="0x40ddaa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddab38"/>
        <function-ref name="get" scoped="" ref="0x40ddac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddacf8"/>
        <function-ref name="set" scoped="" ref="0x40ddadd8"/>
        <function-ref name="clr" scoped="" ref="0x40ddaeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dd80b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dd80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dd8288"/>
        <function-ref name="isInput" scoped="" ref="0x40dd8368"/>
        <function-ref name="toggle" scoped="" ref="0x40dd8448"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd8528"/>
        <function-ref name="get" scoped="" ref="0x40dd8608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd86e8"/>
        <function-ref name="set" scoped="" ref="0x40dd87c8"/>
        <function-ref name="clr" scoped="" ref="0x40dd88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40494170" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40494170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494348"/>
        <function-ref name="isInput" scoped="" ref="0x40494428"/>
        <function-ref name="toggle" scoped="" ref="0x40494508"/>
        <function-ref name="isOutput" scoped="" ref="0x404945e8"/>
        <function-ref name="get" scoped="" ref="0x404946c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404947a8"/>
        <function-ref name="set" scoped="" ref="0x40494888"/>
        <function-ref name="clr" scoped="" ref="0x40494968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40493e48" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40493e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492050"/>
        <function-ref name="isInput" scoped="" ref="0x40492130"/>
        <function-ref name="toggle" scoped="" ref="0x40492210"/>
        <function-ref name="isOutput" scoped="" ref="0x404922f0"/>
        <function-ref name="get" scoped="" ref="0x404923d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404924b0"/>
        <function-ref name="set" scoped="" ref="0x40492590"/>
        <function-ref name="clr" scoped="" ref="0x40492670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4048bdc8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4048bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496010"/>
        <function-ref name="isInput" scoped="" ref="0x404960f0"/>
        <function-ref name="toggle" scoped="" ref="0x404961d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404962b0"/>
        <function-ref name="get" scoped="" ref="0x40496390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496470"/>
        <function-ref name="set" scoped="" ref="0x40496550"/>
        <function-ref name="clr" scoped="" ref="0x40496630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40494ac8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40494ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40494d80"/>
        <function-ref name="toggle" scoped="" ref="0x40494e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40493010"/>
        <function-ref name="get" scoped="" ref="0x404930f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404931d0"/>
        <function-ref name="set" scoped="" ref="0x404932b0"/>
        <function-ref name="clr" scoped="" ref="0x40493390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404927d0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404927d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404929a8"/>
        <function-ref name="isInput" scoped="" ref="0x40492a88"/>
        <function-ref name="toggle" scoped="" ref="0x40492b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40492c48"/>
        <function-ref name="get" scoped="" ref="0x40492d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40492e08"/>
        <function-ref name="set" scoped="" ref="0x40492ee8"/>
        <function-ref name="clr" scoped="" ref="0x40491010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40496790" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40496790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496968"/>
        <function-ref name="isInput" scoped="" ref="0x40496a48"/>
        <function-ref name="toggle" scoped="" ref="0x40496b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40496c08"/>
        <function-ref name="get" scoped="" ref="0x40496ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496dc8"/>
        <function-ref name="set" scoped="" ref="0x40496ea8"/>
        <function-ref name="clr" scoped="" ref="0x40494010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404934f0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404934f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404936c8"/>
        <function-ref name="isInput" scoped="" ref="0x404937a8"/>
        <function-ref name="toggle" scoped="" ref="0x40493888"/>
        <function-ref name="isOutput" scoped="" ref="0x40493968"/>
        <function-ref name="get" scoped="" ref="0x40493a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40493b28"/>
        <function-ref name="set" scoped="" ref="0x40493c08"/>
        <function-ref name="clr" scoped="" ref="0x40493ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40491170" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40491170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491348"/>
        <function-ref name="isInput" scoped="" ref="0x40491428"/>
        <function-ref name="toggle" scoped="" ref="0x40491508"/>
        <function-ref name="isOutput" scoped="" ref="0x404915e8"/>
        <function-ref name="get" scoped="" ref="0x404916c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404917a8"/>
        <function-ref name="set" scoped="" ref="0x40491888"/>
        <function-ref name="clr" scoped="" ref="0x40491968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e10538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e10538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e10710"/>
        <function-ref name="isInput" scoped="" ref="0x40e107f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e108d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e109b0"/>
        <function-ref name="get" scoped="" ref="0x40e10a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e10b70"/>
        <function-ref name="set" scoped="" ref="0x40e10c50"/>
        <function-ref name="clr" scoped="" ref="0x40e10d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e0e010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e0e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e0e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e0e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e0e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e0e488"/>
        <function-ref name="get" scoped="" ref="0x40e0e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e0e648"/>
        <function-ref name="set" scoped="" ref="0x40e0e728"/>
        <function-ref name="clr" scoped="" ref="0x40e0e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e0d9e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e0d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e0dbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e0dca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e0dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e0de60"/>
        <function-ref name="get" scoped="" ref="0x40e0c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e0c0f0"/>
        <function-ref name="set" scoped="" ref="0x40e0c1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e0c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e0b538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e0b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e0b710"/>
        <function-ref name="isInput" scoped="" ref="0x40e0b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e0b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e0b9b0"/>
        <function-ref name="get" scoped="" ref="0x40e0ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e0bb70"/>
        <function-ref name="set" scoped="" ref="0x40e0bc50"/>
        <function-ref name="clr" scoped="" ref="0x40e0bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e09010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e09010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e091e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e092c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e093a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e09488"/>
        <function-ref name="get" scoped="" ref="0x40e09568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e09648"/>
        <function-ref name="set" scoped="" ref="0x40e09728"/>
        <function-ref name="clr" scoped="" ref="0x40e09808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e079e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e079e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e07bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e07ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e07d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e07e60"/>
        <function-ref name="get" scoped="" ref="0x40e06010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e060f0"/>
        <function-ref name="set" scoped="" ref="0x40e061d0"/>
        <function-ref name="clr" scoped="" ref="0x40e062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e05538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e05538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e05710"/>
        <function-ref name="isInput" scoped="" ref="0x40e057f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e058d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e059b0"/>
        <function-ref name="get" scoped="" ref="0x40e05a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e05b70"/>
        <function-ref name="set" scoped="" ref="0x40e05c50"/>
        <function-ref name="clr" scoped="" ref="0x40e05d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e03010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e031e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e032c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e033a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e03488"/>
        <function-ref name="get" scoped="" ref="0x40e03568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e03648"/>
        <function-ref name="set" scoped="" ref="0x40e03728"/>
        <function-ref name="clr" scoped="" ref="0x40e03808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404999e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404999e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40499bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40499ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40499d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40499e60"/>
        <function-ref name="get" scoped="" ref="0x40498010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404980f0"/>
        <function-ref name="set" scoped="" ref="0x404981d0"/>
        <function-ref name="clr" scoped="" ref="0x404982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40497790" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40497790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497968"/>
        <function-ref name="isInput" scoped="" ref="0x40497a48"/>
        <function-ref name="toggle" scoped="" ref="0x40497b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40497c08"/>
        <function-ref name="get" scoped="" ref="0x40497ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497dc8"/>
        <function-ref name="set" scoped="" ref="0x40497ea8"/>
        <function-ref name="clr" scoped="" ref="0x404a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4049a6f8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4049a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049a8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4049a9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4049aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x4049ab70"/>
        <function-ref name="get" scoped="" ref="0x4049ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ad30"/>
        <function-ref name="set" scoped="" ref="0x4049ae10"/>
        <function-ref name="clr" scoped="" ref="0x4049aef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40498410" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40498410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404985e8"/>
        <function-ref name="isInput" scoped="" ref="0x404986c8"/>
        <function-ref name="toggle" scoped="" ref="0x404987a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40498888"/>
        <function-ref name="get" scoped="" ref="0x40498968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498a48"/>
        <function-ref name="set" scoped="" ref="0x40498b28"/>
        <function-ref name="clr" scoped="" ref="0x40498c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a2170" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2348"/>
        <function-ref name="isInput" scoped="" ref="0x404a2428"/>
        <function-ref name="toggle" scoped="" ref="0x404a2508"/>
        <function-ref name="isOutput" scoped="" ref="0x404a25e8"/>
        <function-ref name="get" scoped="" ref="0x404a26c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a27a8"/>
        <function-ref name="set" scoped="" ref="0x404a2888"/>
        <function-ref name="clr" scoped="" ref="0x404a2968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40499090" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40499090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40499268"/>
        <function-ref name="isInput" scoped="" ref="0x40499348"/>
        <function-ref name="toggle" scoped="" ref="0x40499428"/>
        <function-ref name="isOutput" scoped="" ref="0x40499508"/>
        <function-ref name="get" scoped="" ref="0x404995e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404996c8"/>
        <function-ref name="set" scoped="" ref="0x404997a8"/>
        <function-ref name="clr" scoped="" ref="0x40499888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40498d68" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40498d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497010"/>
        <function-ref name="isInput" scoped="" ref="0x404970f0"/>
        <function-ref name="toggle" scoped="" ref="0x404971d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404972b0"/>
        <function-ref name="get" scoped="" ref="0x40497390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497470"/>
        <function-ref name="set" scoped="" ref="0x40497550"/>
        <function-ref name="clr" scoped="" ref="0x40497630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a2ac8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404a2d80"/>
        <function-ref name="toggle" scoped="" ref="0x404a2e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a0010"/>
        <function-ref name="get" scoped="" ref="0x404a00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a01d0"/>
        <function-ref name="set" scoped="" ref="0x404a02b0"/>
        <function-ref name="clr" scoped="" ref="0x404a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e3c418" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e3c418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e3c5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40e3c6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40e3c7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e3c890"/>
        <function-ref name="get" scoped="" ref="0x40e3c970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e3ca50"/>
        <function-ref name="set" scoped="" ref="0x40e3cb30"/>
        <function-ref name="clr" scoped="" ref="0x40e3cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e3bde0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e3bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e3a010"/>
        <function-ref name="isInput" scoped="" ref="0x40e3a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e3a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e3a2b0"/>
        <function-ref name="get" scoped="" ref="0x40e3a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e3a470"/>
        <function-ref name="set" scoped="" ref="0x40e3a550"/>
        <function-ref name="clr" scoped="" ref="0x40e3a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e397f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e397f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e399d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e39ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e39b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e39c70"/>
        <function-ref name="get" scoped="" ref="0x40e39d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e39e30"/>
        <function-ref name="set" scoped="" ref="0x40e39f10"/>
        <function-ref name="clr" scoped="" ref="0x40e38010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e37228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e37228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e37400"/>
        <function-ref name="isInput" scoped="" ref="0x40e374e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e375c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e376a0"/>
        <function-ref name="get" scoped="" ref="0x40e37780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e37860"/>
        <function-ref name="set" scoped="" ref="0x40e37940"/>
        <function-ref name="clr" scoped="" ref="0x40e37a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e36c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e36c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e36de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e36ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e35010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e350f0"/>
        <function-ref name="get" scoped="" ref="0x40e351d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e352b0"/>
        <function-ref name="set" scoped="" ref="0x40e35390"/>
        <function-ref name="clr" scoped="" ref="0x40e35470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e346c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e346c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e34898"/>
        <function-ref name="isInput" scoped="" ref="0x40e34978"/>
        <function-ref name="toggle" scoped="" ref="0x40e34a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e34b38"/>
        <function-ref name="get" scoped="" ref="0x40e34c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e34cf8"/>
        <function-ref name="set" scoped="" ref="0x40e34dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e34eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e320b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e320b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e32288"/>
        <function-ref name="isInput" scoped="" ref="0x40e32368"/>
        <function-ref name="toggle" scoped="" ref="0x40e32448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e32528"/>
        <function-ref name="get" scoped="" ref="0x40e32608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e326e8"/>
        <function-ref name="set" scoped="" ref="0x40e327c8"/>
        <function-ref name="clr" scoped="" ref="0x40e328a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e31a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e31a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e31c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e31d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e31e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e31f00"/>
        <function-ref name="get" scoped="" ref="0x40e30010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e300f0"/>
        <function-ref name="set" scoped="" ref="0x40e301d0"/>
        <function-ref name="clr" scoped="" ref="0x40e302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404a8410" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404a8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a85e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a86c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a87a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a8888"/>
        <function-ref name="get" scoped="" ref="0x404a8968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a8a48"/>
        <function-ref name="set" scoped="" ref="0x404a8b28"/>
        <function-ref name="clr" scoped="" ref="0x404a8c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404a6170" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404a6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6348"/>
        <function-ref name="isInput" scoped="" ref="0x404a6428"/>
        <function-ref name="toggle" scoped="" ref="0x404a6508"/>
        <function-ref name="isOutput" scoped="" ref="0x404a65e8"/>
        <function-ref name="get" scoped="" ref="0x404a66c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a67a8"/>
        <function-ref name="set" scoped="" ref="0x404a6888"/>
        <function-ref name="clr" scoped="" ref="0x404a6968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4049d128" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4049d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d300"/>
        <function-ref name="isInput" scoped="" ref="0x4049d3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4049d4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d5a0"/>
        <function-ref name="get" scoped="" ref="0x4049d680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d760"/>
        <function-ref name="set" scoped="" ref="0x4049d840"/>
        <function-ref name="clr" scoped="" ref="0x4049d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404a8d68" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404a8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7010"/>
        <function-ref name="isInput" scoped="" ref="0x404a70f0"/>
        <function-ref name="toggle" scoped="" ref="0x404a71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a72b0"/>
        <function-ref name="get" scoped="" ref="0x404a7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7470"/>
        <function-ref name="set" scoped="" ref="0x404a7550"/>
        <function-ref name="clr" scoped="" ref="0x404a7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a6ac8" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404a6d80"/>
        <function-ref name="toggle" scoped="" ref="0x404a6e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5010"/>
        <function-ref name="get" scoped="" ref="0x404a50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a51d0"/>
        <function-ref name="set" scoped="" ref="0x404a52b0"/>
        <function-ref name="clr" scoped="" ref="0x404a5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4049da80" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4049da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049dc58"/>
        <function-ref name="isInput" scoped="" ref="0x4049dd38"/>
        <function-ref name="toggle" scoped="" ref="0x4049de18"/>
        <function-ref name="isOutput" scoped="" ref="0x4049def8"/>
        <function-ref name="get" scoped="" ref="0x404a8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a80f0"/>
        <function-ref name="set" scoped="" ref="0x404a81d0"/>
        <function-ref name="clr" scoped="" ref="0x404a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404a7790" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404a7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7968"/>
        <function-ref name="isInput" scoped="" ref="0x404a7a48"/>
        <function-ref name="toggle" scoped="" ref="0x404a7b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7c08"/>
        <function-ref name="get" scoped="" ref="0x404a7ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7dc8"/>
        <function-ref name="set" scoped="" ref="0x404a7ea8"/>
        <function-ref name="clr" scoped="" ref="0x404a6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a54f0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a56c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a57a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a5888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5968"/>
        <function-ref name="get" scoped="" ref="0x404a5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5b28"/>
        <function-ref name="set" scoped="" ref="0x404a5c08"/>
        <function-ref name="clr" scoped="" ref="0x404a5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e70de8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e70de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6c010"/>
        <function-ref name="isInput" scoped="" ref="0x40e6c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e6c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6c2b0"/>
        <function-ref name="get" scoped="" ref="0x40e6c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6c470"/>
        <function-ref name="set" scoped="" ref="0x40e6c550"/>
        <function-ref name="clr" scoped="" ref="0x40e6c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e6b7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e6b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e6bab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e6bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6bc70"/>
        <function-ref name="get" scoped="" ref="0x40e6bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6be30"/>
        <function-ref name="set" scoped="" ref="0x40e6bf10"/>
        <function-ref name="clr" scoped="" ref="0x40e6a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e69228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e69228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e69400"/>
        <function-ref name="isInput" scoped="" ref="0x40e694e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e695c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e696a0"/>
        <function-ref name="get" scoped="" ref="0x40e69780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e69860"/>
        <function-ref name="set" scoped="" ref="0x40e69940"/>
        <function-ref name="clr" scoped="" ref="0x40e69a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e68c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e68c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e68de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e68ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e66010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e660f0"/>
        <function-ref name="get" scoped="" ref="0x40e661d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e662b0"/>
        <function-ref name="set" scoped="" ref="0x40e66390"/>
        <function-ref name="clr" scoped="" ref="0x40e66470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e656c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e656c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e65898"/>
        <function-ref name="isInput" scoped="" ref="0x40e65978"/>
        <function-ref name="toggle" scoped="" ref="0x40e65a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e65b38"/>
        <function-ref name="get" scoped="" ref="0x40e65c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e65cf8"/>
        <function-ref name="set" scoped="" ref="0x40e65dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e65eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e970b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e970b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e97288"/>
        <function-ref name="isInput" scoped="" ref="0x40e97368"/>
        <function-ref name="toggle" scoped="" ref="0x40e97448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e97528"/>
        <function-ref name="get" scoped="" ref="0x40e97608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e976e8"/>
        <function-ref name="set" scoped="" ref="0x40e977c8"/>
        <function-ref name="clr" scoped="" ref="0x40e978a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e96a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e96a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e96c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e96d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e96e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e96f00"/>
        <function-ref name="get" scoped="" ref="0x40e95010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e950f0"/>
        <function-ref name="set" scoped="" ref="0x40e951d0"/>
        <function-ref name="clr" scoped="" ref="0x40e952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e94538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e94538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e94710"/>
        <function-ref name="isInput" scoped="" ref="0x40e947f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e948d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e949b0"/>
        <function-ref name="get" scoped="" ref="0x40e94a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e94b70"/>
        <function-ref name="set" scoped="" ref="0x40e94c50"/>
        <function-ref name="clr" scoped="" ref="0x40e94d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ace48" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ace48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab050"/>
        <function-ref name="isInput" scoped="" ref="0x404ab130"/>
        <function-ref name="toggle" scoped="" ref="0x404ab210"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab2f0"/>
        <function-ref name="get" scoped="" ref="0x404ab3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab4b0"/>
        <function-ref name="set" scoped="" ref="0x404ab590"/>
        <function-ref name="clr" scoped="" ref="0x404ab670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404aaac8" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404aaac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aaca0"/>
        <function-ref name="isInput" scoped="" ref="0x404aad80"/>
        <function-ref name="toggle" scoped="" ref="0x404aae60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a9010"/>
        <function-ref name="get" scoped="" ref="0x404a90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a91d0"/>
        <function-ref name="set" scoped="" ref="0x404a92b0"/>
        <function-ref name="clr" scoped="" ref="0x404a9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404adb00" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404adb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404adcd8"/>
        <function-ref name="isInput" scoped="" ref="0x404addb8"/>
        <function-ref name="toggle" scoped="" ref="0x404ade98"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac010"/>
        <function-ref name="get" scoped="" ref="0x404ac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac1d0"/>
        <function-ref name="set" scoped="" ref="0x404ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ab7d0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ab7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404aba88"/>
        <function-ref name="toggle" scoped="" ref="0x404abb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404abc48"/>
        <function-ref name="get" scoped="" ref="0x404abd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404abe08"/>
        <function-ref name="set" scoped="" ref="0x404abee8"/>
        <function-ref name="clr" scoped="" ref="0x404aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a94f0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a96c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a97a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a9888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a9968"/>
        <function-ref name="get" scoped="" ref="0x404a9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9b28"/>
        <function-ref name="set" scoped="" ref="0x404a9c08"/>
        <function-ref name="clr" scoped="" ref="0x404a9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ac4f0" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ac4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac968"/>
        <function-ref name="get" scoped="" ref="0x404aca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404acb28"/>
        <function-ref name="set" scoped="" ref="0x404acc08"/>
        <function-ref name="clr" scoped="" ref="0x404acce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404aa170" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404aa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa348"/>
        <function-ref name="isInput" scoped="" ref="0x404aa428"/>
        <function-ref name="toggle" scoped="" ref="0x404aa508"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa5e8"/>
        <function-ref name="get" scoped="" ref="0x404aa6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa7a8"/>
        <function-ref name="set" scoped="" ref="0x404aa888"/>
        <function-ref name="clr" scoped="" ref="0x404aa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a9e48" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5050"/>
        <function-ref name="isInput" scoped="" ref="0x404b5130"/>
        <function-ref name="toggle" scoped="" ref="0x404b5210"/>
        <function-ref name="isOutput" scoped="" ref="0x404b52f0"/>
        <function-ref name="get" scoped="" ref="0x404b53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b54b0"/>
        <function-ref name="set" scoped="" ref="0x404b5590"/>
        <function-ref name="clr" scoped="" ref="0x404b5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9c938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9cb10"/>
        <function-ref name="isInput" scoped="" ref="0x40e9cbf0"/>
        <function-ref name="toggle" scoped="" ref="0x40e9ccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9cdb0"/>
        <function-ref name="get" scoped="" ref="0x40e9ce90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9b010"/>
        <function-ref name="set" scoped="" ref="0x40e9b0f0"/>
        <function-ref name="clr" scoped="" ref="0x40e9b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9a3b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9a588"/>
        <function-ref name="isInput" scoped="" ref="0x40e9a668"/>
        <function-ref name="toggle" scoped="" ref="0x40e9a748"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9a828"/>
        <function-ref name="get" scoped="" ref="0x40e9a908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9a9e8"/>
        <function-ref name="set" scoped="" ref="0x40e9aac8"/>
        <function-ref name="clr" scoped="" ref="0x40e9aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e99d70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e99d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e98010"/>
        <function-ref name="isInput" scoped="" ref="0x40e980f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e981d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e982b0"/>
        <function-ref name="get" scoped="" ref="0x40e98390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e98470"/>
        <function-ref name="set" scoped="" ref="0x40e98550"/>
        <function-ref name="clr" scoped="" ref="0x40e98630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecc7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecc7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecc9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40eccab0"/>
        <function-ref name="toggle" scoped="" ref="0x40eccb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40eccc70"/>
        <function-ref name="get" scoped="" ref="0x40eccd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecce30"/>
        <function-ref name="set" scoped="" ref="0x40eccf10"/>
        <function-ref name="clr" scoped="" ref="0x40ecb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eca228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eca228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eca400"/>
        <function-ref name="isInput" scoped="" ref="0x40eca4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40eca5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eca6a0"/>
        <function-ref name="get" scoped="" ref="0x40eca780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eca860"/>
        <function-ref name="set" scoped="" ref="0x40eca940"/>
        <function-ref name="clr" scoped="" ref="0x40ecaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec9c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec9de0"/>
        <function-ref name="isInput" scoped="" ref="0x40ec9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ec8010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec80f0"/>
        <function-ref name="get" scoped="" ref="0x40ec81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec82b0"/>
        <function-ref name="set" scoped="" ref="0x40ec8390"/>
        <function-ref name="clr" scoped="" ref="0x40ec8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec76c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec7898"/>
        <function-ref name="isInput" scoped="" ref="0x40ec7978"/>
        <function-ref name="toggle" scoped="" ref="0x40ec7a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec7b38"/>
        <function-ref name="get" scoped="" ref="0x40ec7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec7cf8"/>
        <function-ref name="set" scoped="" ref="0x40ec7dd8"/>
        <function-ref name="clr" scoped="" ref="0x40ec7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec50b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec5288"/>
        <function-ref name="isInput" scoped="" ref="0x40ec5368"/>
        <function-ref name="toggle" scoped="" ref="0x40ec5448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec5528"/>
        <function-ref name="get" scoped="" ref="0x40ec5608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec56e8"/>
        <function-ref name="set" scoped="" ref="0x40ec57c8"/>
        <function-ref name="clr" scoped="" ref="0x40ec58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b1010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b11e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b12c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1488"/>
        <function-ref name="get" scoped="" ref="0x404b1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1648"/>
        <function-ref name="set" scoped="" ref="0x404b1728"/>
        <function-ref name="clr" scoped="" ref="0x404b1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404be7b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404be7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be990"/>
        <function-ref name="isInput" scoped="" ref="0x404bea70"/>
        <function-ref name="toggle" scoped="" ref="0x404beb50"/>
        <function-ref name="isOutput" scoped="" ref="0x404bec30"/>
        <function-ref name="get" scoped="" ref="0x404bed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bedf0"/>
        <function-ref name="set" scoped="" ref="0x404beed0"/>
        <function-ref name="clr" scoped="" ref="0x404bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c9010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c91e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c92c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9488"/>
        <function-ref name="get" scoped="" ref="0x404c9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9648"/>
        <function-ref name="set" scoped="" ref="0x404c9728"/>
        <function-ref name="clr" scoped="" ref="0x404c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c77b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c77b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7990"/>
        <function-ref name="isInput" scoped="" ref="0x404c7a70"/>
        <function-ref name="toggle" scoped="" ref="0x404c7b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7c30"/>
        <function-ref name="get" scoped="" ref="0x404c7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7df0"/>
        <function-ref name="set" scoped="" ref="0x404c7ed0"/>
        <function-ref name="clr" scoped="" ref="0x404c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d1010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d11e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d12c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1488"/>
        <function-ref name="get" scoped="" ref="0x404d1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1648"/>
        <function-ref name="set" scoped="" ref="0x404d1728"/>
        <function-ref name="clr" scoped="" ref="0x404d1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cf7b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cf7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf990"/>
        <function-ref name="isInput" scoped="" ref="0x404cfa70"/>
        <function-ref name="toggle" scoped="" ref="0x404cfb50"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfc30"/>
        <function-ref name="get" scoped="" ref="0x404cfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfdf0"/>
        <function-ref name="set" scoped="" ref="0x404cfed0"/>
        <function-ref name="clr" scoped="" ref="0x404ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cc080" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc258"/>
        <function-ref name="isInput" scoped="" ref="0x404cc338"/>
        <function-ref name="toggle" scoped="" ref="0x404cc418"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc4f8"/>
        <function-ref name="get" scoped="" ref="0x404cc5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc6b8"/>
        <function-ref name="set" scoped="" ref="0x404cc798"/>
        <function-ref name="clr" scoped="" ref="0x404cc878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d7840" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7a18"/>
        <function-ref name="isInput" scoped="" ref="0x404d7af8"/>
        <function-ref name="toggle" scoped="" ref="0x404d7bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7cb8"/>
        <function-ref name="get" scoped="" ref="0x404d7d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7e78"/>
        <function-ref name="set" scoped="" ref="0x404d6010"/>
        <function-ref name="clr" scoped="" ref="0x404d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d40b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4288"/>
        <function-ref name="isInput" scoped="" ref="0x404d4368"/>
        <function-ref name="toggle" scoped="" ref="0x404d4448"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4528"/>
        <function-ref name="get" scoped="" ref="0x404d4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d46e8"/>
        <function-ref name="set" scoped="" ref="0x404d47c8"/>
        <function-ref name="clr" scoped="" ref="0x404d48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404df880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404df880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dfa58"/>
        <function-ref name="isInput" scoped="" ref="0x404dfb38"/>
        <function-ref name="toggle" scoped="" ref="0x404dfc18"/>
        <function-ref name="isOutput" scoped="" ref="0x404dfcf8"/>
        <function-ref name="get" scoped="" ref="0x404dfdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dfeb8"/>
        <function-ref name="set" scoped="" ref="0x404de010"/>
        <function-ref name="clr" scoped="" ref="0x404de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404dc0b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404dc0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc288"/>
        <function-ref name="isInput" scoped="" ref="0x404dc368"/>
        <function-ref name="toggle" scoped="" ref="0x404dc448"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc528"/>
        <function-ref name="get" scoped="" ref="0x404dc608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc6e8"/>
        <function-ref name="set" scoped="" ref="0x404dc7c8"/>
        <function-ref name="clr" scoped="" ref="0x404dc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404da880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404daa58"/>
        <function-ref name="isInput" scoped="" ref="0x404dab38"/>
        <function-ref name="toggle" scoped="" ref="0x404dac18"/>
        <function-ref name="isOutput" scoped="" ref="0x404dacf8"/>
        <function-ref name="get" scoped="" ref="0x404dadd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404daeb8"/>
        <function-ref name="set" scoped="" ref="0x404d9010"/>
        <function-ref name="clr" scoped="" ref="0x404d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e40b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4288"/>
        <function-ref name="isInput" scoped="" ref="0x404e4368"/>
        <function-ref name="toggle" scoped="" ref="0x404e4448"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4528"/>
        <function-ref name="get" scoped="" ref="0x404e4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e46e8"/>
        <function-ref name="set" scoped="" ref="0x404e47c8"/>
        <function-ref name="clr" scoped="" ref="0x404e48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e2880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2a58"/>
        <function-ref name="isInput" scoped="" ref="0x404e2b38"/>
        <function-ref name="toggle" scoped="" ref="0x404e2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2cf8"/>
        <function-ref name="get" scoped="" ref="0x404e2dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e2eb8"/>
        <function-ref name="set" scoped="" ref="0x404e1010"/>
        <function-ref name="clr" scoped="" ref="0x404e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40504bf8" loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40504bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40504dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40503010" loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40503010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405031e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405032c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405033a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40503488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40503568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4051c808" loc="60:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4051c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4041fa30" loc="57:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4041fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4041fc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4051c400" loc="59:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4051c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4041fdc8" loc="58:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4041fdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051c010"/>
        <function-ref name="taskLoop" scoped="" ref="0x4051c0f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4051c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403179c0" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40317b98"/>
        <function-ref name="runTask" scoped="" ref="0x40317c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40315250" loc="47:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40315428"/>
        <function-ref name="taskLoop" scoped="" ref="0x40315508"/>
        <function-ref name="runNextTask" scoped="" ref="0x403155e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40384100" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403842d8"/>
        <function-ref name="runTask" scoped="" ref="0x403843b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40384d70" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40383010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403858a8" loc="55:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40385a80"/>
        <function-ref name="taskLoop" scoped="" ref="0x40385b60"/>
        <function-ref name="runNextTask" scoped="" ref="0x40385c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40399e88" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40394070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4031c690" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4031c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40392370" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40392548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4041ef08" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4041ef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405070f0"/>
        <function-ref name="stopDone" scoped="" ref="0x405071d0"/>
        <function-ref name="start" scoped="" ref="0x405072b0"/>
        <function-ref name="stop" scoped="" ref="0x40507390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40521120" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40521120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405212f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40525078" loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40525078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40525250"/>
        <function-ref name="payloadLength" scoped="" ref="0x40525330"/>
        <function-ref name="getPayload" scoped="" ref="0x40525410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405254f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405255d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405077f0" loc="43:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405077f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405079c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40507aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40507b88"/>
        <function-ref name="cancel" scoped="" ref="0x40507c68"/>
        <function-ref name="sendDone" scoped="" ref="0x40507d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40522890" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40522890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40522a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40534e58" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40534e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4053a050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4053a130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4053a210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4053a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405221f8" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405221f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405223d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4051d010" loc="51:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4051d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4051d1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4051d2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4051d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4053e7a0" loc="53:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4053e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4053e978"/>
        <function-ref name="setRetries" scoped="" ref="0x4053ea58"/>
        <function-ref name="getRetries" scoped="" ref="0x4053eb38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4053ec18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4053ecf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4052cdf8" loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4052cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40520010"/>
        <function-ref name="source" scoped="" ref="0x405200f0"/>
        <function-ref name="address" scoped="" ref="0x405201d0"/>
        <function-ref name="destination" scoped="" ref="0x405202b0"/>
        <function-ref name="setSource" scoped="" ref="0x40520390"/>
        <function-ref name="setDestination" scoped="" ref="0x40520470"/>
        <function-ref name="type" scoped="" ref="0x40520550"/>
        <function-ref name="setType" scoped="" ref="0x40520630"/>
        <function-ref name="isForMe" scoped="" ref="0x40520710"/>
        <function-ref name="setGroup" scoped="" ref="0x405207f0"/>
        <function-ref name="localGroup" scoped="" ref="0x405208d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4053c1d8" loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4053c1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4053c3b0"/>
        <function-ref name="setChannel" scoped="" ref="0x4053c490"/>
        <function-ref name="getChannel" scoped="" ref="0x4053c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40548c68" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40548c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405427a0"/>
        <function-ref name="clear" scoped="" ref="0x40542b50"/>
        <function-ref name="isValid" scoped="" ref="0x405423f0"/>
        <function-ref name="set" scoped="" ref="0x40542f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40547650" loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40547650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405461f8"/>
        <function-ref name="clear" scoped="" ref="0x405465a8"/>
        <function-ref name="isValid" scoped="" ref="0x40547e20"/>
        <function-ref name="set" scoped="" ref="0x40546958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405453f0" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405455c8"/>
        <function-ref name="stopDone" scoped="" ref="0x405456a8"/>
        <function-ref name="start" scoped="" ref="0x40545788"/>
        <function-ref name="stop" scoped="" ref="0x40545868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4055ad18" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4055ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405558f0"/>
        <function-ref name="get" scoped="" ref="0x40555630"/>
        <function-ref name="isSet" scoped="" ref="0x40555370"/>
        <function-ref name="set" scoped="" ref="0x40555bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4055f578" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4055f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4055d088"/>
        <function-ref name="clear" scoped="" ref="0x4055d438"/>
        <function-ref name="isValid" scoped="" ref="0x4055fcc8"/>
        <function-ref name="set" scoped="" ref="0x4055d7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405504b0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405504b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40550688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4054f600" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4054f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4054f7d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4054f8b8"/>
        <function-ref name="getPayload" scoped="" ref="0x4054f998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4054fa78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4054fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40545cc8" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40545cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40545ea0"/>
        <function-ref name="getPayload" scoped="" ref="0x40552010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405520f0"/>
        <function-ref name="cancel" scoped="" ref="0x405521d0"/>
        <function-ref name="sendDone" scoped="" ref="0x405522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40552db0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40552db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40550010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4054b8f8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4054b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4055a590"/>
        <function-ref name="get" scoped="" ref="0x4055a2d0"/>
        <function-ref name="isSet" scoped="" ref="0x4055a010"/>
        <function-ref name="set" scoped="" ref="0x4055a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4054d010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4054d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4054d1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4054d2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4054d3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4054d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40552718" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40552718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40561ba8" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40561ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405606c8"/>
        <function-ref name="clear" scoped="" ref="0x40560a78"/>
        <function-ref name="isValid" scoped="" ref="0x40560318"/>
        <function-ref name="set" scoped="" ref="0x40560e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40561010" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40561010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40561658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40557540" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40557540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4054b118"/>
        <function-ref name="get" scoped="" ref="0x40557e48"/>
        <function-ref name="isSet" scoped="" ref="0x40557b88"/>
        <function-ref name="set" scoped="" ref="0x4054b3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4054ea10" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4054ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4054ebe8"/>
        <function-ref name="noAck" scoped="" ref="0x4054ecc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4054eda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40550bb0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40550bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40550d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4054d630" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4054d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4054d808"/>
        <function-ref name="setRetries" scoped="" ref="0x4054d8e8"/>
        <function-ref name="getRetries" scoped="" ref="0x4054d9c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4054daa8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4054db88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4054fcf0" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4054fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4054fec8"/>
        <function-ref name="source" scoped="" ref="0x4054e010"/>
        <function-ref name="address" scoped="" ref="0x4054e0f0"/>
        <function-ref name="destination" scoped="" ref="0x4054e1d0"/>
        <function-ref name="setSource" scoped="" ref="0x4054e2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4054e390"/>
        <function-ref name="type" scoped="" ref="0x4054e470"/>
        <function-ref name="setType" scoped="" ref="0x4054e550"/>
        <function-ref name="isForMe" scoped="" ref="0x4054e630"/>
        <function-ref name="setGroup" scoped="" ref="0x4054e710"/>
        <function-ref name="localGroup" scoped="" ref="0x4054e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4054dd48" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4054dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4054c010"/>
        <function-ref name="setChannel" scoped="" ref="0x4054c0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x4054c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40554df8" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40554df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40553010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4054f2a8" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4054f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4054f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4056a1c0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4056a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4056a398"/>
        <function-ref name="stopDone" scoped="" ref="0x4056a478"/>
        <function-ref name="start" scoped="" ref="0x4056a558"/>
        <function-ref name="stop" scoped="" ref="0x4056a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40582580" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40582580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40580170"/>
        <function-ref name="get" scoped="" ref="0x40582e88"/>
        <function-ref name="isSet" scoped="" ref="0x40582bc8"/>
        <function-ref name="set" scoped="" ref="0x40580430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40564778" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40564778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40564950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4056cf18" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4056cf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40563188"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40563268"/>
        <function-ref name="request" scoped="" ref="0x40563348"/>
        <function-ref name="granted" scoped="" ref="0x40563428"/>
        <function-ref name="isOwner" scoped="" ref="0x40563508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405681b0" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405681b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40568388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4056aa98" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4056aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4056ac70"/>
        <function-ref name="getPayload" scoped="" ref="0x4056ad50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4056ae30"/>
        <function-ref name="cancel" scoped="" ref="0x4056af10"/>
        <function-ref name="sendDone" scoped="" ref="0x40569010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40569b10" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40569b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40569ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40576098" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40576098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40576270"/>
        <function-ref name="address" scoped="" ref="0x40576350"/>
        <function-ref name="destination" scoped="" ref="0x40576430"/>
        <function-ref name="setSource" scoped="" ref="0x40576510"/>
        <function-ref name="setDestination" scoped="" ref="0x405765f0"/>
        <function-ref name="pan" scoped="" ref="0x405766d0"/>
        <function-ref name="setPan" scoped="" ref="0x405767b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40576890"/>
        <function-ref name="localPan" scoped="" ref="0x40576970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40576bf8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40576bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40576dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40576eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x4056f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4056f0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4056f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40573218" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40573218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40573de0"/>
        <function-ref name="get" scoped="" ref="0x40573b20"/>
        <function-ref name="isSet" scoped="" ref="0x40573860"/>
        <function-ref name="set" scoped="" ref="0x405820b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4056f978" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4056f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4056fb50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4056fc30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4056fd10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4056fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40565110" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40565110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405652e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405653c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405654a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40565588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40565668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40569478" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40569478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40569650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4057f8c0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4057f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4057e4d8"/>
        <function-ref name="clear" scoped="" ref="0x4057e888"/>
        <function-ref name="isValid" scoped="" ref="0x4057e128"/>
        <function-ref name="set" scoped="" ref="0x4057ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40580cd8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40580cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4057f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4056be18" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4056be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40575a08"/>
        <function-ref name="get" scoped="" ref="0x40575748"/>
        <function-ref name="isSet" scoped="" ref="0x40575488"/>
        <function-ref name="set" scoped="" ref="0x40575cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4056f3f0" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4056f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4056f5c8"/>
        <function-ref name="noAck" scoped="" ref="0x4056f6a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4056f788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40570ab8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40570ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40570c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40570d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40570e50"/>
        <function-ref name="cancel" scoped="" ref="0x40564010"/>
        <function-ref name="sendDone" scoped="" ref="0x405640f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x405688b0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x405688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40568a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4056b010" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4056b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4056b1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x4056b2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x4056b3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4056b488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4056b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4056b728" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4056b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4056b900"/>
        <function-ref name="setChannel" scoped="" ref="0x4056b9e0"/>
        <function-ref name="getChannel" scoped="" ref="0x4056bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40567380" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40567380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40567558"/>
        <function-ref name="source" scoped="" ref="0x40567638"/>
        <function-ref name="address" scoped="" ref="0x40567718"/>
        <function-ref name="destination" scoped="" ref="0x405677f8"/>
        <function-ref name="setSource" scoped="" ref="0x405678d8"/>
        <function-ref name="setDestination" scoped="" ref="0x405679b8"/>
        <function-ref name="type" scoped="" ref="0x40567a98"/>
        <function-ref name="setType" scoped="" ref="0x40567b78"/>
        <function-ref name="isForMe" scoped="" ref="0x40567c58"/>
        <function-ref name="setGroup" scoped="" ref="0x40567d38"/>
        <function-ref name="localGroup" scoped="" ref="0x40567e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4057c3a0" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4057cea0"/>
        <function-ref name="clear" scoped="" ref="0x4057b280"/>
        <function-ref name="isValid" scoped="" ref="0x4057caf0"/>
        <function-ref name="set" scoped="" ref="0x4057b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40564328" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40564328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40564500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405807e0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405807e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405809b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40567010" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40567010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405671e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x4059c3c0" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x4059c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4059c598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4058cd30" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4058cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x4058cf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4059d428" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4059d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4059d600"/>
        <function-ref name="checkFrame" scoped="" ref="0x4059d6e0"/>
        <function-ref name="source" scoped="" ref="0x4059d7c0"/>
        <function-ref name="destination" scoped="" ref="0x4059d8a0"/>
        <function-ref name="setSource" scoped="" ref="0x4059d980"/>
        <function-ref name="setDestination" scoped="" ref="0x4059da60"/>
        <function-ref name="setGroup" scoped="" ref="0x4059db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405a29b0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405a29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405a2b88"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405a2c68"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405a2d48"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405a2e28"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405a2f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405bc4c8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405bc4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405bc6a0"/>
        <function-ref name="wait" scoped="" ref="0x405bc780"/>
        <function-ref name="cancel" scoped="" ref="0x405bc860"/>
        <function-ref name="isFree" scoped="" ref="0x405bc940"/>
        <function-ref name="getNow" scoped="" ref="0x405bca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x405b96a8" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x405b96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b9880"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b9960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b9a40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b9b20"/>
        <function-ref name="headerLength" scoped="" ref="0x405b9c00"/>
        <function-ref name="metadataLength" scoped="" ref="0x405b9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x405ae088" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x405ae088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405aec08"/>
        <function-ref name="clear" scoped="" ref="0x405b8010"/>
        <function-ref name="isValid" scoped="" ref="0x405ae858"/>
        <function-ref name="set" scoped="" ref="0x405b83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x40592518" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x40592518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405926f0"/>
        <function-ref name="headerLength" scoped="" ref="0x405927d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x405928b0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40592990"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40592a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4058c010" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4058c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4058c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x4058d8d8" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4058d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4058dab0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4058db90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4058dc70"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4058dd50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4058de30"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4058df10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40586010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x405afe20" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405afe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40595010"/>
        <function-ref name="getDSN" scoped="" ref="0x405950f0"/>
        <function-ref name="setFCF" scoped="" ref="0x405951d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405952b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40595390"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40595470"/>
        <function-ref name="setDSN" scoped="" ref="0x40595550"/>
        <function-ref name="createAckReply" scoped="" ref="0x40595630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40595710"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405957f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405958d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405959b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40595a90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40595bf0"/>
        <function-ref name="localPan" scoped="" ref="0x40595cd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40595db0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40595e90"/>
        <function-ref name="setFramePending" scoped="" ref="0x405a1010"/>
        <function-ref name="setDestPan" scoped="" ref="0x405a10f0"/>
        <function-ref name="isForMe" scoped="" ref="0x405a11d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405a12b0"/>
        <function-ref name="getFCF" scoped="" ref="0x405a1390"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405a1470"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405a1550"/>
        <function-ref name="getFramePending" scoped="" ref="0x405a1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40585010" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40585010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405851e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405852c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405853a8"/>
        <function-ref name="getSender" scoped="" ref="0x40585488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40596e28" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40596e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40599050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40599130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40599210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405992f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x405f1108" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405f1108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405f12f0"/>
        <function-ref name="wait" scoped="" ref="0x405f13d0"/>
        <function-ref name="cancel" scoped="" ref="0x405f14b0"/>
        <function-ref name="isFree" scoped="" ref="0x405f1590"/>
        <function-ref name="getNow" scoped="" ref="0x405f1670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405f19c0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405f19c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40608e70"/>
        <function-ref name="fired" scoped="" ref="0x40608640"/>
        <function-ref name="startAt" scoped="" ref="0x40608b30"/>
        <function-ref name="isRunning" scoped="" ref="0x406088b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40613110"/>
        <function-ref name="start" scoped="" ref="0x40608128"/>
        <function-ref name="stop" scoped="" ref="0x406083c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40f21608" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40f21608"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f217f0"/>
        <function-ref name="wait" scoped="" ref="0x40f218d0"/>
        <function-ref name="cancel" scoped="" ref="0x40f219b0"/>
        <function-ref name="isFree" scoped="" ref="0x40f21a90"/>
        <function-ref name="getNow" scoped="" ref="0x40f21b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40f21e00" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f21e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f1e350"/>
        <function-ref name="fired" scoped="" ref="0x40f20a88"/>
        <function-ref name="startAt" scoped="" ref="0x40f1e010"/>
        <function-ref name="isRunning" scoped="" ref="0x40f20d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f1e5c8"/>
        <function-ref name="start" scoped="" ref="0x40f20570"/>
        <function-ref name="stop" scoped="" ref="0x40f20810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40f1e7d8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40f1e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40f1e9b0"/>
        <function-ref name="suspend" scoped="" ref="0x40f1ea90"/>
        <function-ref name="resume" scoped="" ref="0x40f1eb70"/>
        <function-ref name="run" scoped="" ref="0x40f1ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4060aa60" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4060aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4060ac38"/>
        <function-ref name="suspend" scoped="" ref="0x4060ad18"/>
        <function-ref name="resume" scoped="" ref="0x4060adf8"/>
        <function-ref name="run" scoped="" ref="0x4060aed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40670f20" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40670f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4066f110"/>
        <function-ref name="cancel" scoped="" ref="0x4066f1f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4066f2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4066f430" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4066f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4066f608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40671c28" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40671c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40671e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406725b0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406725b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40672788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40672868"/>
        <function-ref name="getPayload" scoped="" ref="0x40672948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40672a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40672b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40672ce0" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40672ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40672ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40671010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406710f0"/>
        <function-ref name="cancel" scoped="" ref="0x406711d0"/>
        <function-ref name="sendDone" scoped="" ref="0x406712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40671868" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40671868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40671a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40670788" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40670788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40670960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40670a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40670b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40670c00"/>
        <function-ref name="headerLength" scoped="" ref="0x40670ce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40670dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4066f768" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4066f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4066f940"/>
        <function-ref name="checkFrame" scoped="" ref="0x4066fa20"/>
        <function-ref name="source" scoped="" ref="0x4066fb00"/>
        <function-ref name="destination" scoped="" ref="0x4066fbe0"/>
        <function-ref name="setSource" scoped="" ref="0x4066fcc0"/>
        <function-ref name="setDestination" scoped="" ref="0x4066fda0"/>
        <function-ref name="setGroup" scoped="" ref="0x4066fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40671488" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40671488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40671670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40670030" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40670030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40670218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40673940" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40673940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40673b18"/>
        <function-ref name="source" scoped="" ref="0x40673bf8"/>
        <function-ref name="address" scoped="" ref="0x40673cd8"/>
        <function-ref name="destination" scoped="" ref="0x40673db8"/>
        <function-ref name="setSource" scoped="" ref="0x40673e98"/>
        <function-ref name="setDestination" scoped="" ref="0x40672010"/>
        <function-ref name="type" scoped="" ref="0x406720f0"/>
        <function-ref name="setType" scoped="" ref="0x406721d0"/>
        <function-ref name="isForMe" scoped="" ref="0x406722b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40672390"/>
        <function-ref name="localGroup" scoped="" ref="0x40672470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40670410" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40670410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406705f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f4b430" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f4b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f4cf20" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f4cf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4b110"/>
        <function-ref name="cancel" scoped="" ref="0x40f4b1f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4b2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40f4dc28" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40f4dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40f4de10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f4e5b0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f4e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4e788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4e868"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4e948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4ea28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f4ece0" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f4ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4eec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4d0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f4d1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40f4d868" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40f4d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f4f1c0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f4f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4f398"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4f478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4f558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4f638"/>
        <function-ref name="headerLength" scoped="" ref="0x40f4f718"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f4f7f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f4b768" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f4b768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4b9c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x40f4baa0"/>
        <function-ref name="source" scoped="" ref="0x40f4bb80"/>
        <function-ref name="destination" scoped="" ref="0x40f4bc60"/>
        <function-ref name="setSource" scoped="" ref="0x40f4bd40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f4be20"/>
        <function-ref name="setGroup" scoped="" ref="0x40f4bf00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40f4a070" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f4a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40f4a248"/>
        <function-ref name="changed" scoped="" ref="0x40f4a328"/>
        <function-ref name="amGroup" scoped="" ref="0x40f4a408"/>
        <function-ref name="setAddress" scoped="" ref="0x40f4a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f4c788" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f4c788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4c960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4ca40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4cb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4cc00"/>
        <function-ref name="headerLength" scoped="" ref="0x40f4cce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f4cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f4d488" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f4d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40f4c030" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40f4c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4c218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f4f938" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f4f938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4fb10"/>
        <function-ref name="source" scoped="" ref="0x40f4fbf0"/>
        <function-ref name="address" scoped="" ref="0x40f4fcd0"/>
        <function-ref name="destination" scoped="" ref="0x40f4fdb0"/>
        <function-ref name="setSource" scoped="" ref="0x40f4fe90"/>
        <function-ref name="setDestination" scoped="" ref="0x40f4e010"/>
        <function-ref name="type" scoped="" ref="0x40f4e0f0"/>
        <function-ref name="setType" scoped="" ref="0x40f4e1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f4e2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f4e390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f4e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40f4c410" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40f4c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x4066cd70" loc="54:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40669010"/>
        <function-ref name="changed" scoped="" ref="0x406690f0"/>
        <function-ref name="amGroup" scoped="" ref="0x406691d0"/>
        <function-ref name="setAddress" scoped="" ref="0x406692b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4067da60" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4067da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067dc38"/>
        <function-ref name="cancel" scoped="" ref="0x4067dd18"/>
        <function-ref name="sendDone" scoped="" ref="0x4067ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4067c010" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4067c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4067c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4067c2c8"/>
        <function-ref name="request" scoped="" ref="0x4067c3a8"/>
        <function-ref name="granted" scoped="" ref="0x4067c488"/>
        <function-ref name="isOwner" scoped="" ref="0x4067c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4067d538" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4067d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067d710"/>
        <function-ref name="cancel" scoped="" ref="0x4067d7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4067d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40685cb0" loc="86:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40685cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40685e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406c9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406c9600" loc="89:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406c9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406c97e8"/>
        <function-ref name="configure" scoped="" ref="0x406c98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40685570" loc="85:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40685570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40685758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40685838"/>
        <function-ref name="request" scoped="" ref="0x40685918"/>
        <function-ref name="granted" scoped="" ref="0x406859f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40685ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406c9150" loc="87:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406c9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406c9328"/>
        <function-ref name="userId" scoped="" ref="0x406c9408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f8d070" loc="44:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f8d070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f8d248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f8d3a8" loc="45:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f8d3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f8d580"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f8d660"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f8d740"/>
        <function-ref name="dequeue" scoped="" ref="0x40f8d820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f8bb18" loc="52:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f8bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f8bd00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f8bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f8a3f8" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f8a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f8a5e0"/>
        <function-ref name="configure" scoped="" ref="0x40f8a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f8a820" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f8a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f8a9f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f8aad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f8abb8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f8ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f8b3d8" loc="51:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f8b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f8b5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f8b6a0"/>
        <function-ref name="request" scoped="" ref="0x40f8b780"/>
        <function-ref name="granted" scoped="" ref="0x40f8b860"/>
        <function-ref name="isOwner" scoped="" ref="0x40f8b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f8bf20" loc="53:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f8bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f8a110"/>
        <function-ref name="userId" scoped="" ref="0x40f8a1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f8ae18" loc="69:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f8ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f89010"/>
        <function-ref name="runTask" scoped="" ref="0x40f890f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406d59e8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406d59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406d5bc0"/>
        <function-ref name="cancel" scoped="" ref="0x406d5ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x406d5d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406d5ee0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406d5ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ea0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406d8488" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406d8488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406c63b0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406c63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c6588"/>
        <function-ref name="payloadLength" scoped="" ref="0x406c6668"/>
        <function-ref name="getPayload" scoped="" ref="0x406c6748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c6828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406c6908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x406d5250" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x406d5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406d5428"/>
        <function-ref name="payloadLength" scoped="" ref="0x406d5508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d55e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406d56c8"/>
        <function-ref name="headerLength" scoped="" ref="0x406d57a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x406d5888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406d87d0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406d87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406d89a8"/>
        <function-ref name="getDSN" scoped="" ref="0x406d8a88"/>
        <function-ref name="setFCF" scoped="" ref="0x406d8b68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406d8c48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406d8d28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406d8e08"/>
        <function-ref name="setDSN" scoped="" ref="0x406d8ee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x406d6010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406d60f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406d61d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406d62b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406d6390"/>
        <function-ref name="localAddr" scoped="" ref="0x406d6470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406d65d0"/>
        <function-ref name="localPan" scoped="" ref="0x406d66b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406d6790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406d6870"/>
        <function-ref name="setFramePending" scoped="" ref="0x406d6950"/>
        <function-ref name="setDestPan" scoped="" ref="0x406d6a30"/>
        <function-ref name="isForMe" scoped="" ref="0x406d6b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406d6bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x406d6cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406d6db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406d6e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x406d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406c6a48" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406c6a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c6c20"/>
        <function-ref name="getPayload" scoped="" ref="0x406c6d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c6de0"/>
        <function-ref name="cancel" scoped="" ref="0x406c6ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x406d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406d8170" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406d8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d8348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4070a280" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4070a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4070a458"/>
        <function-ref name="cancel" scoped="" ref="0x4070a538"/>
        <function-ref name="sendDone" scoped="" ref="0x4070a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4070a778" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4070a778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4070a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x406e7a58" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x406e7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e7c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e7d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e7df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e7ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x406e6010"/>
        <function-ref name="metadataLength" scoped="" ref="0x406e60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x406e6748" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x406e6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e6920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4070aab0" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4070aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4070ac88"/>
        <function-ref name="payloadLength" scoped="" ref="0x4070ad68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4070ae48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4070af28"/>
        <function-ref name="headerLength" scoped="" ref="0x40709018"/>
        <function-ref name="metadataLength" scoped="" ref="0x407090f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x406e6250" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x406e6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e6428"/>
        <function-ref name="cancel" scoped="" ref="0x406e6508"/>
        <function-ref name="sendDone" scoped="" ref="0x406e65e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406e7228" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406e7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e7400"/>
        <function-ref name="cancel" scoped="" ref="0x406e74e0"/>
        <function-ref name="sendDone" scoped="" ref="0x406e75c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406e7720" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406e7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e78f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x406e6a80" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x406e6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e6c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e6d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e6e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e6ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x4070a010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4070a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40755170" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40755170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40755348"/>
        <function-ref name="address" scoped="" ref="0x40755428"/>
        <function-ref name="destination" scoped="" ref="0x40755508"/>
        <function-ref name="setSource" scoped="" ref="0x407555e8"/>
        <function-ref name="setDestination" scoped="" ref="0x407556c8"/>
        <function-ref name="pan" scoped="" ref="0x407557a8"/>
        <function-ref name="setPan" scoped="" ref="0x40755888"/>
        <function-ref name="isForMe" scoped="" ref="0x40755968"/>
        <function-ref name="localPan" scoped="" ref="0x40755a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40755b88" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40755b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40755d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40755e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40755f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40754018"/>
        <function-ref name="headerLength" scoped="" ref="0x407540f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407541d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40757658" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40757658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40757830"/>
        <function-ref name="getDSN" scoped="" ref="0x40757910"/>
        <function-ref name="setFCF" scoped="" ref="0x407579f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40757ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40757bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40757c90"/>
        <function-ref name="setDSN" scoped="" ref="0x40757d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40757e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40756010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407560f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407561d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407562b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40756390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407564f0"/>
        <function-ref name="localPan" scoped="" ref="0x407565d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407566b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40756790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40756870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40756950"/>
        <function-ref name="isForMe" scoped="" ref="0x40756a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40756b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40756bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40756cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40756db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40756e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40754368" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40754368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40754540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40754620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40754700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407547e0"/>
        <function-ref name="headerLength" scoped="" ref="0x407548c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407549a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40fc2950" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40fc2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40fc2b28"/>
        <function-ref name="address" scoped="" ref="0x40fc2c08"/>
        <function-ref name="destination" scoped="" ref="0x40fc2ce8"/>
        <function-ref name="setSource" scoped="" ref="0x40fc2dc8"/>
        <function-ref name="setDestination" scoped="" ref="0x40fc2ea8"/>
        <function-ref name="pan" scoped="" ref="0x40fc1010"/>
        <function-ref name="setPan" scoped="" ref="0x40fc10f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc11d0"/>
        <function-ref name="localPan" scoped="" ref="0x40fc12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40fc13f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40fc13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc15c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc16a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc1788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc1868"/>
        <function-ref name="headerLength" scoped="" ref="0x40fc1948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40fc1a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40fc9f20" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40fc9f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40fc3110"/>
        <function-ref name="getDSN" scoped="" ref="0x40fc31f0"/>
        <function-ref name="setFCF" scoped="" ref="0x40fc32d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40fc33b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40fc3490"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40fc3570"/>
        <function-ref name="setDSN" scoped="" ref="0x40fc3650"/>
        <function-ref name="createAckReply" scoped="" ref="0x40fc3730"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40fc3810"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40fc38f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40fc39d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40fc3ab0"/>
        <function-ref name="localAddr" scoped="" ref="0x40fc3b90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40fc3cf0"/>
        <function-ref name="localPan" scoped="" ref="0x40fc3dd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40fc3eb0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40fc2010"/>
        <function-ref name="setFramePending" scoped="" ref="0x40fc20f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40fc21d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc22b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40fc2390"/>
        <function-ref name="getFCF" scoped="" ref="0x40fc2470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40fc2550"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40fc2630"/>
        <function-ref name="getFramePending" scoped="" ref="0x40fc2710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40fc1b98" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40fc1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40fc1d70"/>
        <function-ref name="changed" scoped="" ref="0x40fc1e50"/>
        <function-ref name="amGroup" scoped="" ref="0x40fc0010"/>
        <function-ref name="setAddress" scoped="" ref="0x40fc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40fc0250" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40fc0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc0428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc0508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc05e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc06c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40fc07a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40fc0888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40751ca8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40751ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40751e80"/>
        <function-ref name="cancel" scoped="" ref="0x4078f010"/>
        <function-ref name="sendDone" scoped="" ref="0x4078f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4078f250" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4078f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4078f428"/>
        <function-ref name="header" scoped="" ref="0x4078f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40751388" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40751388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40751560"/>
        <function-ref name="cancel" scoped="" ref="0x40751640"/>
        <function-ref name="sendDone" scoped="" ref="0x40751720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4078f668" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4078f668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4078f840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4078f920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4078fa00"/>
        <function-ref name="getSender" scoped="" ref="0x4078fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40751860" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40751860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40751a38"/>
        <function-ref name="header" scoped="" ref="0x40751b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40fd0b20" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40fd0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd0cf8"/>
        <function-ref name="cancel" scoped="" ref="0x40fd0dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40fcf030" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40fcf030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fcf208"/>
        <function-ref name="header" scoped="" ref="0x40fcf2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40fce150" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fce150"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fce328"/>
        <function-ref name="clearAll" scoped="" ref="0x40fce408"/>
        <function-ref name="get" scoped="" ref="0x40fce4e8"/>
        <function-ref name="set" scoped="" ref="0x40fce5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fd3ea8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fd3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd00c0"/>
        <function-ref name="cancel" scoped="" ref="0x40fd01a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd0280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40fcf9e0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40fcf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40fcfbb8"/>
        <function-ref name="insertNode" scoped="" ref="0x40fcfc98"/>
        <function-ref name="getNode" scoped="" ref="0x40fcfd78"/>
        <function-ref name="evicted" scoped="" ref="0x40fcfe58"/>
        <function-ref name="getIndex" scoped="" ref="0x40fce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40fd03c0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40fd03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd0598"/>
        <function-ref name="header" scoped="" ref="0x40fd0678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fd07b8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fd07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fd0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40fcf428" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40fcf428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40fcf600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40fcf6e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40fcf7c0"/>
        <function-ref name="getSender" scoped="" ref="0x40fcf8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4077d610" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4077d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4077d7e8"/>
        <function-ref name="insertNode" scoped="" ref="0x4077d8c8"/>
        <function-ref name="getNode" scoped="" ref="0x4077d9a8"/>
        <function-ref name="evicted" scoped="" ref="0x4077da88"/>
        <function-ref name="getIndex" scoped="" ref="0x4077db68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40777010" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40777010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407771e8"/>
        <function-ref name="clearAll" scoped="" ref="0x407772c8"/>
        <function-ref name="get" scoped="" ref="0x407773a8"/>
        <function-ref name="set" scoped="" ref="0x40777488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4077a5d0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4077a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4077a7a8"/>
        <function-ref name="insertNode" scoped="" ref="0x4077a888"/>
        <function-ref name="getNode" scoped="" ref="0x4077a968"/>
        <function-ref name="evicted" scoped="" ref="0x4077aa48"/>
        <function-ref name="getIndex" scoped="" ref="0x4077ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077a238" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4077a410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x41006578" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41006578"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41006750"/>
        <function-ref name="clearAll" scoped="" ref="0x41006830"/>
        <function-ref name="get" scoped="" ref="0x41006910"/>
        <function-ref name="set" scoped="" ref="0x410069f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408c3838" loc="85:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408c3838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c3a10"/>
        <function-ref name="cancel" scoped="" ref="0x408c3af0"/>
        <function-ref name="sendDone" scoped="" ref="0x408c3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408c3d30" loc="86:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408c3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c3f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408c4190" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408c4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c4368"/>
        <function-ref name="cancel" scoped="" ref="0x408c4448"/>
        <function-ref name="sendDone" scoped="" ref="0x408c4528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408c3070" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408c3070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c3248"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c3328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c3408"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c34e8"/>
        <function-ref name="headerLength" scoped="" ref="0x408c35c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408c1090" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408c1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c1268"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c1348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c1428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c1508"/>
        <function-ref name="headerLength" scoped="" ref="0x408c15e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c16c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408c4688" loc="78:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408c4688"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c4860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x408c1808" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408c19e0"/>
        <function-ref name="noAck" scoped="" ref="0x408c1ac0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408c1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408c49a0" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408c49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408c4b78"/>
        <function-ref name="setRetries" scoped="" ref="0x408c4c58"/>
        <function-ref name="getRetries" scoped="" ref="0x408c4d38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408c4e18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408c4ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ff60c0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ff60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff6298"/>
        <function-ref name="cancel" scoped="" ref="0x40ff6378"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff6458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40ff25f0" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40ff25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff27c8"/>
        <function-ref name="runTask" scoped="" ref="0x40ff28a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x40ff6b20" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x40ff6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ff36a8"/>
        <function-ref name="fired" scoped="" ref="0x40ff4938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ff3068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ff4de8"/>
        <function-ref name="getdt" scoped="" ref="0x40ff3b58"/>
        <function-ref name="gett0" scoped="" ref="0x40ff3900"/>
        <function-ref name="isRunning" scoped="" ref="0x40ff4b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ff41e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ff3388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ff4460"/>
        <function-ref name="stop" scoped="" ref="0x40ff46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ffbc98" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ffbc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ffbe70"/>
        <function-ref name="cancel" scoped="" ref="0x40ff7010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ff78c8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ff78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff7aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff7b80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff7c60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff7d40"/>
        <function-ref name="headerLength" scoped="" ref="0x40ff7e20"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ff7f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ff3d88" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ff3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff2010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff21d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff22b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ff2390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ff2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40ff6598" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ff6598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ff6770"/>
        <function-ref name="noAck" scoped="" ref="0x40ff6850"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ff6930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40ff7230" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40ff7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40ff7408"/>
        <function-ref name="setRetries" scoped="" ref="0x40ff74e8"/>
        <function-ref name="getRetries" scoped="" ref="0x40ff75c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40ff76a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40ff7788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ff1ba0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ff1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fee6a8"/>
        <function-ref name="fired" scoped="" ref="0x40ff0938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fee068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ff0de8"/>
        <function-ref name="getdt" scoped="" ref="0x40feeb58"/>
        <function-ref name="gett0" scoped="" ref="0x40fee900"/>
        <function-ref name="isRunning" scoped="" ref="0x40ff0b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ff01e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fee388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ff0460"/>
        <function-ref name="stop" scoped="" ref="0x40ff06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407d03f0" loc="49:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407d03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407cfed0"/>
        <function-ref name="fired" scoped="" ref="0x407cf188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407cf890"/>
        <function-ref name="isOneShot" scoped="" ref="0x407cf638"/>
        <function-ref name="getdt" scoped="" ref="0x407ce3a8"/>
        <function-ref name="gett0" scoped="" ref="0x407ce150"/>
        <function-ref name="isRunning" scoped="" ref="0x407cf3e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407d0a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407cfbb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x407d0c98"/>
        <function-ref name="stop" scoped="" ref="0x407d0f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407e4810" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407e4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407e2330"/>
        <function-ref name="fired" scoped="" ref="0x407e35b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407e3cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x407e3a60"/>
        <function-ref name="getdt" scoped="" ref="0x407e27e0"/>
        <function-ref name="gett0" scoped="" ref="0x407e2588"/>
        <function-ref name="isRunning" scoped="" ref="0x407e3808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407e4e38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407e2010"/>
        <function-ref name="startOneShot" scoped="" ref="0x407e30d8"/>
        <function-ref name="stop" scoped="" ref="0x407e3358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x407e2b40" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x407e2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407e0200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407e4060" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407e4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407e4238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x407f0310" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x407f0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407f0a60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d9010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407f0cd8"/>
        <function-ref name="overflow" scoped="" ref="0x407d9288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407dd290" loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407dd290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407dd468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x407dd858" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x407dd858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407dcd58"/>
        <function-ref name="fired" scoped="" ref="0x407dc528"/>
        <function-ref name="startAt" scoped="" ref="0x407dca18"/>
        <function-ref name="isRunning" scoped="" ref="0x407dc7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x407da010"/>
        <function-ref name="start" scoped="" ref="0x407dc010"/>
        <function-ref name="stop" scoped="" ref="0x407dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40872ca8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40872ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4086f170"/>
        <function-ref name="fired" scoped="" ref="0x40871928"/>
        <function-ref name="startAt" scoped="" ref="0x40871e18"/>
        <function-ref name="isRunning" scoped="" ref="0x40871ba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4086f3e8"/>
        <function-ref name="start" scoped="" ref="0x40871410"/>
        <function-ref name="stop" scoped="" ref="0x408716b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40872870" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40872870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40872a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4086f718" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4086f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4086fe68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4086e388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4086e110"/>
        <function-ref name="overflow" scoped="" ref="0x4086e600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41040c48" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41040c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41040e20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41040f00"/>
        <function-ref name="getControlA" scoped="" ref="0x4103f010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4103f0f0"/>
        <function-ref name="setControlB" scoped="" ref="0x4103f1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4103f2b0"/>
        <function-ref name="getControlB" scoped="" ref="0x4103f390"/>
        <function-ref name="setControlA" scoped="" ref="0x4103f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4100dd80" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4100dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4100a258"/>
        <function-ref name="fired" scoped="" ref="0x4100ba00"/>
        <function-ref name="startAt" scoped="" ref="0x4100bef0"/>
        <function-ref name="isRunning" scoped="" ref="0x4100bc78"/>
        <function-ref name="getAlarm" scoped="" ref="0x4100a4d0"/>
        <function-ref name="start" scoped="" ref="0x4100b4e8"/>
        <function-ref name="stop" scoped="" ref="0x4100b788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4100d948" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4100d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4100db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4100a800" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4100a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41008010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41008500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41008288"/>
        <function-ref name="overflow" scoped="" ref="0x41008778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4103c090" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4103c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4103c268"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4103c348"/>
        <function-ref name="controlABusy" scoped="" ref="0x4103c428"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4103c508"/>
        <function-ref name="countBusy" scoped="" ref="0x4103c5e8"/>
        <function-ref name="compareABusy" scoped="" ref="0x4103c6c8"/>
        <function-ref name="getAssr" scoped="" ref="0x4103c7a8"/>
        <function-ref name="setAssr" scoped="" ref="0x4103c888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x4103f660" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4103f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4103dbb8"/>
        <function-ref name="fired" scoped="" ref="0x4103d1d8"/>
        <function-ref name="get" scoped="" ref="0x4103fca8"/>
        <function-ref name="reset" scoped="" ref="0x4103d450"/>
        <function-ref name="isOn" scoped="" ref="0x4103de30"/>
        <function-ref name="set" scoped="" ref="0x4103ff20"/>
        <function-ref name="start" scoped="" ref="0x4103d6c8"/>
        <function-ref name="stop" scoped="" ref="0x4103d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41008a68" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41008a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41040500"/>
        <function-ref name="test" scoped="" ref="0x41040010"/>
        <function-ref name="get" scoped="" ref="0x410070d8"/>
        <function-ref name="setScale" scoped="" ref="0x41040778"/>
        <function-ref name="getScale" scoped="" ref="0x41040a18"/>
        <function-ref name="reset" scoped="" ref="0x41007868"/>
        <function-ref name="overflow" scoped="" ref="0x410075f0"/>
        <function-ref name="isOn" scoped="" ref="0x41040288"/>
        <function-ref name="set" scoped="" ref="0x41007350"/>
        <function-ref name="start" scoped="" ref="0x41007ae0"/>
        <function-ref name="stop" scoped="" ref="0x41007d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40840c80" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40840c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40840e58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4083f010"/>
        <function-ref name="getControlA" scoped="" ref="0x4083f0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4083f1d0"/>
        <function-ref name="setControlB" scoped="" ref="0x4083f2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4083f390"/>
        <function-ref name="getControlB" scoped="" ref="0x4083f470"/>
        <function-ref name="setControlA" scoped="" ref="0x4083f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4083c3c0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4083c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4083c598"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4083c678"/>
        <function-ref name="controlABusy" scoped="" ref="0x4083c758"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4083c838"/>
        <function-ref name="countBusy" scoped="" ref="0x4083c918"/>
        <function-ref name="compareABusy" scoped="" ref="0x4083c9f8"/>
        <function-ref name="getAssr" scoped="" ref="0x4083cad8"/>
        <function-ref name="setAssr" scoped="" ref="0x4083cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4083f878" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4083f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4083ddd0"/>
        <function-ref name="fired" scoped="" ref="0x4083d3f0"/>
        <function-ref name="get" scoped="" ref="0x4083fec0"/>
        <function-ref name="reset" scoped="" ref="0x4083d668"/>
        <function-ref name="isOn" scoped="" ref="0x4083c068"/>
        <function-ref name="set" scoped="" ref="0x4083d150"/>
        <function-ref name="start" scoped="" ref="0x4083d8e0"/>
        <function-ref name="stop" scoped="" ref="0x4083db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40829980" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40829980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40840418"/>
        <function-ref name="test" scoped="" ref="0x40826f08"/>
        <function-ref name="get" scoped="" ref="0x40826010"/>
        <function-ref name="setScale" scoped="" ref="0x40840690"/>
        <function-ref name="getScale" scoped="" ref="0x40840930"/>
        <function-ref name="reset" scoped="" ref="0x408267a0"/>
        <function-ref name="overflow" scoped="" ref="0x40826528"/>
        <function-ref name="isOn" scoped="" ref="0x408401a0"/>
        <function-ref name="set" scoped="" ref="0x40826288"/>
        <function-ref name="start" scoped="" ref="0x40826a18"/>
        <function-ref name="stop" scoped="" ref="0x40826c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40837bb8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40837bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40837d90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40837e70"/>
        <function-ref name="getControlA" scoped="" ref="0x40835010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408350f0"/>
        <function-ref name="setControlB" scoped="" ref="0x408351d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408352b0"/>
        <function-ref name="getControlB" scoped="" ref="0x40835390"/>
        <function-ref name="setControlA" scoped="" ref="0x40835470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x408332c8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x408332c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x408334a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40833728" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40833728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40833900"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x408339e0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40833ac0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40833ba0"/>
        <function-ref name="countBusy" scoped="" ref="0x40833c80"/>
        <function-ref name="compareABusy" scoped="" ref="0x40833d60"/>
        <function-ref name="getAssr" scoped="" ref="0x40833e40"/>
        <function-ref name="setAssr" scoped="" ref="0x40833f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40835798" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40835798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40834ce8"/>
        <function-ref name="fired" scoped="" ref="0x40834308"/>
        <function-ref name="get" scoped="" ref="0x40835de0"/>
        <function-ref name="reset" scoped="" ref="0x40834580"/>
        <function-ref name="isOn" scoped="" ref="0x40833010"/>
        <function-ref name="set" scoped="" ref="0x40834068"/>
        <function-ref name="start" scoped="" ref="0x408347f8"/>
        <function-ref name="stop" scoped="" ref="0x40834a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4083b8e0" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4083b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40837350"/>
        <function-ref name="test" scoped="" ref="0x40838e30"/>
        <function-ref name="get" scoped="" ref="0x4083bf28"/>
        <function-ref name="setScale" scoped="" ref="0x408375c8"/>
        <function-ref name="getScale" scoped="" ref="0x40837868"/>
        <function-ref name="reset" scoped="" ref="0x408386c8"/>
        <function-ref name="overflow" scoped="" ref="0x40838450"/>
        <function-ref name="isOn" scoped="" ref="0x408370d8"/>
        <function-ref name="set" scoped="" ref="0x408381b0"/>
        <function-ref name="start" scoped="" ref="0x40838940"/>
        <function-ref name="stop" scoped="" ref="0x40838bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4088b9a8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4088b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4088bb80"/>
        <function-ref name="runTask" scoped="" ref="0x4088bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4088c010" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4088c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4088b4e0"/>
        <function-ref name="fired" scoped="" ref="0x4088cc78"/>
        <function-ref name="startAt" scoped="" ref="0x4088b1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4088cef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4088b758"/>
        <function-ref name="start" scoped="" ref="0x4088c760"/>
        <function-ref name="stop" scoped="" ref="0x4088ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407dec60" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407dec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4088e790"/>
        <function-ref name="fired" scoped="" ref="0x4086ca20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4088e150"/>
        <function-ref name="isOneShot" scoped="" ref="0x4086ced0"/>
        <function-ref name="getdt" scoped="" ref="0x4088ec40"/>
        <function-ref name="gett0" scoped="" ref="0x4088e9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x4086cc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4086c2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4088e470"/>
        <function-ref name="startOneShot" scoped="" ref="0x4086c548"/>
        <function-ref name="stop" scoped="" ref="0x4086c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x408b2050" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x408b2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408b2228"/>
        <function-ref name="runTask" scoped="" ref="0x408b2308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x408b7e30" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x408b7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b4920"/>
        <function-ref name="fired" scoped="" ref="0x408b5bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b42e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x408b4088"/>
        <function-ref name="getdt" scoped="" ref="0x408b4dd0"/>
        <function-ref name="gett0" scoped="" ref="0x408b4b78"/>
        <function-ref name="isRunning" scoped="" ref="0x408b5e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408b5468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408b4600"/>
        <function-ref name="startOneShot" scoped="" ref="0x408b56e8"/>
        <function-ref name="stop" scoped="" ref="0x408b5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40888a60" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40888a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b7670"/>
        <function-ref name="fired" scoped="" ref="0x408b8840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b7010"/>
        <function-ref name="isOneShot" scoped="" ref="0x408b8d10"/>
        <function-ref name="getdt" scoped="" ref="0x408b7b40"/>
        <function-ref name="gett0" scoped="" ref="0x408b78d8"/>
        <function-ref name="isRunning" scoped="" ref="0x408b8aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408b80b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408b7340"/>
        <function-ref name="startOneShot" scoped="" ref="0x408b8348"/>
        <function-ref name="stop" scoped="" ref="0x408b85d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408b1460" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408b1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x408b1df8" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408b1df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ce570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408cea60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ce7e8"/>
        <function-ref name="overflow" scoped="" ref="0x408cecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408db2c0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408db2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408db498"/>
        <function-ref name="stopDone" scoped="" ref="0x408db578"/>
        <function-ref name="start" scoped="" ref="0x408db658"/>
        <function-ref name="stop" scoped="" ref="0x408db738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408cf4c0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408cf4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cf698"/>
        <function-ref name="cancel" scoped="" ref="0x408cf778"/>
        <function-ref name="sendDone" scoped="" ref="0x408cf858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408cf9b8" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408cf9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408db898" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408db898"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408dba70"/>
        <function-ref name="cancel" scoped="" ref="0x408dbb50"/>
        <function-ref name="sendDone" scoped="" ref="0x408dbc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408d4150" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408d4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d4328"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d4408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d44e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d45c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408d46a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d4788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408d48c8" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408d48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408d4aa0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408d4b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408d4c60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408d4d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408d4ed0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408d4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408cf0c0"/>
        <function-ref name="stopDone" scoped="" ref="0x408cf1a0"/>
        <function-ref name="start" scoped="" ref="0x408cf280"/>
        <function-ref name="stop" scoped="" ref="0x408cf360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408dbd90" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408dbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408cfcf0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408cfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408cfec8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408eb010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408eb0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408eb1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x408eb2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408eb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41042060" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41042060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41042238"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41042318"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x410423f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x410424d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408e7778" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e7950"/>
        <function-ref name="stopDone" scoped="" ref="0x408e7a30"/>
        <function-ref name="start" scoped="" ref="0x408e7b10"/>
        <function-ref name="stop" scoped="" ref="0x408e7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40924a78" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40924a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40924c50"/>
        <function-ref name="turnOn" scoped="" ref="0x40924d30"/>
        <function-ref name="setChannel" scoped="" ref="0x40924e10"/>
        <function-ref name="done" scoped="" ref="0x40924ef0"/>
        <function-ref name="standby" scoped="" ref="0x40923010"/>
        <function-ref name="getChannel" scoped="" ref="0x409230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408e7d50" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408e7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e7f28"/>
        <function-ref name="cancel" scoped="" ref="0x40924018"/>
        <function-ref name="sendDone" scoped="" ref="0x409240f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40923708" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40923708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409238e0"/>
        <function-ref name="header" scoped="" ref="0x409239c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40924258" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40924258"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40924430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40923230" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40923230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40923408"/>
        <function-ref name="ready" scoped="" ref="0x409234e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409235c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40924570" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40924570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40924748"/>
        <function-ref name="setChannel" scoped="" ref="0x40924828"/>
        <function-ref name="getChannel" scoped="" ref="0x40924908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4107a3b0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4107a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4107a588"/>
        <function-ref name="stopDone" scoped="" ref="0x4107a668"/>
        <function-ref name="start" scoped="" ref="0x4107a748"/>
        <function-ref name="stop" scoped="" ref="0x4107a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4107a988" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4107a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4107ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41079a70" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41079a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41079c48"/>
        <function-ref name="turnOn" scoped="" ref="0x41079d28"/>
        <function-ref name="setChannel" scoped="" ref="0x41079e08"/>
        <function-ref name="done" scoped="" ref="0x41079ee8"/>
        <function-ref name="standby" scoped="" ref="0x41078010"/>
        <function-ref name="getChannel" scoped="" ref="0x410780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4107acc0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4107acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4107ae98"/>
        <function-ref name="cancel" scoped="" ref="0x41079010"/>
        <function-ref name="sendDone" scoped="" ref="0x410790f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410765c8" loc="189:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410765c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410767a0"/>
        <function-ref name="runTask" scoped="" ref="0x41076880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41078cc0" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41078cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41078e98"/>
        <function-ref name="header" scoped="" ref="0x41076010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41076a00" loc="144:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41076a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41076bd8"/>
        <function-ref name="runTask" scoped="" ref="0x41076cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41079250" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41079250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41079428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41076190" loc="322:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41076190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41076368"/>
        <function-ref name="runTask" scoped="" ref="0x41076448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x410787e8" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x410787e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410789c0"/>
        <function-ref name="ready" scoped="" ref="0x41078aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x41078b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41079568" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41079568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41079740"/>
        <function-ref name="setChannel" scoped="" ref="0x41079820"/>
        <function-ref name="getChannel" scoped="" ref="0x41079900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41078230" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41078230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41078408"/>
        <function-ref name="suspend" scoped="" ref="0x410784e8"/>
        <function-ref name="resume" scoped="" ref="0x410785c8"/>
        <function-ref name="run" scoped="" ref="0x410786a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4091f930" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4091f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091fb08"/>
        <function-ref name="ready" scoped="" ref="0x4091fbe8"/>
        <function-ref name="sendDone" scoped="" ref="0x4091fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4091fe28" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4091fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093b050"/>
        <function-ref name="header" scoped="" ref="0x4093b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4093b270" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4093b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4093b448"/>
        <function-ref name="wait" scoped="" ref="0x4093b528"/>
        <function-ref name="cancel" scoped="" ref="0x4093b608"/>
        <function-ref name="isFree" scoped="" ref="0x4093b6e8"/>
        <function-ref name="getNow" scoped="" ref="0x4093b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4093b928" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4093b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4093bb00"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4093bbe0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4093bcc0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4093bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4091f4e8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4091f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4091f6c0"/>
        <function-ref name="header" scoped="" ref="0x4091f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4091f010" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4091f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091f1e8"/>
        <function-ref name="ready" scoped="" ref="0x4091f2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4091f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41094ea0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41094ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410930c0"/>
        <function-ref name="ready" scoped="" ref="0x410931a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41093280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410933e0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410935b8"/>
        <function-ref name="header" scoped="" ref="0x41093698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x410937d8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410937d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410939b0"/>
        <function-ref name="wait" scoped="" ref="0x41093a90"/>
        <function-ref name="cancel" scoped="" ref="0x41093b70"/>
        <function-ref name="isFree" scoped="" ref="0x41093c50"/>
        <function-ref name="getNow" scoped="" ref="0x41093d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41093e70" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41093e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41092070"/>
        <function-ref name="rand32" scoped="" ref="0x41092150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x410922b0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x410922b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41092488"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x41092568"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x41092648"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x41092728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41094a58" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41094a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41094c30"/>
        <function-ref name="header" scoped="" ref="0x41094d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x41094580" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41094580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41094758"/>
        <function-ref name="ready" scoped="" ref="0x41094838"/>
        <function-ref name="sendDone" scoped="" ref="0x41094918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x410928a8" loc="78:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x410928a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41092a80"/>
        <function-ref name="runTask" scoped="" ref="0x41092b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4093a478" loc="46:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4093a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4093a650"/>
        <function-ref name="rand32" scoped="" ref="0x4093a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40938b58" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40938b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4093d918" loc="44:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4093d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40955ef8" loc="48:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40955ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409540e0"/>
        <function-ref name="rand32" scoped="" ref="0x409541c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40955638" loc="47:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40955638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40955c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40955118" loc="46:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40955118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409552f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4094ab50" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4094ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094ad28"/>
        <function-ref name="ready" scoped="" ref="0x4094ae08"/>
        <function-ref name="sendDone" scoped="" ref="0x4094aee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40970060" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40970060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40970238"/>
        <function-ref name="header" scoped="" ref="0x40970318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40970458" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40970458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40970630"/>
        <function-ref name="wait" scoped="" ref="0x40970710"/>
        <function-ref name="cancel" scoped="" ref="0x409707f0"/>
        <function-ref name="isFree" scoped="" ref="0x409708d0"/>
        <function-ref name="getNow" scoped="" ref="0x409709b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x4096f4f0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x4096f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096f6c8"/>
        <function-ref name="get" scoped="" ref="0x4096f7a8"/>
        <function-ref name="setValue" scoped="" ref="0x4096f888"/>
        <function-ref name="set" scoped="" ref="0x4096f968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40970b10" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40970b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40970ce8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40970dc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40970ea8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4096f010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4096f0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4096f1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4096f2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4096f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4094a230" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4094a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4094a408"/>
        <function-ref name="header" scoped="" ref="0x4094a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4094bcf8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4094bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094bed0"/>
        <function-ref name="ready" scoped="" ref="0x4094a010"/>
        <function-ref name="sendDone" scoped="" ref="0x4094a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4094a628" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4094a628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4094a800"/>
        <function-ref name="noAck" scoped="" ref="0x4094a8e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4094a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4096a8a0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4096a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4096aa78"/>
        <function-ref name="stopDone" scoped="" ref="0x4096ab58"/>
        <function-ref name="start" scoped="" ref="0x4096ac38"/>
        <function-ref name="stop" scoped="" ref="0x4096ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4097f708" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4097f708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4097f8e0"/>
        <function-ref name="request" scoped="" ref="0x4097f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4097dcc8" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4097dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097dea0"/>
        <function-ref name="ready" scoped="" ref="0x4097b010"/>
        <function-ref name="sendDone" scoped="" ref="0x4097b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4097b250" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4097b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097b428"/>
        <function-ref name="header" scoped="" ref="0x4097b508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40980668" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40980668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40980840"/>
        <function-ref name="turnOn" scoped="" ref="0x40980920"/>
        <function-ref name="setChannel" scoped="" ref="0x40980a00"/>
        <function-ref name="done" scoped="" ref="0x40980ae0"/>
        <function-ref name="standby" scoped="" ref="0x40980bc0"/>
        <function-ref name="getChannel" scoped="" ref="0x40980ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4097fb00" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4097fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4097fcd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4097fdb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097fe98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4097e010"/>
        <function-ref name="headerLength" scoped="" ref="0x4097e0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4097e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4097d4b0" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4097d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4097d708"/>
        <function-ref name="turnOn" scoped="" ref="0x4097d7e8"/>
        <function-ref name="setChannel" scoped="" ref="0x4097d8c8"/>
        <function-ref name="done" scoped="" ref="0x4097d9a8"/>
        <function-ref name="standby" scoped="" ref="0x4097da88"/>
        <function-ref name="getChannel" scoped="" ref="0x4097db68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x4097e330" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x4097e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4097e508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4097f310" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4097f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097f4e8"/>
        <function-ref name="header" scoped="" ref="0x4097f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x4097d178" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x4097d178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4097e698" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4097e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4097e870"/>
        <function-ref name="stopDone" scoped="" ref="0x4097e950"/>
        <function-ref name="start" scoped="" ref="0x4097ea30"/>
        <function-ref name="stop" scoped="" ref="0x4097eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4097ba80" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4097ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4097bc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x4097bd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097be18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4097bef8"/>
        <function-ref name="headerLength" scoped="" ref="0x4097a010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4097a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40980350" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40980350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40980528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097a250" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4097a428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x4097ec70" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x4097ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097ee48"/>
        <function-ref name="cancel" scoped="" ref="0x4097ef28"/>
        <function-ref name="sendDone" scoped="" ref="0x4097d018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40980de0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40980de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097f010"/>
        <function-ref name="ready" scoped="" ref="0x4097f0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4097f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x4097b668" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x4097b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4097b840"/>
        <function-ref name="request" scoped="" ref="0x4097b920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4096ae58" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4096ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40980050"/>
        <function-ref name="cancel" scoped="" ref="0x40980130"/>
        <function-ref name="sendDone" scoped="" ref="0x40980210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409c3098" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409c3098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c3270"/>
        <function-ref name="get" scoped="" ref="0x409c3350"/>
        <function-ref name="setValue" scoped="" ref="0x409c3430"/>
        <function-ref name="set" scoped="" ref="0x409c3510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c67f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c69c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c6aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c6b88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c6c68"/>
        <function-ref name="headerLength" scoped="" ref="0x409c6d48"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c6e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c48f0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c4ac8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c4ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c4c88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c4d68"/>
        <function-ref name="headerLength" scoped="" ref="0x409c4e48"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c4f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409c7180" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409c7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409c7c80"/>
        <function-ref name="clear" scoped="" ref="0x409c6048"/>
        <function-ref name="isValid" scoped="" ref="0x409c78d0"/>
        <function-ref name="set" scoped="" ref="0x409c63f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409c4078" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409c4078"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40996998" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40996998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409a94d0"/>
        <function-ref name="clear" scoped="" ref="0x409a9880"/>
        <function-ref name="isValid" scoped="" ref="0x409a9120"/>
        <function-ref name="set" scoped="" ref="0x409a9c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x410a1010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x410a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a11e8"/>
        <function-ref name="get" scoped="" ref="0x410a12c8"/>
        <function-ref name="setValue" scoped="" ref="0x410a13a8"/>
        <function-ref name="set" scoped="" ref="0x410a1488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x410a37b8" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x410a37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a3990"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a3a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a3b50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a3c30"/>
        <function-ref name="headerLength" scoped="" ref="0x410a3d10"/>
        <function-ref name="metadataLength" scoped="" ref="0x410a3df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x410a0888" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x410a0888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a0a60"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a0b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a0c20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a0d00"/>
        <function-ref name="headerLength" scoped="" ref="0x410a0de0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410a0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x410a40c0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x410a40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x410a4bc0"/>
        <function-ref name="clear" scoped="" ref="0x410a3010"/>
        <function-ref name="isValid" scoped="" ref="0x410a4810"/>
        <function-ref name="set" scoped="" ref="0x410a33c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x410a1678" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x410a1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410a1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x410a0010" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x410a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410a0658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x410a98c0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x410a98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x410a53f8"/>
        <function-ref name="clear" scoped="" ref="0x410a57a8"/>
        <function-ref name="isValid" scoped="" ref="0x410a5048"/>
        <function-ref name="set" scoped="" ref="0x410a5b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409ab5e0" loc="20:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409ab5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409abc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c03f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c05c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c06a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c0788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c0868"/>
        <function-ref name="headerLength" scoped="" ref="0x409c0948"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c0a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c0bb8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c0d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c0e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409bf010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409bf0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409bf1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409cfdb8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409cfdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c0010"/>
        <function-ref name="get" scoped="" ref="0x409c00f0"/>
        <function-ref name="setValue" scoped="" ref="0x409c01d0"/>
        <function-ref name="set" scoped="" ref="0x409c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409ce548" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409ce548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409ce720"/>
        <function-ref name="stopDone" scoped="" ref="0x409ce800"/>
        <function-ref name="start" scoped="" ref="0x409ce8e0"/>
        <function-ref name="stop" scoped="" ref="0x409ce9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409cc408" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409cc408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409cc5e0"/>
        <function-ref name="request" scoped="" ref="0x409cc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c99c8" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c99c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c9ba0"/>
        <function-ref name="ready" scoped="" ref="0x409c9c80"/>
        <function-ref name="sendDone" scoped="" ref="0x409c9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409c9ec0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409c9ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ea0c0"/>
        <function-ref name="header" scoped="" ref="0x409ea1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409cd328" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409cd328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409cd500"/>
        <function-ref name="turnOn" scoped="" ref="0x409cd5e0"/>
        <function-ref name="setChannel" scoped="" ref="0x409cd6c0"/>
        <function-ref name="done" scoped="" ref="0x409cd7a0"/>
        <function-ref name="standby" scoped="" ref="0x409cd880"/>
        <function-ref name="getChannel" scoped="" ref="0x409cd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409cc800" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409cc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409cc9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409ccab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ccb98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409ccc78"/>
        <function-ref name="headerLength" scoped="" ref="0x409ccd58"/>
        <function-ref name="metadataLength" scoped="" ref="0x409cce38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409c91b0" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409c91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c9408"/>
        <function-ref name="turnOn" scoped="" ref="0x409c94e8"/>
        <function-ref name="setChannel" scoped="" ref="0x409c95c8"/>
        <function-ref name="done" scoped="" ref="0x409c96a8"/>
        <function-ref name="standby" scoped="" ref="0x409c9788"/>
        <function-ref name="getChannel" scoped="" ref="0x409c9868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409cb010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409cb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409cc010" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409cc1e8"/>
        <function-ref name="header" scoped="" ref="0x409cc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409cbe48" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409cbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c9050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409cb378" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409cb378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409cb550"/>
        <function-ref name="stopDone" scoped="" ref="0x409cb630"/>
        <function-ref name="start" scoped="" ref="0x409cb710"/>
        <function-ref name="stop" scoped="" ref="0x409cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409ea718" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409ea718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ea8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409ea9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409eaab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409eab90"/>
        <function-ref name="headerLength" scoped="" ref="0x409eac70"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ead50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409cd010" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409cd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409eaeb0" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409eaeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409e90c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409cb950" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409cb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cbb28"/>
        <function-ref name="cancel" scoped="" ref="0x409cbc08"/>
        <function-ref name="sendDone" scoped="" ref="0x409cbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409cdaa0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409cdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cdc78"/>
        <function-ref name="ready" scoped="" ref="0x409cdd58"/>
        <function-ref name="sendDone" scoped="" ref="0x409cde38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409ea300" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409ea300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ea4d8"/>
        <function-ref name="request" scoped="" ref="0x409ea5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409ceb00" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409ceb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cecd8"/>
        <function-ref name="cancel" scoped="" ref="0x409cedb8"/>
        <function-ref name="sendDone" scoped="" ref="0x409cee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409e4a68" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409e4a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409e4c40"/>
        <function-ref name="request" scoped="" ref="0x409e4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409e2bf8" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409e2bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e07f8"/>
        <function-ref name="get" scoped="" ref="0x409e0538"/>
        <function-ref name="isSet" scoped="" ref="0x409e0278"/>
        <function-ref name="set" scoped="" ref="0x409e0ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x409f8a08" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x409f8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f8be0"/>
        <function-ref name="get" scoped="" ref="0x409f8cc0"/>
        <function-ref name="setValue" scoped="" ref="0x409f8da0"/>
        <function-ref name="set" scoped="" ref="0x409f8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409faad8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409faad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409f96b8"/>
        <function-ref name="clear" scoped="" ref="0x409f9a68"/>
        <function-ref name="isValid" scoped="" ref="0x409f9308"/>
        <function-ref name="set" scoped="" ref="0x409f9e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409e78b0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409e78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409e7a88"/>
        <function-ref name="turnOn" scoped="" ref="0x409e7b68"/>
        <function-ref name="setChannel" scoped="" ref="0x409e7c48"/>
        <function-ref name="done" scoped="" ref="0x409e7d28"/>
        <function-ref name="standby" scoped="" ref="0x409e7e08"/>
        <function-ref name="getChannel" scoped="" ref="0x409e7ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409f6700" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409f6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409f68d8"/>
        <function-ref name="wait" scoped="" ref="0x409f69b8"/>
        <function-ref name="cancel" scoped="" ref="0x409f6a98"/>
        <function-ref name="isFree" scoped="" ref="0x409f6b78"/>
        <function-ref name="getNow" scoped="" ref="0x409f6c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409e3888" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409e3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e2470"/>
        <function-ref name="get" scoped="" ref="0x409e21b0"/>
        <function-ref name="isSet" scoped="" ref="0x409e3ed0"/>
        <function-ref name="set" scoped="" ref="0x409e2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409e4ed0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409e4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e30c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409e31a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e3280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409e3360"/>
        <function-ref name="headerLength" scoped="" ref="0x409e3440"/>
        <function-ref name="metadataLength" scoped="" ref="0x409e3520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409fa170" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409fa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fa3c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409fa4a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fa588"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x409fa668"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409fa748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409e4618" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409e4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e47f0"/>
        <function-ref name="header" scoped="" ref="0x409e48d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409db618" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409db618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409daaf0"/>
        <function-ref name="fired" scoped="" ref="0x409da2c0"/>
        <function-ref name="startAt" scoped="" ref="0x409da7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x409da538"/>
        <function-ref name="getAlarm" scoped="" ref="0x409dad68"/>
        <function-ref name="start" scoped="" ref="0x409dbd68"/>
        <function-ref name="stop" scoped="" ref="0x409da048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409df010" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409dfbd8"/>
        <function-ref name="get" scoped="" ref="0x409df918"/>
        <function-ref name="isSet" scoped="" ref="0x409df658"/>
        <function-ref name="set" scoped="" ref="0x409dfe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x409dcb78" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409dcb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409db200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409e40c0" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409e40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e4298"/>
        <function-ref name="ready" scoped="" ref="0x409e4378"/>
        <function-ref name="sendDone" scoped="" ref="0x409e4458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x409dd3d8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409dd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409dc010"/>
        <function-ref name="get" scoped="" ref="0x409ddce0"/>
        <function-ref name="isSet" scoped="" ref="0x409dda20"/>
        <function-ref name="set" scoped="" ref="0x409dc2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x409f60e0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x409f60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f62b8"/>
        <function-ref name="get" scoped="" ref="0x409f6398"/>
        <function-ref name="setValue" scoped="" ref="0x409f6478"/>
        <function-ref name="set" scoped="" ref="0x409f6558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x409f8370" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409f8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f8548"/>
        <function-ref name="get" scoped="" ref="0x409f8628"/>
        <function-ref name="setValue" scoped="" ref="0x409f8708"/>
        <function-ref name="set" scoped="" ref="0x409f87e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409dc680" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409dc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409dc858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409f0628" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409f0628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409f0800"/>
        <function-ref name="request" scoped="" ref="0x409f08e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409fe300" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409fe300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409fea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409ee7d0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409ee7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ec3b8"/>
        <function-ref name="get" scoped="" ref="0x409ec0f8"/>
        <function-ref name="isSet" scoped="" ref="0x409eee18"/>
        <function-ref name="set" scoped="" ref="0x409ec678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x409fd5b0" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x409fd5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fd788"/>
        <function-ref name="get" scoped="" ref="0x409fd868"/>
        <function-ref name="setValue" scoped="" ref="0x409fd948"/>
        <function-ref name="set" scoped="" ref="0x409fda28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x409f1118" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x409f1118"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f12f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409fc488" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409fc488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a1d0a8"/>
        <function-ref name="clear" scoped="" ref="0x40a1d458"/>
        <function-ref name="isValid" scoped="" ref="0x409fccd8"/>
        <function-ref name="set" scoped="" ref="0x40a1d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a08820" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a08820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a089f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a08ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40a08bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a08c98"/>
        <function-ref name="get" scoped="" ref="0x40a08d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a08e58"/>
        <function-ref name="set" scoped="" ref="0x40a07010"/>
        <function-ref name="clr" scoped="" ref="0x40a070f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a1c298" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a1c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a1c470"/>
        <function-ref name="wait" scoped="" ref="0x40a1c550"/>
        <function-ref name="cancel" scoped="" ref="0x40a1c630"/>
        <function-ref name="isFree" scoped="" ref="0x40a1c710"/>
        <function-ref name="getNow" scoped="" ref="0x40a1c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409f1498" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409f1498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409f1670"/>
        <function-ref name="turnOn" scoped="" ref="0x409f1750"/>
        <function-ref name="setChannel" scoped="" ref="0x409f1830"/>
        <function-ref name="done" scoped="" ref="0x409f1910"/>
        <function-ref name="standby" scoped="" ref="0x409f19f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409f1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409fedb8" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409fedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ff410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409ef458" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409ef458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ee048"/>
        <function-ref name="get" scoped="" ref="0x409efd60"/>
        <function-ref name="isSet" scoped="" ref="0x409efaa0"/>
        <function-ref name="set" scoped="" ref="0x409ee308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409f0a90" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409f0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f0c68"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f0d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f0e28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f0f08"/>
        <function-ref name="headerLength" scoped="" ref="0x409ef010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a04da0" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a04da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a08010"/>
        <function-ref name="isInput" scoped="" ref="0x40a080f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a081d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a082b0"/>
        <function-ref name="get" scoped="" ref="0x40a08390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a08470"/>
        <function-ref name="set" scoped="" ref="0x40a08550"/>
        <function-ref name="clr" scoped="" ref="0x40a08630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409ff730" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409ff730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ff908"/>
        <function-ref name="headerLength" scoped="" ref="0x409ff9e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ffac8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x409ffba8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409ffc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409f01d8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409f01d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f03b0"/>
        <function-ref name="header" scoped="" ref="0x409f0490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a56dd0" loc="847:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a56dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a54010"/>
        <function-ref name="runTask" scoped="" ref="0x40a540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409ecba8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ecba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eb790"/>
        <function-ref name="get" scoped="" ref="0x409eb4d0"/>
        <function-ref name="isSet" scoped="" ref="0x409eb210"/>
        <function-ref name="set" scoped="" ref="0x409eba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409f2aa0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409f2aa0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f2c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a09148" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a09148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a09320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a09400"/>
        <function-ref name="request" scoped="" ref="0x40a094e0"/>
        <function-ref name="granted" scoped="" ref="0x40a095c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a096a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a0a690" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a0a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a0a8e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a0a9c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a0aaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a0ab88"/>
        <function-ref name="get" scoped="" ref="0x40a0ac68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a0ad48"/>
        <function-ref name="set" scoped="" ref="0x40a0ae28"/>
        <function-ref name="clr" scoped="" ref="0x40a0af08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a0b010" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0bbd8"/>
        <function-ref name="get" scoped="" ref="0x40a0b918"/>
        <function-ref name="isSet" scoped="" ref="0x40a0b658"/>
        <function-ref name="set" scoped="" ref="0x40a0be98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409f1c70" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409f1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f1e48"/>
        <function-ref name="ready" scoped="" ref="0x409f1f28"/>
        <function-ref name="sendDone" scoped="" ref="0x409f0018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a009e0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a009e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a00bb8"/>
        <function-ref name="disable" scoped="" ref="0x40a00c98"/>
        <function-ref name="captured" scoped="" ref="0x40a00d78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a00e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a04728" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a04728"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a04900"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a049e0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a04ac0"/>
        <function-ref name="write" scoped="" ref="0x40a04ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x409fdc70" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x409fdc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fde48"/>
        <function-ref name="get" scoped="" ref="0x409fdf28"/>
        <function-ref name="setValue" scoped="" ref="0x409fc018"/>
        <function-ref name="set" scoped="" ref="0x409fc0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x409fff00" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409fff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fd0f0"/>
        <function-ref name="get" scoped="" ref="0x409fd1d0"/>
        <function-ref name="setValue" scoped="" ref="0x409fd2b0"/>
        <function-ref name="set" scoped="" ref="0x409fd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a0a278" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a0a450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a1dc48" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a1dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a1de20"/>
        <function-ref name="suspend" scoped="" ref="0x40a1df00"/>
        <function-ref name="resume" scoped="" ref="0x40a1c010"/>
        <function-ref name="run" scoped="" ref="0x40a1c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a99090" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a99090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a99268"/>
        <function-ref name="isInput" scoped="" ref="0x40a99348"/>
        <function-ref name="toggle" scoped="" ref="0x40a99428"/>
        <function-ref name="isOutput" scoped="" ref="0x40a99508"/>
        <function-ref name="get" scoped="" ref="0x40a995e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a996c8"/>
        <function-ref name="set" scoped="" ref="0x40a997a8"/>
        <function-ref name="clr" scoped="" ref="0x40a99888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a9a688" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a9a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9a860"/>
        <function-ref name="isInput" scoped="" ref="0x40a9a940"/>
        <function-ref name="toggle" scoped="" ref="0x40a9aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9ab00"/>
        <function-ref name="get" scoped="" ref="0x40a9abe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9acc0"/>
        <function-ref name="set" scoped="" ref="0x40a9ada0"/>
        <function-ref name="clr" scoped="" ref="0x40a9ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a982a8" loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a982a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a97758"/>
        <function-ref name="fired" scoped="" ref="0x40a98f10"/>
        <function-ref name="startAt" scoped="" ref="0x40a97418"/>
        <function-ref name="isRunning" scoped="" ref="0x40a971a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a979d0"/>
        <function-ref name="start" scoped="" ref="0x40a989f8"/>
        <function-ref name="stop" scoped="" ref="0x40a98c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a78858" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a78858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a78a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a78b10"/>
        <function-ref name="request" scoped="" ref="0x40a78bf0"/>
        <function-ref name="granted" scoped="" ref="0x40a78cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a78db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40a7bd98" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a7bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a78010"/>
        <function-ref name="isInput" scoped="" ref="0x40a780f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a781d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a782b0"/>
        <function-ref name="get" scoped="" ref="0x40a78390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a78470"/>
        <function-ref name="set" scoped="" ref="0x40a78550"/>
        <function-ref name="clr" scoped="" ref="0x40a78630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a99a78" loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a99a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a99c50"/>
        <function-ref name="disable" scoped="" ref="0x40a99d30"/>
        <function-ref name="captured" scoped="" ref="0x40a99e10"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a99ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a9a010" loc="43:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a9a1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a9a2c8"/>
        <function-ref name="splitRead" scoped="" ref="0x40a9a3a8"/>
        <function-ref name="write" scoped="" ref="0x40a9a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a97dc0" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a97dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a96428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a8c810" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a8c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8c9e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a8cac8"/>
        <function-ref name="toggle" scoped="" ref="0x40a8cba8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8cc88"/>
        <function-ref name="get" scoped="" ref="0x40a8cd68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8ce48"/>
        <function-ref name="set" scoped="" ref="0x40a8cf28"/>
        <function-ref name="clr" scoped="" ref="0x40a8b018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a8d998" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a8d998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a8c500"/>
        <function-ref name="test" scoped="" ref="0x40a8c010"/>
        <function-ref name="get" scoped="" ref="0x40a92010"/>
        <function-ref name="captured" scoped="" ref="0x40a92528"/>
        <function-ref name="reset" scoped="" ref="0x40a927c8"/>
        <function-ref name="isOn" scoped="" ref="0x40a8c288"/>
        <function-ref name="set" scoped="" ref="0x40a92288"/>
        <function-ref name="start" scoped="" ref="0x40a92a40"/>
        <function-ref name="stop" scoped="" ref="0x40a92cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a8b220" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a8b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8b3f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a8b4d8"/>
        <function-ref name="toggle" scoped="" ref="0x40a8b5b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8b698"/>
        <function-ref name="get" scoped="" ref="0x40a8b778"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8b858"/>
        <function-ref name="set" scoped="" ref="0x40a8b938"/>
        <function-ref name="clr" scoped="" ref="0x40a8ba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a93300" loc="40:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a93300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a934d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a96bb0" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a96bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a96d88"/>
        <function-ref name="disable" scoped="" ref="0x40a96e68"/>
        <function-ref name="captured" scoped="" ref="0x40a93010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a930f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a9f800" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a9f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a9f9d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a9fab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40aa7df0" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aa7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aa6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aa7178" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aa7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aa7350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aa61e0" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aa61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aa63b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aa6498"/>
        <function-ref name="splitRead" scoped="" ref="0x40aa6578"/>
        <function-ref name="write" scoped="" ref="0x40aa6658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aa4010" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aa4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa41e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa42c8"/>
        <function-ref name="request" scoped="" ref="0x40aa43a8"/>
        <function-ref name="granted" scoped="" ref="0x40aa4488"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40ac11e0" loc="241:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40ac11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ac13b8"/>
        <function-ref name="runTask" scoped="" ref="0x40ac1498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a9de68" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a9de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a9c050"/>
        <function-ref name="sendDone" scoped="" ref="0x40a9c130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40abf3d8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40abf3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40abf5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40abf690"/>
        <function-ref name="request" scoped="" ref="0x40abf770"/>
        <function-ref name="granted" scoped="" ref="0x40abf850"/>
        <function-ref name="isOwner" scoped="" ref="0x40abf930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a9d4c8" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a9d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a9d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a9d168" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a9d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a9d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ab0780" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ab0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ab0958"/>
        <function-ref name="sleep" scoped="" ref="0x40a9bdb0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ab0b18"/>
        <function-ref name="dataReady" scoped="" ref="0x40a9be90"/>
        <function-ref name="initMaster" scoped="" ref="0x40ab0cd8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ab0db8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ab0e98"/>
        <function-ref name="read" scoped="" ref="0x40a9b010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a9b0f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a9b1d0"/>
        <function-ref name="setClock" scoped="" ref="0x40a9b2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a9b390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a9b470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a9b5d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a9b6b0"/>
        <function-ref name="write" scoped="" ref="0x40a9b790"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a9b870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a9b950"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a9ba30"/>
        <function-ref name="getClock" scoped="" ref="0x40a9bb10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a9bbf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ab0a38"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ab0bf8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a9bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a9d850" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a9d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a9da28"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a9db08"/>
        <function-ref name="splitRead" scoped="" ref="0x40a9dbe8"/>
        <function-ref name="write" scoped="" ref="0x40a9dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a9c5a8" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a9c5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a9c780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a9c860"/>
        <function-ref name="request" scoped="" ref="0x40a9c940"/>
        <function-ref name="granted" scoped="" ref="0x40a9ca20"/>
        <function-ref name="isOwner" scoped="" ref="0x40a9cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40abfae0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40abfae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40abfcb8"/>
        <function-ref name="userId" scoped="" ref="0x40abfd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40aaf010" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40aaf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aaf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a9ee50" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40af4050"/>
        <function-ref name="sleep" scoped="" ref="0x40af3470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40af4210"/>
        <function-ref name="dataReady" scoped="" ref="0x40af3550"/>
        <function-ref name="initMaster" scoped="" ref="0x40af43d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40af44b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40af4590"/>
        <function-ref name="read" scoped="" ref="0x40af4670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40af4750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40af4830"/>
        <function-ref name="setClock" scoped="" ref="0x40af4910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40af49f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40af4ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40af4c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40af4d10"/>
        <function-ref name="write" scoped="" ref="0x40af4df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40af4ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40af3010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40af30f0"/>
        <function-ref name="getClock" scoped="" ref="0x40af31d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40af32b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40af4130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40af42f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40af3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40aede88" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40aede88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aeb070"/>
        <function-ref name="isInput" scoped="" ref="0x40aeb150"/>
        <function-ref name="toggle" scoped="" ref="0x40aeb230"/>
        <function-ref name="isOutput" scoped="" ref="0x40aeb310"/>
        <function-ref name="get" scoped="" ref="0x40aeb3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aeb4d0"/>
        <function-ref name="set" scoped="" ref="0x40aeb5b0"/>
        <function-ref name="clr" scoped="" ref="0x40aeb690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40aee9e8" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40aee9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aeebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40aeeca0"/>
        <function-ref name="toggle" scoped="" ref="0x40aeed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40aeee60"/>
        <function-ref name="get" scoped="" ref="0x40aed010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aed0f0"/>
        <function-ref name="set" scoped="" ref="0x40aed1d0"/>
        <function-ref name="clr" scoped="" ref="0x40aed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40aee010" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40aee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aee1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40aee2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40aee3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40aee488"/>
        <function-ref name="get" scoped="" ref="0x40aee568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aee648"/>
        <function-ref name="set" scoped="" ref="0x40aee728"/>
        <function-ref name="clr" scoped="" ref="0x40aee808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40aecac0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40aecac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40aecc98"/>
        <function-ref name="stop" scoped="" ref="0x40aecd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40aeb898" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40aeb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aeba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40af01e8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40af01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40af03c0"/>
        <function-ref name="sleep" scoped="" ref="0x40aef7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40af0580"/>
        <function-ref name="dataReady" scoped="" ref="0x40aef8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40af0740"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40af0820"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40af0900"/>
        <function-ref name="read" scoped="" ref="0x40af09e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40af0ac0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40af0ba0"/>
        <function-ref name="setClock" scoped="" ref="0x40af0c80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40af0d60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40af0e40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40aef010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40aef0f0"/>
        <function-ref name="write" scoped="" ref="0x40aef1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40aef2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40aef390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40aef470"/>
        <function-ref name="getClock" scoped="" ref="0x40aef550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40aef630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40af04a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40af0660"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40aef710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40aed4a0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40aed4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aed678"/>
        <function-ref name="isInput" scoped="" ref="0x40aed758"/>
        <function-ref name="toggle" scoped="" ref="0x40aed838"/>
        <function-ref name="isOutput" scoped="" ref="0x40aed918"/>
        <function-ref name="get" scoped="" ref="0x40aed9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aedad8"/>
        <function-ref name="set" scoped="" ref="0x40aedbb8"/>
        <function-ref name="clr" scoped="" ref="0x40aedc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b102c8" loc="86:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b102c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b104b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b10590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b10b80" loc="89:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b10b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b10d68"/>
        <function-ref name="configure" scoped="" ref="0x40b10e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b11b30" loc="85:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b11b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b11d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b11df8"/>
        <function-ref name="request" scoped="" ref="0x40b11ed8"/>
        <function-ref name="granted" scoped="" ref="0x40b10010"/>
        <function-ref name="isOwner" scoped="" ref="0x40b100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b106d0" loc="87:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b108a8"/>
        <function-ref name="userId" scoped="" ref="0x40b10988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410fd8c8" loc="44:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410fd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410fdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410fdc00" loc="45:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410fdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410fddd8"/>
        <function-ref name="isEmpty" scoped="" ref="0x410fdeb8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410fa010"/>
        <function-ref name="dequeue" scoped="" ref="0x410fa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410f93b0" loc="52:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410f93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410f9598"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410f9678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410f9c78" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410f9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410f9e60"/>
        <function-ref name="configure" scoped="" ref="0x410f8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410f8170" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410f8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410f8348"/>
        <function-ref name="isEmpty" scoped="" ref="0x410f8428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410f8508"/>
        <function-ref name="dequeue" scoped="" ref="0x410f85e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410fac58" loc="51:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410fac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410fae40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410faf20"/>
        <function-ref name="request" scoped="" ref="0x410f9018"/>
        <function-ref name="granted" scoped="" ref="0x410f90f8"/>
        <function-ref name="isOwner" scoped="" ref="0x410f91d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410f97b8" loc="53:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410f97b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410f9990"/>
        <function-ref name="userId" scoped="" ref="0x410f9a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410f8768" loc="69:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410f8768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410f8940"/>
        <function-ref name="runTask" scoped="" ref="0x410f8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b27c40" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b27c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b27e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b27ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x40b2b010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b2b0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b2b1d0"/>
        <function-ref name="setControlB" scoped="" ref="0x40b2b2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b2b390"/>
        <function-ref name="getControlB" scoped="" ref="0x40b2b470"/>
        <function-ref name="setControlC" scoped="" ref="0x40b2b550"/>
        <function-ref name="setControlA" scoped="" ref="0x40b2b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b2b968" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b2b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b25500"/>
        <function-ref name="test" scoped="" ref="0x40b25010"/>
        <function-ref name="get" scoped="" ref="0x40b2a010"/>
        <function-ref name="captured" scoped="" ref="0x40b2a528"/>
        <function-ref name="reset" scoped="" ref="0x40b2a7c8"/>
        <function-ref name="isOn" scoped="" ref="0x40b25288"/>
        <function-ref name="set" scoped="" ref="0x40b2a288"/>
        <function-ref name="start" scoped="" ref="0x40b2aa40"/>
        <function-ref name="stop" scoped="" ref="0x40b2acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b25c10" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b25c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b221a0"/>
        <function-ref name="fired" scoped="" ref="0x40b24790"/>
        <function-ref name="get" scoped="" ref="0x40b24278"/>
        <function-ref name="reset" scoped="" ref="0x40b24a08"/>
        <function-ref name="isOn" scoped="" ref="0x40b22418"/>
        <function-ref name="set" scoped="" ref="0x40b244f0"/>
        <function-ref name="start" scoped="" ref="0x40b24c80"/>
        <function-ref name="stop" scoped="" ref="0x40b24ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b2f230" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b2f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b2eca0"/>
        <function-ref name="test" scoped="" ref="0x40b2e7b0"/>
        <function-ref name="get" scoped="" ref="0x40b2f878"/>
        <function-ref name="setScale" scoped="" ref="0x40b2ef18"/>
        <function-ref name="getScale" scoped="" ref="0x40b2c1d0"/>
        <function-ref name="reset" scoped="" ref="0x40b2e048"/>
        <function-ref name="overflow" scoped="" ref="0x40b2fd90"/>
        <function-ref name="isOn" scoped="" ref="0x40b2ea28"/>
        <function-ref name="set" scoped="" ref="0x40b2faf0"/>
        <function-ref name="start" scoped="" ref="0x40b2e2c0"/>
        <function-ref name="stop" scoped="" ref="0x40b2e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b433c8" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b433c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b435a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b43680"/>
        <function-ref name="getControlA" scoped="" ref="0x40b43760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b43840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b43920"/>
        <function-ref name="setControlB" scoped="" ref="0x40b43a00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b43ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x40b43bc0"/>
        <function-ref name="setControlC" scoped="" ref="0x40b43ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b43d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b40010" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b40010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b3e578"/>
        <function-ref name="fired" scoped="" ref="0x40b40b70"/>
        <function-ref name="get" scoped="" ref="0x40b40658"/>
        <function-ref name="reset" scoped="" ref="0x40b40de8"/>
        <function-ref name="isOn" scoped="" ref="0x40b3e7f0"/>
        <function-ref name="set" scoped="" ref="0x40b408d0"/>
        <function-ref name="start" scoped="" ref="0x40b3e088"/>
        <function-ref name="stop" scoped="" ref="0x40b3e300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b420f0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b420f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b41b80"/>
        <function-ref name="test" scoped="" ref="0x40b41690"/>
        <function-ref name="get" scoped="" ref="0x40b42738"/>
        <function-ref name="captured" scoped="" ref="0x40b42c50"/>
        <function-ref name="reset" scoped="" ref="0x40b42ef0"/>
        <function-ref name="isOn" scoped="" ref="0x40b41908"/>
        <function-ref name="set" scoped="" ref="0x40b429b0"/>
        <function-ref name="start" scoped="" ref="0x40b411a0"/>
        <function-ref name="stop" scoped="" ref="0x40b41418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b3ec08" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b3ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b3c1a0"/>
        <function-ref name="fired" scoped="" ref="0x40b3d790"/>
        <function-ref name="get" scoped="" ref="0x40b3d278"/>
        <function-ref name="reset" scoped="" ref="0x40b3da08"/>
        <function-ref name="isOn" scoped="" ref="0x40b3c418"/>
        <function-ref name="set" scoped="" ref="0x40b3d4f0"/>
        <function-ref name="start" scoped="" ref="0x40b3dc80"/>
        <function-ref name="stop" scoped="" ref="0x40b3def8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b3c830" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b3c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b3ad90"/>
        <function-ref name="fired" scoped="" ref="0x40b3a3b0"/>
        <function-ref name="get" scoped="" ref="0x40b3ce78"/>
        <function-ref name="reset" scoped="" ref="0x40b3a628"/>
        <function-ref name="isOn" scoped="" ref="0x40b39048"/>
        <function-ref name="set" scoped="" ref="0x40b3a110"/>
        <function-ref name="start" scoped="" ref="0x40b3a8a0"/>
        <function-ref name="stop" scoped="" ref="0x40b3ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b1f0e0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b1f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b45b30"/>
        <function-ref name="test" scoped="" ref="0x40b45640"/>
        <function-ref name="get" scoped="" ref="0x40b1f728"/>
        <function-ref name="setScale" scoped="" ref="0x40b45da8"/>
        <function-ref name="getScale" scoped="" ref="0x40b43068"/>
        <function-ref name="reset" scoped="" ref="0x40b1feb8"/>
        <function-ref name="overflow" scoped="" ref="0x40b1fc40"/>
        <function-ref name="isOn" scoped="" ref="0x40b458b8"/>
        <function-ref name="set" scoped="" ref="0x40b1f9a0"/>
        <function-ref name="start" scoped="" ref="0x40b45150"/>
        <function-ref name="stop" scoped="" ref="0x40b453c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b70c88" loc="30:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b70c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bb8150"/>
        <function-ref name="fired" scoped="" ref="0x40bb9908"/>
        <function-ref name="startAt" scoped="" ref="0x40bb9df8"/>
        <function-ref name="isRunning" scoped="" ref="0x40bb9b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bb83c8"/>
        <function-ref name="start" scoped="" ref="0x40bb93f0"/>
        <function-ref name="stop" scoped="" ref="0x40bb9690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b91480" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b91480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b91658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b91868" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b91868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b872e0"/>
        <function-ref name="test" scoped="" ref="0x40b88dd0"/>
        <function-ref name="get" scoped="" ref="0x40b91eb0"/>
        <function-ref name="setScale" scoped="" ref="0x40b87558"/>
        <function-ref name="getScale" scoped="" ref="0x40b877f8"/>
        <function-ref name="reset" scoped="" ref="0x40b88668"/>
        <function-ref name="overflow" scoped="" ref="0x40b883f0"/>
        <function-ref name="isOn" scoped="" ref="0x40b87068"/>
        <function-ref name="set" scoped="" ref="0x40b88150"/>
        <function-ref name="start" scoped="" ref="0x40b888e0"/>
        <function-ref name="stop" scoped="" ref="0x40b88b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410e1010" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410e1010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402fe040"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402fe040"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4111e4e0"/>
        <function-ref name="fired" scoped="" ref="0x410e1c78"/>
        <function-ref name="startAt" scoped="" ref="0x4111e1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x410e1ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4111e758"/>
        <function-ref name="start" scoped="" ref="0x410e1760"/>
        <function-ref name="stop" scoped="" ref="0x410e1a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4111bcd8" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4111bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41119288"/>
        <function-ref name="fired" scoped="" ref="0x4111a888"/>
        <function-ref name="get" scoped="" ref="0x4111a370"/>
        <function-ref name="reset" scoped="" ref="0x4111ab00"/>
        <function-ref name="isOn" scoped="" ref="0x41119500"/>
        <function-ref name="set" scoped="" ref="0x4111a5e8"/>
        <function-ref name="start" scoped="" ref="0x4111ad78"/>
        <function-ref name="stop" scoped="" ref="0x41119010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x4111ea18" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x4111ea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4111b500"/>
        <function-ref name="test" scoped="" ref="0x4111b010"/>
        <function-ref name="get" scoped="" ref="0x4111d088"/>
        <function-ref name="setScale" scoped="" ref="0x4111b778"/>
        <function-ref name="getScale" scoped="" ref="0x4111ba18"/>
        <function-ref name="reset" scoped="" ref="0x4111d818"/>
        <function-ref name="overflow" scoped="" ref="0x4111d5a0"/>
        <function-ref name="isOn" scoped="" ref="0x4111b288"/>
        <function-ref name="set" scoped="" ref="0x4111d300"/>
        <function-ref name="start" scoped="" ref="0x4111da90"/>
        <function-ref name="stop" scoped="" ref="0x4111dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bb7580" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bb7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb7bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bb4698" loc="24:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb4de8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bb1300"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bb1088"/>
        <function-ref name="overflow" scoped="" ref="0x40bb1578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40baee90" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40baee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bad600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40badaf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bad878"/>
        <function-ref name="overflow" scoped="" ref="0x40badd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bcd078" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bcd078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bcbab8"/>
        <function-ref name="test" scoped="" ref="0x40bcb5c8"/>
        <function-ref name="get" scoped="" ref="0x40bcd6c0"/>
        <function-ref name="setScale" scoped="" ref="0x40bcbd30"/>
        <function-ref name="getScale" scoped="" ref="0x40bca010"/>
        <function-ref name="reset" scoped="" ref="0x40bcde50"/>
        <function-ref name="overflow" scoped="" ref="0x40bcdbd8"/>
        <function-ref name="isOn" scoped="" ref="0x40bcb840"/>
        <function-ref name="set" scoped="" ref="0x40bcd938"/>
        <function-ref name="start" scoped="" ref="0x40bcb0d8"/>
        <function-ref name="stop" scoped="" ref="0x40bcb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40be20e0" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40be20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be2830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be2d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be2aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40be1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bb2e60" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bc95e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bc9ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bc9858"/>
        <function-ref name="overflow" scoped="" ref="0x40bc9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40be1f18" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40be1f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be0578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40be08c8" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bdf048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bdf538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bdf2c0"/>
        <function-ref name="overflow" scoped="" ref="0x40bdf7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bda010" loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bda010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bda760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c07c90" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c07c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c07e68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c03010"/>
        <function-ref name="led1On" scoped="" ref="0x40c030f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c031d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c032b0"/>
        <function-ref name="get" scoped="" ref="0x40c03390"/>
        <function-ref name="led1Off" scoped="" ref="0x40c03470"/>
        <function-ref name="led2Off" scoped="" ref="0x40c037f0"/>
        <function-ref name="set" scoped="" ref="0x40c03550"/>
        <function-ref name="led0On" scoped="" ref="0x40c03630"/>
        <function-ref name="led2On" scoped="" ref="0x40c03710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40bff110" loc="50:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40bff110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bff2e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bff3c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bff4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bff588"/>
        <function-ref name="get" scoped="" ref="0x40bff668"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bff748"/>
        <function-ref name="set" scoped="" ref="0x40bff828"/>
        <function-ref name="clr" scoped="" ref="0x40bff908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c000a0" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c00278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40bffaf8" loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40bffaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bffcd0"/>
        <function-ref name="isInput" scoped="" ref="0x40bffdb0"/>
        <function-ref name="toggle" scoped="" ref="0x40bffe90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c28010"/>
        <function-ref name="get" scoped="" ref="0x40c280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c281d0"/>
        <function-ref name="set" scoped="" ref="0x40c282b0"/>
        <function-ref name="clr" scoped="" ref="0x40c28390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c003e8" loc="47:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c003e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c005c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c006a0"/>
        <function-ref name="led1On" scoped="" ref="0x40c00780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c00860"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c00940"/>
        <function-ref name="get" scoped="" ref="0x40c00a20"/>
        <function-ref name="led1Off" scoped="" ref="0x40c00b00"/>
        <function-ref name="led2Off" scoped="" ref="0x40c00e80"/>
        <function-ref name="set" scoped="" ref="0x40c00be0"/>
        <function-ref name="led0On" scoped="" ref="0x40c00cc0"/>
        <function-ref name="led2On" scoped="" ref="0x40c00da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40c28580" loc="52:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c28580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c28758"/>
        <function-ref name="isInput" scoped="" ref="0x40c28838"/>
        <function-ref name="toggle" scoped="" ref="0x40c28918"/>
        <function-ref name="isOutput" scoped="" ref="0x40c289f8"/>
        <function-ref name="get" scoped="" ref="0x40c28ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c28bb8"/>
        <function-ref name="set" scoped="" ref="0x40c28c98"/>
        <function-ref name="clr" scoped="" ref="0x40c28d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40c198e8" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c198e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c19ac0"/>
        <function-ref name="isInput" scoped="" ref="0x40c19ba0"/>
        <function-ref name="toggle" scoped="" ref="0x40c19c80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c19d60"/>
        <function-ref name="get" scoped="" ref="0x40c19e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c19f20"/>
        <function-ref name="set" scoped="" ref="0x40c18018"/>
        <function-ref name="clr" scoped="" ref="0x40c180f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40c18308" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c18308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c184e0"/>
        <function-ref name="isInput" scoped="" ref="0x40c185c0"/>
        <function-ref name="toggle" scoped="" ref="0x40c186a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c18780"/>
        <function-ref name="get" scoped="" ref="0x40c18860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c18940"/>
        <function-ref name="set" scoped="" ref="0x40c18a20"/>
        <function-ref name="clr" scoped="" ref="0x40c18b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40c166e0" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c166e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c168b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40c18d10" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c18d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c18ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40c16010"/>
        <function-ref name="toggle" scoped="" ref="0x40c160f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c161d0"/>
        <function-ref name="get" scoped="" ref="0x40c162b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c16390"/>
        <function-ref name="set" scoped="" ref="0x40c16470"/>
        <function-ref name="clr" scoped="" ref="0x40c16550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c04940" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c04940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c3d4c8"/>
        <function-ref name="fired" scoped="" ref="0x40c14768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c14e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c14c18"/>
        <function-ref name="getdt" scoped="" ref="0x40c3d978"/>
        <function-ref name="gett0" scoped="" ref="0x40c3d720"/>
        <function-ref name="isRunning" scoped="" ref="0x40c149c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c14010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c3d1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c14290"/>
        <function-ref name="stop" scoped="" ref="0x40c14510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c3b188" loc="21:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c3b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3b7b0"/>
        <function-ref name="readDone" scoped="" ref="0x40c3ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4113d5f0" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4113d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4113dc18"/>
        <function-ref name="readDone" scoped="" ref="0x4113de70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4113be80" loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4113be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41139070"/>
        <function-ref name="configure" scoped="" ref="0x41139150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4113cde0" loc="22:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4113cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4113b448"/>
        <function-ref name="readDone" scoped="" ref="0x4113b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4113b9a8" loc="24:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4113b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4113bb80"/>
        <function-ref name="getChannel" scoped="" ref="0x4113bc60"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4113bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c2d348" loc="19:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c2d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2d970"/>
        <function-ref name="readDone" scoped="" ref="0x40c2dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40c537a8" loc="20:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40c537a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c53df0"/>
        <function-ref name="readDone" scoped="" ref="0x40c2a088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40c2a740" loc="23:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c2a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c2a918"/>
        <function-ref name="getChannel" scoped="" ref="0x40c2a9f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c2aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40c29010" loc="24:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c291e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c292c8"/>
        <function-ref name="request" scoped="" ref="0x40c293a8"/>
        <function-ref name="granted" scoped="" ref="0x40c29488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c29568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c4d418" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c4d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c4d5f0"/>
        <function-ref name="configure" scoped="" ref="0x40c4d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c47b88" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c47b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c47d60"/>
        <function-ref name="dataReady" scoped="" ref="0x40c47e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c4a9e8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c4a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c4abc0"/>
        <function-ref name="cancel" scoped="" ref="0x40c4aca0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c4ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c50010" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c50010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c501e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c502c8"/>
        <function-ref name="request" scoped="" ref="0x40c503a8"/>
        <function-ref name="granted" scoped="" ref="0x40c50488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c50568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c440b0" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c440b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c44288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c44e78" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c44e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c43070"/>
        <function-ref name="dataReady" scoped="" ref="0x40c43150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c448f0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c448f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c44ac8"/>
        <function-ref name="cancel" scoped="" ref="0x40c44ba8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c44c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40c66818" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c66818"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c669f0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c66ad0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c66bb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c66c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c66d70"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c66e50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c42010"/>
        <function-ref name="isComplete" scoped="" ref="0x40c420f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c421d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c422b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c42390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c42470"/>
        <function-ref name="startConversion" scoped="" ref="0x40c42550"/>
        <function-ref name="isStarted" scoped="" ref="0x40c426b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c42790"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c42870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c42950"/>
        <function-ref name="getValue" scoped="" ref="0x40c42a30"/>
        <function-ref name="dataReady" scoped="" ref="0x40c42b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40c44460" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c44460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c44638"/>
        <function-ref name="stop" scoped="" ref="0x40c44718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40c42ce8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c42ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40c42ec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40c41010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40c410f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40c411d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40c412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c49a08" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c49a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c49be0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c49cc0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c49da0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c49e80"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c74010"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c740f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c741d0"/>
        <function-ref name="isComplete" scoped="" ref="0x40c742b0"/>
        <function-ref name="cancel" scoped="" ref="0x40c74390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c74470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c74550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c74630"/>
        <function-ref name="startConversion" scoped="" ref="0x40c74710"/>
        <function-ref name="isStarted" scoped="" ref="0x40c74870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c74950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c74a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c74b10"/>
        <function-ref name="getValue" scoped="" ref="0x40c74bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c74cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c73730" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c73730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c73908"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c739e8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c73ac8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c73ba8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c73c88"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c73d68"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c73e48"/>
        <function-ref name="isComplete" scoped="" ref="0x40c73f28"/>
        <function-ref name="cancel" scoped="" ref="0x40c70018"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c700f8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c701d8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c702b8"/>
        <function-ref name="startConversion" scoped="" ref="0x40c70398"/>
        <function-ref name="isStarted" scoped="" ref="0x40c704f8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c705d8"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c706b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c70798"/>
        <function-ref name="getValue" scoped="" ref="0x40c70878"/>
        <function-ref name="dataReady" scoped="" ref="0x40c70958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40c70b40" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40c70b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c70d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40cc5b60" loc="92:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40cc5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40cc5d48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cc5e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40cc4b58" loc="96:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40cc4b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40cc4d40"/>
        <function-ref name="configure" scoped="" ref="0x40cc4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40cc4010" loc="93:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc41e8"/>
        <function-ref name="requested" scoped="" ref="0x40cc42c8"/>
        <function-ref name="granted" scoped="" ref="0x40cc43a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc4488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cc4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cc5420" loc="91:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cc5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc5608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cc56e8"/>
        <function-ref name="request" scoped="" ref="0x40cc57c8"/>
        <function-ref name="granted" scoped="" ref="0x40cc58a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40cc46a8" loc="94:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40cc46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40cc4880"/>
        <function-ref name="userId" scoped="" ref="0x40cc4960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41133a90" loc="44:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41133a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41133c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41133dc8" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41133dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41130010"/>
        <function-ref name="isEmpty" scoped="" ref="0x411300f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411301d0"/>
        <function-ref name="dequeue" scoped="" ref="0x411302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4112f750" loc="55:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4112f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4112f938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4112fa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4112e6f0" loc="60:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4112e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4112e8d8"/>
        <function-ref name="configure" scoped="" ref="0x4112e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4112eb18" loc="61:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4112eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4112ecf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4112edd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4112eeb0"/>
        <function-ref name="dequeue" scoped="" ref="0x4112d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4112fb58" loc="56:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4112fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4112fd30"/>
        <function-ref name="requested" scoped="" ref="0x4112fe10"/>
        <function-ref name="granted" scoped="" ref="0x4112fef0"/>
        <function-ref name="isOwner" scoped="" ref="0x4112e010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4112e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4112d150" loc="62:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4112d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4112d328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4112d408"/>
        <function-ref name="led1On" scoped="" ref="0x4112d4e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4112d5c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4112d6a8"/>
        <function-ref name="get" scoped="" ref="0x4112d788"/>
        <function-ref name="led1Off" scoped="" ref="0x4112d868"/>
        <function-ref name="led0On" scoped="" ref="0x4112dbe8"/>
        <function-ref name="set" scoped="" ref="0x4112da28"/>
        <function-ref name="led2On" scoped="" ref="0x4112d948"/>
        <function-ref name="led2Off" scoped="" ref="0x4112db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4112f010" loc="54:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4112f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4112f1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4112f2d8"/>
        <function-ref name="request" scoped="" ref="0x4112f3b8"/>
        <function-ref name="granted" scoped="" ref="0x4112f498"/>
        <function-ref name="isOwner" scoped="" ref="0x4112f578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4112e230" loc="57:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4112e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4112e408"/>
        <function-ref name="userId" scoped="" ref="0x4112e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4112dd68" loc="75:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4112dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4112c010"/>
        <function-ref name="runTask" scoped="" ref="0x4112c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40cf0de8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40cf0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40cef010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40cef150" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cef150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cef328"/>
        <function-ref name="requested" scoped="" ref="0x40cef408"/>
        <function-ref name="granted" scoped="" ref="0x40cef4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cef5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cef6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40cf09f0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40cf09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cf0bc8"/>
        <function-ref name="stop" scoped="" ref="0x40cf0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40cef7e8" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40cef7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40cef9c0"/>
        <function-ref name="userId" scoped="" ref="0x40cefaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41151b50" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41151b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41151d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41151e68" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41151e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4114f050"/>
        <function-ref name="requested" scoped="" ref="0x4114f130"/>
        <function-ref name="granted" scoped="" ref="0x4114f210"/>
        <function-ref name="isOwner" scoped="" ref="0x4114f2f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4114f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41151758" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41151758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41151930"/>
        <function-ref name="stop" scoped="" ref="0x41151a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x4114f510" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4114f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4114f6e8"/>
        <function-ref name="userId" scoped="" ref="0x4114f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40cdbd98" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40cdbd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40d07508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cdd1d8" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cdd1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cdd800"/>
        <function-ref name="readDone" scoped="" ref="0x40cdda58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40cdc178" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40cdc178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cdc7c0"/>
        <function-ref name="readDone" scoped="" ref="0x40cdca38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40cdb6b0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cdb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40cdb888"/>
        <function-ref name="getChannel" scoped="" ref="0x40cdb968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40cdba48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40cdcde8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40cdcde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40cdb010"/>
        <function-ref name="cancel" scoped="" ref="0x40cdb0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40cdb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40cfe9b0" loc="104:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40cfe9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cfeb88"/>
        <function-ref name="runTask" scoped="" ref="0x40cfec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cf39d8" loc="24:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cf39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf2048"/>
        <function-ref name="readDone" scoped="" ref="0x40cf22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40cf2710" loc="26:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40cf2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf2d48"/>
        <function-ref name="readDone" scoped="" ref="0x40d12010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d12390" loc="27:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d12390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d12578"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d12658"/>
        <function-ref name="request" scoped="" ref="0x40d12738"/>
        <function-ref name="granted" scoped="" ref="0x40d12818"/>
        <function-ref name="isOwner" scoped="" ref="0x40d128f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40d0ec88" loc="40:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d0ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40d0ee60"/>
        <function-ref name="getChannel" scoped="" ref="0x40d0b010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40d0b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d0de08" loc="49:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d0de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d0c010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0c1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40d0c2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d0c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d0c4d0" loc="50:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d0c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d0c6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d0c788"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0c868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0c948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d0ca28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d0cb68" loc="51:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d0cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d0cd40"/>
        <function-ref name="source" scoped="" ref="0x40d0ce20"/>
        <function-ref name="address" scoped="" ref="0x40d0cf00"/>
        <function-ref name="destination" scoped="" ref="0x40d75010"/>
        <function-ref name="setSource" scoped="" ref="0x40d750f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d751d0"/>
        <function-ref name="type" scoped="" ref="0x40d752b0"/>
        <function-ref name="setType" scoped="" ref="0x40d75390"/>
        <function-ref name="isForMe" scoped="" ref="0x40d75470"/>
        <function-ref name="setGroup" scoped="" ref="0x40d75550"/>
        <function-ref name="localGroup" scoped="" ref="0x40d75630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d75790" loc="52:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d75790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d75968"/>
        <function-ref name="noAck" scoped="" ref="0x40d75a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d75b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41147a68" loc="49:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41147a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41147c40"/>
        <function-ref name="getPayload" scoped="" ref="0x41147d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41147e00"/>
        <function-ref name="cancel" scoped="" ref="0x41147ee0"/>
        <function-ref name="sendDone" scoped="" ref="0x41144010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41144150" loc="50:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41144150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41144328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41144408"/>
        <function-ref name="getPayload" scoped="" ref="0x411444e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411445c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411446a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411447e8" loc="51:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411447e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411449c0"/>
        <function-ref name="source" scoped="" ref="0x41144aa0"/>
        <function-ref name="address" scoped="" ref="0x41144b80"/>
        <function-ref name="destination" scoped="" ref="0x41144c60"/>
        <function-ref name="setSource" scoped="" ref="0x41144d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41144e20"/>
        <function-ref name="type" scoped="" ref="0x41144f00"/>
        <function-ref name="setType" scoped="" ref="0x41143010"/>
        <function-ref name="isForMe" scoped="" ref="0x411430f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411431d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41143410" loc="52:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41143410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411435e8"/>
        <function-ref name="noAck" scoped="" ref="0x411436c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411437a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4113e538" loc="44:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4113e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4113e710"/>
        <function-ref name="getPayload" scoped="" ref="0x4113e7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113e8d0"/>
        <function-ref name="cancel" scoped="" ref="0x4113e9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4113ea90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4113ec00" loc="46:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4113ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4113edd8"/>
        <function-ref name="getPayload" scoped="" ref="0x4113eeb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4117c010"/>
        <function-ref name="cancel" scoped="" ref="0x4117c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4117c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4117c310" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4117c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4117c4e8"/>
        <function-ref name="source" scoped="" ref="0x4117c5c8"/>
        <function-ref name="address" scoped="" ref="0x4117c6a8"/>
        <function-ref name="destination" scoped="" ref="0x4117c788"/>
        <function-ref name="setSource" scoped="" ref="0x4117c868"/>
        <function-ref name="setDestination" scoped="" ref="0x4117c948"/>
        <function-ref name="type" scoped="" ref="0x4117ca28"/>
        <function-ref name="setType" scoped="" ref="0x4117cb08"/>
        <function-ref name="isForMe" scoped="" ref="0x4117cbe8"/>
        <function-ref name="setGroup" scoped="" ref="0x4117ccc8"/>
        <function-ref name="localGroup" scoped="" ref="0x4117cda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d4bf00" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d4bf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d480f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d481d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d482b0"/>
        <function-ref name="cancel" scoped="" ref="0x40d48390"/>
        <function-ref name="sendDone" scoped="" ref="0x40d48470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40d4f598" loc="48:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d4f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4f780"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4f860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4f940"/>
        <function-ref name="cancel" scoped="" ref="0x40d4fa20"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d45da0" loc="46:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d45da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4f010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4f1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40d4f2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40d4e850" loc="50:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4ea28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4eb08"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4ebe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4ecc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4eda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40d4ef28" loc="169:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40d4ef28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d7d110"/>
        <function-ref name="runTask" scoped="" ref="0x40d7d1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40d7d370" loc="126:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40d7d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d7d548"/>
        <function-ref name="runTask" scoped="" ref="0x40d7d628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40d4fc40" loc="49:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d4fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d4fe18"/>
        <function-ref name="source" scoped="" ref="0x40d4fef8"/>
        <function-ref name="address" scoped="" ref="0x40d4e010"/>
        <function-ref name="destination" scoped="" ref="0x40d4e0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40d4e1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4e2b0"/>
        <function-ref name="type" scoped="" ref="0x40d4e390"/>
        <function-ref name="setType" scoped="" ref="0x40d4e470"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4e550"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4e630"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d6f5d8" loc="46:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d6f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6f7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d6f890"/>
        <function-ref name="getPayload" scoped="" ref="0x40d6f970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d6fa50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d6fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d6f2c0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d6f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d6f498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d6fc70" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d6fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d6fe48"/>
        <function-ref name="source" scoped="" ref="0x40d6ff28"/>
        <function-ref name="address" scoped="" ref="0x40d6e018"/>
        <function-ref name="destination" scoped="" ref="0x40d6e0f8"/>
        <function-ref name="setSource" scoped="" ref="0x40d6e1d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40d6e2b8"/>
        <function-ref name="type" scoped="" ref="0x40d6e398"/>
        <function-ref name="setType" scoped="" ref="0x40d6e478"/>
        <function-ref name="isForMe" scoped="" ref="0x40d6e558"/>
        <function-ref name="setGroup" scoped="" ref="0x40d6e638"/>
        <function-ref name="localGroup" scoped="" ref="0x40d6e718"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403a8dd0" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x403f2490" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403eaec8" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x403f2148" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f2328" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403f8190" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f0d60" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f8010" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403f0800" loc="123:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403f1168" loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f1010" loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403f1e58" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f1b00" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403f1cf8" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403ab478" loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403ab320" loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403aa1e0" loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403aa088" loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403adc18" loc="104:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403ab988" loc="130:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40400270" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40400270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40400720" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40400ed0" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40400270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40400ba0" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40400d70" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40400270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x403a7d00" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
              <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403a77b8" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403a7998" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403a7b78" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40404010" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40404458" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404048d8" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40403158" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40403e48" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4040c318" loc="117:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40404d00" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4040ca58" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4040c900" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40406b78" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404035d8" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40403a00" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x403a6618" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x403a6618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x403fbf00" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x403fdbb8" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x403fcd20" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403fc9d8" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403fcbc0" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x403fc530" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x403fa888" loc="140:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x403fa358" loc="133:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x403fc070" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x403a6c70" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403a6b18" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x403fb8e0" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403fb598" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403fb780" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x403fd320" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403fd1c8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403fd7f0" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4041d158" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4042a010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40422dd8" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404235c0" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40423bf8" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40423aa0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404222d8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40422180" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40422830" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4042bc98" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40435090" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4042b508" loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40435860" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4042b8c8" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40435468" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4042eda0" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4042b158" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40313658" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40315010" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40313a98" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40318f20" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40317450" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40384b98" loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40399b28" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4033fbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403920f8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x4051f880" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4051f508" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4051f720" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40521bd0" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40521a78" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405285c0" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40528468" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40526578" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40526218" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405263f8" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40529c08" loc="106:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40529270" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40528ee0" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40529110" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40535de0" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40535a48" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40535c80" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40534978" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40534820" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40535570" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x4051dd88" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4051dc30" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405393b8" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40539260" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40539eb0" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40539d58" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40538950" loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405387f8" loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40541970" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40541818" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4053ada0" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053aa08" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4053ac40" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40541020" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40540eb0" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40540990" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405405f8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40540830" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x4053e2e0" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053e188" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4052b648" loc="177:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052b4f0" loc="177:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40532010" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40524e70" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40525f00" loc="68:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405245c8" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40524470" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4052f8f8" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052f590" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4052f798" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40532bf8" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40532890" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40532a98" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4052e010" loc="147:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40531ea0" loc="147:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4052eb48" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052e818" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4052e9e8" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405314c0" loc="136:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40531368" loc="136:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4052c370" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052c010" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4052c210" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4052cbe8" loc="195:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40536ab0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x405365d0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40536478" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4053c010" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4053ca40" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4053ca40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4053cba8" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053cba8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4053bd90" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053cba8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053bc38" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x405499c0" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40549868" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4053b240" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053b0e8" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405484b8" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053cba8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40548148" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40548358" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053cba8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4054c630" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054c630"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40559900" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405597a8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405592e0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054c630"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40559188" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4054cca8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054cb50" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40557170" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054c630"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40559d30" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40557010" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054c630"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40553750" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40553750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40553c30" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405547d0" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40554678" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4056c210" loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4056e8c0" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4056e2c0" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4056ed70" loc="102:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4056c908" loc="128:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x4057a870" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057a718" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40563c50" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4057a2a0" loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057a148" loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40579800" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40579460" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405796a0" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40579060" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057aca0" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4057aee0" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40577350" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405771f8" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40577ac0" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40577730" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40577960" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40579d70" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40579c18" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40577f00" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405723f0" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40565e68" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405720a8" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40572288" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405707f0" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40570490" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40570670" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40571ee0" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40572d80" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40572c28" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405718e8" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40571590" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40571788" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x4059c210" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x4058cb68" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058ca10" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x4059f3f0" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f298" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4059d168" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059d010" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405a0660" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a0508" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40597890" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597738" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405a0df8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a0a90" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405a0c98" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405a0090" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597cf0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40597ef8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4059fb78" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f818" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4059fa18" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40599b30" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40594158" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405a27b8" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2660" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405948a0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40594748" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405a2010" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40594e40" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405acde0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405ac580" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405ac428" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405ac9c8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405a1e10" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405bc2e0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x405b9410" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b92b8" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405bb9f8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb8a0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405ba750" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405ba290" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bbef0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405ba130" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405bb300" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb1a8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405badd0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bac78" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4058aed0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4058a9d0" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058a878" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40584610" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405844b8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40584b58" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405922a0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592148" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40585d70" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40585c18" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x4058d6c0" loc="86:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x4058d208" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4058fe68" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4058d0a8" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405901e0" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40590088" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405908a8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40590750" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x4058f208" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40590e68" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4058f0a8" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40591298" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40591b08" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405917e0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405919a8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4058f920" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058f7c8" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405a3880" loc="131:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3728" loc="131:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405a5a48" loc="120:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a58f0" loc="120:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4059b970" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059b620" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4059b810" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405aad48" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aabf0" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405b2cc0" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2960" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405b2b60" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405aa6b0" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aa558" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405a3270" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a5f00" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405a3110" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405a9d00" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a9988" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405a9ba0" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405b24e8" loc="151:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2390" loc="151:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405aa010" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059be80" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405a7d28" loc="99:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7bd0" loc="99:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405a7678" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a7300" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405a7518" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x405af4b0" loc="178:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405b0300" loc="162:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b01a8" loc="162:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405af010" loc="173:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405b3ea0" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3b40" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405b3d40" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405a9448" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a92f0" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405a5438" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a50e8" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405a52d8" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405b3090" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3d18" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405a3f08" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405afa88" loc="185:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405af930" loc="185:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405a6540" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a6218" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405a63e0" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4059b168" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059b010" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405b0a10" loc="168:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b08b8" loc="168:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405b36c0" loc="141:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3568" loc="141:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405a6bf0" loc="110:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a6a98" loc="110:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x4058b8b8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058b558" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x4058b758" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x4058bd50" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40586a20" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405868c8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x4058b088" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40586f10" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40596010" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059ae90" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4059a908" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059a7b0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40596508" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40596bc0" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40596a68" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405eb3b8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405eb3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405eb520" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405fb810" loc="98:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405ea4d0" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405fb1c8" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405eae48" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          </variable>
          <variable name="dt" ref="0x405fb068" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405ea940" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405fbca0" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405ebb50" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405eb9f8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405eb520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405ea070" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40603460" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40603a30" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40602090" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40603038" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x4061def8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061dda0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40619010" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061ae38" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4061a8a0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061a548" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4061a740" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40618010" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
              <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40619e40" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x406319a0" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40630258" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40631e10" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x406314b0" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40631148" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40631350" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406839b8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40694010" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40682be8" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40682728" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40693298" loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40693798" loc="98:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4069e530" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40695ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4069e3d8" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40695ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4069f1c8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4069f888" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40695ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4069f730" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40695ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4069fe38" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40695ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40765500" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
              <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40765388" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40768cf0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40768b98" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407723b8" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40772260" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40772838" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4075f8e8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075f790" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4075fe30" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075fcd8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x4075d268" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075d110" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40774010" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4075ddf8" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x4075d938" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075d7e0" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x407746c8" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40774570" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40760b90" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40760a38" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407da8e0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407da8e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407daa48" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407daa48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x407f1010" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407daa48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407f1a38" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407f1538" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407f1e60" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40809158" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4080b700" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x407f2328" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4080bcc0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4080bb68" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4080b290" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4080b138" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40809720" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x408095c8" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x407f2778" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407f2cf0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407f2b98" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x40801dd0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40802ae8" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x40802f10" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x40801410" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407ff2b0" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x408018f0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40802010" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40802608" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x408024b0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407f4780" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f4780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x408066a8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40807650" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407f4c78" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f4780"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40807a58" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40806b08" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40807210" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f4780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x408070b8" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f4780"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40807e60" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40806280" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x407f93e8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407f93e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x407f7ba0" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407f7310" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407f98d8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407f93e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x407f6168" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x407f6010" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407f65f8" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407f86c8" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407f82a8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407f7778" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407f9e50" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407f93e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407f9cf8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407f93e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407f8ad0" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407f8ec8" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408e3320" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408e3d58" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408e2410" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408e22b8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408e2880" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408e3860" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408e2dc0" loc="74:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408e5eb8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e5d60" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408e0b90" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408e0678" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408e0520" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40935a18" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40935570" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40938098" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40938098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x409386e8" loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40938098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40938590" loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40938098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x409613b8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40961260" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40963088" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40967f18" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40963858" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40963518" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x409636f8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40963e18" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40963cc0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40984010" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40968e78" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40968998" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a036d8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a036d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a03840" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a03840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a03e58" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a03840"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a03d00" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a03840"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a07e10" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a007e8" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a003a0" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a00248" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a07908" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a06230" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a060d8" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a06e18" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a06cc0" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a06740" loc="68:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a04480" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a04328" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40a93ae0" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a93ae0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40a8d650" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40a8d4f8" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40a8ec30" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a8f010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a93ae0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a8fb60" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a93ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a8fa08" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a93ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40a8e010" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40a8d0c8" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a8f588" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a93ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a8f430" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a93ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40a8e418" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a8e810" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40aa2650" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aa20e0" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aa22f8" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aa24e8" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40aa0ca0" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aa0520" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aa0738" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aa0928" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40aa0b30" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40aa7bb8" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40aa7a60" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40ab96c8" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40ab4ee8" loc="109:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40ab5010" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40ab34e8" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40ab3390" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40ab9278" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40ab4010" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40ab5e10" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40ab71e0" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40ab7088" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40ab8010" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ab05c8" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ab0470" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40ab7638" loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40ab3e70" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40ab3d18" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ab2748" loc="120:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ab4aa0" loc="108:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40ab4948" loc="108:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40ab0038" loc="124:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40ab55a0" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40ab5448" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40ab85a8" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ab8450" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40ab7b88" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40ab7a30" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40ab44c0" loc="106:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40ab3910" loc="112:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40ab22d0" loc="115:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ab2ba0" loc="122:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40ab59d8" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40ab9af0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40ab8b70" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ab8a18" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40aec2f0" loc="95:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40aec7d8" loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b29460" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b289f8" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b2cbd0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b27480" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b27010" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b28e60" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b28010" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b29df8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b27a48" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b278f0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b29038" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b28588" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b28430" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b299d8" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b29880" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40c2f838" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40c2f340" loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40c2fd28" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40c2b4c8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c2b4c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40c2b998" loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40c53190" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c2b4c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c2be38" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40c53030" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c2b4c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40c483a0" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c4eb40" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40c4ed68" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40c48010" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40c48230" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c47708" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c48cc0" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40c48eb0" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40c470d0" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40c47328" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40c47590" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40c4b640" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c50e38" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40c4b088" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40c4b2b0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40c4b4d0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c4a6f8" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c4a170" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4bda0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40c4a010" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40c68418" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40c43af8" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4034e7b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4034ea38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40c678b8" loc="131:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40c67760" loc="131:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40c688d8" loc="113:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40c3f5b8" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40c40168" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4034e7b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4034ea38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40c40010" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4034e7b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4034ea38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40c3fe08" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40c67210" loc="124:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c67d60" loc="141:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40c3f9b8" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40c3e700" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40c3e2d0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40c3eb38" loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40c68d48" loc="118:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40c40c80" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403549f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40354d98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40c40b28" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403549f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40354d98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40c68018" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40c40650" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403549f0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40354d98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40c3f158" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c66648" loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c664f0" loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40ca6938" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40ca53b0" loc="73:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40ca6408" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40ca6e48" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40ca5988" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40ceb4d8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d28228" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d2bec0" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d280c8" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40d24dd0" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d24a70" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d24c50" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40d24510" loc="112:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40d28e68" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d28d10" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d27ba0" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d27848" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40d27a40" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
