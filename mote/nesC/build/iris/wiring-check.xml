<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403ad078"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40418858"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40418858"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40417a30"/></to>
    </wire>
    <wire loc="27:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403aa4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40420f08"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40420f08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405463f0"/></to>
    </wire>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x403f8a70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d0fe08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d0fe08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41149a68"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x403f6d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d742c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d742c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405161f8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x403faba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c06940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c06940"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407d23f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x403ff218"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c3c188"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40c3c188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x411015f0"/></to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4040cdf8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c09c90"/></to>
    </wire>
    <wire loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c09c90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c023e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41134a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410fe8c8"/></to>
    </wire>
    <wire loc="119:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x409f3118"/></to>
    </wire>
    <wire loc="52:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40957118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4107c988"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407cc060"/></to>
    </wire>
    <wire loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077c238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fd27b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f8e070"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40417dc8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40510400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a94300"/></to>
    </wire>
    <wire loc="122:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40510400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409f4aa0"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40510400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4041e868"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4041e868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4041dc68"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40510808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404229c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c460b0"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404229c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b93480"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40422268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40505010"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4042a490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40506bf8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4042a088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c186e0"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4042a088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4041c4a0"/></to>
    </wire>
    <wire loc="23:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4041c4a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40430420"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4041c870"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404229c8"/></to>
    </wire>
    <wire loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4042ba68"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40432ea8"/></to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40432ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40482170"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4042f4a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4041c870"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40450210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404d60b0"/></to>
    </wire>
    <wire loc="165:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40448750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4049b090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4049b090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e3dde0"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4044dce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4049ed68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4049ed68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e69c08"/></to>
    </wire>
    <wire loc="185:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40454ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ad7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404ad7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e997f8"/></to>
    </wire>
    <wire loc="196:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40459750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e4880"/></to>
    </wire>
    <wire loc="143:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4043c2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404814f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404814f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db1a88"/></to>
    </wire>
    <wire loc="183:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40449a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ae4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404ae4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9c3b0"/></to>
    </wire>
    <wire loc="146:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4043b750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404883d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404883d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db4938"/></to>
    </wire>
    <wire loc="157:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x40441ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40496170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40496170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e0e9e8"/></to>
    </wire>
    <wire loc="168:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40446670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40499d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40499d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e38c08"/></to>
    </wire>
    <wire loc="179:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4044bc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404a8ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e64a88"/></to>
    </wire>
    <wire loc="138:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40433010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40484410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40484410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d877f8"/></to>
    </wire>
    <wire loc="149:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40439670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40486030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40486030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de17f8"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4043fce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40495e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40495e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e099e8"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404434b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40497ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40497ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e33a88"/></to>
    </wire>
    <wire loc="188:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40452ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404ab4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404ab4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec96c0"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4045a2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404db880"/></to>
    </wire>
    <wire loc="174:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4044e8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4049fa80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4049fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e6c7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40482170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d816c0"/></to>
    </wire>
    <wire loc="152:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40437590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40485c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40485c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddc6c0"/></to>
    </wire>
    <wire loc="192:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40450e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404d3880"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40442a08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4048cdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4048cdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e12538"/></to>
    </wire>
    <wire loc="166:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40447210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4049b9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4049b9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e3b7f8"/></to>
    </wire>
    <wire loc="177:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4044c750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4049d790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4049d790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e676c0"/></to>
    </wire>
    <wire loc="186:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404538e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ac170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404ac170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecc228"/></to>
    </wire>
    <wire loc="144:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4043cce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40481e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40481e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40daf538"/></to>
    </wire>
    <wire loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4043a210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40488d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40488d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de43b0"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404408e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40496ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40496ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e0c538"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404440a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40498790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40498790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e366c0"/></to>
    </wire>
    <wire loc="180:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4044a670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a74f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404a74f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e96538"/></to>
    </wire>
    <wire loc="139:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40433a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40484d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40484d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d85228"/></to>
    </wire>
    <wire loc="150:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404380a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40486988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40486988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddf228"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4043e750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404947d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404947d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e07538"/></to>
    </wire>
    <wire loc="189:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40451750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404abe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404abe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec70b0"/></to>
    </wire>
    <wire loc="164:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4043dc08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4049c6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4049c6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e3e418"/></to>
    </wire>
    <wire loc="175:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4044d2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4049e410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4049e410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e6a228"/></to>
    </wire>
    <wire loc="184:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404544b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404aee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404aee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9bd70"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4045ace8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e60b0"/></to>
    </wire>
    <wire loc="142:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404318e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40482ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40482ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db20b0"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40442010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404906b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404906b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dda0b0"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404490a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a3b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404a3b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9e938"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404414b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4048b790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4048b790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e10010"/></to>
    </wire>
    <wire loc="167:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40447c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40499410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40499410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e39228"/></to>
    </wire>
    <wire loc="178:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4044b210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404a8170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404a8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e650b0"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404522f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404acac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404acac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecbc08"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40427538"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40479a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40479a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d8ce18"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4043ac08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404876b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404876b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de3d70"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4043f2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404954f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404954f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e0a010"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40444a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40497170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40497170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e340b0"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4044f830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404de0b0"/></to>
    </wire>
    <wire loc="173:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40443ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4049f128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4049f128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e72de8"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4043d210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40493170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40493170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e05010"/></to>
    </wire>
    <wire loc="140:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404324b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40483790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40483790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d83c08"/></to>
    </wire>
    <wire loc="151:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40438b18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40485330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40485330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddec08"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x408352c8"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405463f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4055c1c0"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40522120"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405524b0"/></to>
    </wire>
    <wire loc="84:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405524b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4056a1b0"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40527078"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40551600"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40551600"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40567110"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x404f87f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40546cc8"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40546cc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4055ca98"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40516890"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40543db0"/></to>
    </wire>
    <wire loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40543db0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4055bb10"/></to>
    </wire>
    <wire loc="76:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40535e58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4054f010"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4054f010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40570978"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405161f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40543718"/></to>
    </wire>
    <wire loc="82:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40543718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4055b478"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4052c010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40550a10"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40550a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405703f0"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405417a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4054f630"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4054f630"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4056d010"/></to>
    </wire>
    <wire loc="73:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4052edf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40551cf0"/></to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40551cf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40568380"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4053e1d8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4054fd48"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4054fd48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4056d728"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x4054ac68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40554ba8"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40554ba8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405818c0"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40549650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40561578"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40561578"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057e3a0"/></to>
    </wire>
    <wire loc="215:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4055c1c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408dd2c0"/></to>
    </wire>
    <wire loc="99:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4054cd18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40574580"/></to>
    </wire>
    <wire loc="305:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40574580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409e4bf8"/></to>
    </wire>
    <wire loc="270:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057e3a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40978998"/></to>
    </wire>
    <wire loc="124:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4056a1b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40673c28"/></to>
    </wire>
    <wire loc="126:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40567110"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406745b0"/></to>
    </wire>
    <wire loc="121:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4055ca98"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40674ce0"/></to>
    </wire>
    <wire loc="123:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4055bb10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40673868"/></to>
    </wire>
    <wire loc="98:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4054d8f8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40575218"/></to>
    </wire>
    <wire loc="303:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40575218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409e5888"/></to>
    </wire>
    <wire loc="216:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40570978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408d68c8"/></to>
    </wire>
    <wire loc="122:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4055b478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40673488"/></to>
    </wire>
    <wire loc="269:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405818c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409a8180"/></to>
    </wire>
    <wire loc="102:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40554010"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40582cd8"/></to>
    </wire>
    <wire loc="307:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40582cd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409deb78"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40559540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4056de18"/></to>
    </wire>
    <wire loc="304:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4056de18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x409df3d8"/></to>
    </wire>
    <wire loc="248:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405703f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4094c628"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40552bb0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4056a8b0"/></to>
    </wire>
    <wire loc="128:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x4056a8b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40672030"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4056d010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x408c69a0"/></to>
    </wire>
    <wire loc="125:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40568380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40675940"/></to>
    </wire>
    <wire loc="224:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4056d728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40926570"/></to>
    </wire>
    <wire loc="100:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40556df8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405827e0"/></to>
    </wire>
    <wire loc="306:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405827e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409de680"/></to>
    </wire>
    <wire loc="87:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x405512a8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40568010"/></to>
    </wire>
    <wire loc="129:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40568010"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40672410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408dd2c0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408d6ed0"/></to>
    </wire>
    <wire loc="88:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409e4bf8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409ef7d0"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40566778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406d9488"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4056ef18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40687570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40687570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f8d3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40673c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40f4fc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40674ce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f50ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Snoop" scoped="" ref="0x40673868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40f4f868"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40578098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40757170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40757170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40fc4950"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40578bf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406c83b0"/></to>
    </wire>
    <wire loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409e5888"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f1458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408d68c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41044060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x406745b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f505b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40673488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f4f488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409a8180"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x410a60c0"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409deb78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a99dc0"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x409df3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x409eb010"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40572ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x406c8a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40672030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40f4e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketLink" scoped="" ref="0x408c69a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40ff8230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40926570"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4107b568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40675940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f51938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40978998"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x410ab8c0"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40566328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x406d9170"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409de680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0c278"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40672410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40f4e410"/></to>
    </wire>
    <wire loc="102:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405b1e20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40759658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40759658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40fcbf20"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405ac4c8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f2108"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x405b0088"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409a8180"/></to>
    </wire>
    <wire loc="105:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x405bb6a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409e6ed0"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409e6ed0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f2a90"/></to>
    </wire>
    <wire loc="110:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405f29c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409dd618"/></to>
    </wire>
    <wire loc="100:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409dd618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a9a2a8"/></to>
    </wire>
    <wire loc="116:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40670768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4059f428"/></to>
    </wire>
    <wire loc="117:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40672f20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4067f538"/></to>
    </wire>
    <wire loc="118:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40670430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x406e8748"/></to>
    </wire>
    <wire loc="119:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40672788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x406e8a80"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4067e010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40687570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4067fa60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x406e8250"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406d97d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40759658"/></to>
    </wire>
    <wire loc="154:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406d79e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x406e9228"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406d7ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x406e9720"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x406d7250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x406e9a58"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406f6280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40753388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40753388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fd5ea8"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406f6778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408c6688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408c6688"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408c4d30"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406f6ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40757b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40757b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40fc33f0"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40756368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408c4070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408c4070"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ff88c8"/></to>
    </wire>
    <wire loc="181:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40791668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40587010"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40753ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408c6190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408c6190"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ffcc98"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c3808"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4094c628"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408c4838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408dd898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408dd898"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408d04c0"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408c4d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408ddd90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408d09b8"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408c3090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408d6150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408d6150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408d0cf0"/></to>
    </wire>
    <wire loc="211:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408d6ed0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408e9778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408e9778"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4107c3b0"/></to>
    </wire>
    <wire loc="212:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408d04c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408e9d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408e9d50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4107ccc0"/></to>
    </wire>
    <wire loc="213:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408d09b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40926258"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40926258"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4107b250"/></to>
    </wire>
    <wire loc="214:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408d0cf0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409c77f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409c77f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x410a47b8"/></to>
    </wire>
    <wire loc="221:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40925230"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40920010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40920010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x41096580"/></to>
    </wire>
    <wire loc="222:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40925708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40753860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40753860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40fd23c0"/></to>
    </wire>
    <wire loc="223:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40926a78"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409cf328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409cf328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409cb1b0"/></to>
    </wire>
    <wire loc="228:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40791250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409204e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409204e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41096a58"/></to>
    </wire>
    <wire loc="237:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4093d928"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40598e28"/></to>
    </wire>
    <wire loc="238:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40920930"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4094dcf8"/></to>
    </wire>
    <wire loc="239:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40920e28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4094c230"/></to>
    </wire>
    <wire loc="240:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4093d270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f2108"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x409714f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409d1db8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40972458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f2108"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40972b10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4058f8d8"/></to>
    </wire>
    <wire loc="253:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4094cb50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40982de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40982de0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4097ecc8"/></to>
    </wire>
    <wire loc="254:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40972060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40981310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40981310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4097d250"/></to>
    </wire>
    <wire loc="259:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097c250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4059e3c0"/></to>
    </wire>
    <wire loc="260:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4097ecc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409cfaa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409cfaa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409cb9c8"/></to>
    </wire>
    <wire loc="261:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4097d250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409ce010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409ce010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409cbec0"/></to>
    </wire>
    <wire loc="262:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x4097d668"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409e6a68"/></to>
    </wire>
    <wire loc="78:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409e6a68"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409f2628"/></to>
    </wire>
    <wire loc="267:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409c6078"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409deb78"/></to>
    </wire>
    <wire loc="268:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409c68f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409c23f0"/></to>
    </wire>
    <wire loc="271:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409c5098"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409d1db8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409c2bb8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409e6ed0"/></to>
    </wire>
    <wire loc="286:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409caeb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4059e3c0"/></to>
    </wire>
    <wire loc="287:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409cb9c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409e60c0"/></to>
    </wire>
    <wire loc="76:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409e60c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409f3c70"/></to>
    </wire>
    <wire loc="288:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409cbec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409e6618"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409e6618"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409f21d8"/></to>
    </wire>
    <wire loc="289:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x409cb1b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409e98b0"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409e98b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409f3498"/></to>
    </wire>
    <wire loc="301:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409da170"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x40584518"/></to>
    </wire>
    <wire loc="302:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409daad8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409a8180"/></to>
    </wire>
    <wire loc="309:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409f9370"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409d1db8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x409f9a08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409d1db8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x409f80e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409d1db8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409f8700"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405f2108"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405f2108"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40f23608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40f23e00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405f29c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x40f207d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4060ca60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f4b070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4065ad70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f4e788"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40672788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40f4ef20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40672f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f4d430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40670430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x40f4d768"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40670768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40687cb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f8db18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406b5150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f8df20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f8c3f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406b5600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40f8c820"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f8e3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f8ce18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40fc3b98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4065ad70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40fc2250"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40756368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40fd19e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4077f610"/></to>
    </wire>
    <wire loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4077f610"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4077c5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fcf150"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fce578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fce578"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40779010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40fd2b20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40753ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x40fd1030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40791250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40fd1428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40791668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40ff70c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408c4838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ff7598"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c3808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ff5d88"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408c3090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x40ff7b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ff3ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40ff3ba0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407d23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="send" scoped="" ref="0x40ff45f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407d23f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407cc810"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407cc810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40889a60"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407cc060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407df290"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x407e4b40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408b3460"/></to>
    </wire>
    <wire loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407df290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40874870"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x408b8e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e0c60"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4088e010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x407df858"/></to>
    </wire>
    <wire loc="36:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x407df858"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40874ca8"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408b3df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x407d8310"/></to>
    </wire>
    <wire loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x407d8310"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40871718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40871718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4100b800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40874870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4100f948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40874ca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4100fd80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4100aa68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4082b980"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4082b980"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4083d8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41008c48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40827c80"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40827c80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40838bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41040660"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40840878"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40840878"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40837798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4103e090"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4083e3c0"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4083e3c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40835728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4088d9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x408b4050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x4107ba70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40926a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41079230"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4060ca60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x410797e8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40925230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41079cc0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40925708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x410785c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41078a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x41078190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41096ea0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40920930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x410942b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4093d928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x410953e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40920e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x410957d8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4093d270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x41095e70"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4093c478"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4093c478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40957ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x410948a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4093ab58"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40957638"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4093f918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40957118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4096c8a0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40980698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40981708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x4097d668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40982668"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4097e4b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40981b00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4097da80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40980330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4097c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40982350"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x4097e178"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x4096ce58"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40980c70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x410a2888"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409c68f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x410a3678"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409c6078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x410a2010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409ac5e0"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409ac5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x407e4b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x410a3010"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409c5098"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x409d0548"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409cd378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409ce408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409ca300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409ce800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409ca718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409cd010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409caeb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x409cf010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409cde48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x409d0b00"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409cd950"/></to>
    </wire>
    <wire loc="75:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a9a2a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b72c88"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409e1010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409eeba8"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a99dc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bb9580"/></to>
    </wire>
    <wire loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a04730"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409da170"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a04f00"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409f9370"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a015b0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x409f9a08"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a01c70"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x409f80e0"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409fe488"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x409daad8"/></to>
    </wire>
    <wire loc="98:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409ffdb8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a99dc0"/></to>
    </wire>
    <wire loc="101:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a1d298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409f8700"/></to>
    </wire>
    <wire loc="103:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a0c690"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40a7cd98"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a7cd98"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4043b750"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a0a148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a79858"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a79858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aa6010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a06728"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a78010"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a78010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aa71e0"/></to>
    </wire>
    <wire loc="107:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a06da0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a78688"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a78688"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40442010"/></to>
    </wire>
    <wire loc="108:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a09820"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a77090"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a77090"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4043c2f0"/></to>
    </wire>
    <wire loc="110:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a029e0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a77a78"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a77a78"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a98bb0"/></to>
    </wire>
    <wire loc="111:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409fdc48"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4060ca60"/></to>
    </wire>
    <wire loc="112:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409ff300"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bdc010"/></to>
    </wire>
    <wire loc="847:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a58dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b72c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410e3010"/></to>
    </wire>
    <wire loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aa71e0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a9f850"/></to>
    </wire>
    <wire loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bb9580"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40be3f18"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a8e810"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40444a98"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a8d220"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40446670"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a8f998"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b2d968"/></to>
    </wire>
    <wire loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b2d968"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b440f0"/></to>
    </wire>
    <wire loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40aa1800"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a9fe68"/></to>
    </wire>
    <wire loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40aa8df0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a9f4c8"/></to>
    </wire>
    <wire loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40aa8178"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a9f168"/></to>
    </wire>
    <wire loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aa6010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a9e5a8"/></to>
    </wire>
    <wire loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a9c3d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b13b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b13b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410fcc58"/></to>
    </wire>
    <wire loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a9cae0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b126d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b126d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410fb7b8"/></to>
    </wire>
    <wire loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ab2780"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40aa3e50"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40aa3e50"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40af21e8"/></to>
    </wire>
    <wire loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40ab1010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="241:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40ac31e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40aed898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40af0010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4043b750"/></to>
    </wire>
    <wire loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40af09e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4043a210"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40aef4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4043ac08"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40aefe88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40439670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b122c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410fb3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410fbc78"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b12b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x410fa170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410fec00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x410fa768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b28c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b453c8"/></to>
    </wire>
    <wire loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b31230"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b210e0"/></to>
    </wire>
    <wire loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b27c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b41010"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b27c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b40c08"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b27c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b3d830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x410e2a18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b31230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4111dcd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b27c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b93868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b31230"/></to>
    </wire>
    <wire loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40be28c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bb4e60"/></to>
    </wire>
    <wire loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40be40e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bb6698"/></to>
    </wire>
    <wire loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bb6698"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bb0e90"/></to>
    </wire>
    <wire loc="32:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bcf078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b31230"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c186e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c020a0"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c01110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40c1a8e8"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c1a8e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40433a08"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c01af8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40c19308"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c19308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40433010"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c00580"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40c19d10"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c19d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40427538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x411015f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4113dde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x4113dde0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c2f348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4113c9a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d10c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c2c740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4113c9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c2b010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c51010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40c4f418"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4113ce80"/></to>
    </wire>
    <wire loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c2f348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ce09d8"/></to>
    </wire>
    <wire loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40c2a7a8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40cde178"/></to>
    </wire>
    <wire loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d14390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c2b010"/></to>
    </wire>
    <wire loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cdc6b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c2c740"/></to>
    </wire>
    <wire loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40d15710"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cdf1d8"/></to>
    </wire>
    <wire loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40cdede8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c4c9e8"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c4c9e8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c468f0"/></to>
    </wire>
    <wire loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40cdcd98"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bdc010"/></to>
    </wire>
    <wire loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c49b88"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c46e78"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c51010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cc7420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40cc7420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41131010"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40cc6b58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c4f418"/></to>
    </wire>
    <wire loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c68818"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c4ba08"/></to>
    </wire>
    <wire loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c4ba08"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c75730"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c44ce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40422268"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40cc49f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40c46460"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ce4150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cc6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cc6010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41131b58"/></to>
    </wire>
    <wire loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40c72b40"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40cc7b60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41131750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40cc66a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41130230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411306f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40cc6b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41130b18"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41134dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4112fd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41153758"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40cc49f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41153b50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40cc4de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41153e68"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ce4150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41151510"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ce47e8"/></to>
    </wire>
    <wire loc="104:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40d009b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41149a68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4113f538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d0e4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41146150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41146150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40527078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d0eb68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x411467e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411467e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052edf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d77790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41145410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41145410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4052c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4113fc00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d4df00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4113e310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052edf8"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d4df00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d47da0"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d51598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x404f87f0"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d51c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052edf8"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d4f850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40527078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40d4ff28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40d4e370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d745d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40527078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d74c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4052edf8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="33(HplAtm128GeneralIOC.G5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RF230RadioC.PacketLinkLayerC.PacketLinkLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RF230RadioC.PacketLinkLayerC.DelayTimerC):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407dbf08"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="44(OscilloscopeAppC.TimerMilliC):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="19(OscilloscopeAppC.Sensor):/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.DemoChannel" loc="39(OscilloscopeAppC.Sensor.DemoChannel):/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC):/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404575e8" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40457800" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40457a18" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404669e8" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40466c10" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40466e38" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40463068" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404b1088" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404b12b0" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404b14d8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404b16c8" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406864c0" loc="83:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40691298" loc="42:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407dbf08" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407dbf08"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407ef0f0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407e8328" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407e8328"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407e84e8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407e16e8" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407e16e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4088cd10" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4088cd10"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4088cef0" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408b13f8" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408b13f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b94c40" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b94c40"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40b94e60" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b6e940" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b6e940"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b6ed88" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b6ed88"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b85010" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bb1490" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bb1490"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bb18d8" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bb18d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40bca5e0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40bca5e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40bcaa40" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40bcaa40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40bcaca8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40bcaca8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40bc8148" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40bc8148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40bc83b0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40bc8838" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40bc8838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="19:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40c77860" loc="89:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40ca9b20" loc="42:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40cc1528" loc="52:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40ce1de8" loc="23:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40ce1de8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c3b698" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d332b0" loc="47:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d31d48" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40d493c0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d76a70" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x403ad078" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403ad078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403ad250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x403f8a70" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x403f8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403f8c48"/>
        <function-ref name="getPayload" scoped="" ref="0x403f8d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403f8e08"/>
        <function-ref name="cancel" scoped="" ref="0x403f8ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x403a7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403aa4e0" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403aa4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403aa6b8"/>
        <function-ref name="stopDone" scoped="" ref="0x403aa798"/>
        <function-ref name="start" scoped="" ref="0x403aa878"/>
        <function-ref name="stop" scoped="" ref="0x403aa958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x403ff218" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x403ff218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x403ff840"/>
        <function-ref name="readDone" scoped="" ref="0x403ffa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x403f6d50" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x403f6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403f6f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040cdf8" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40401010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404010f0"/>
        <function-ref name="led1On" scoped="" ref="0x404011d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404012b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40401390"/>
        <function-ref name="get" scoped="" ref="0x40401470"/>
        <function-ref name="led1Off" scoped="" ref="0x40401550"/>
        <function-ref name="led2Off" scoped="" ref="0x404018d0"/>
        <function-ref name="set" scoped="" ref="0x40401630"/>
        <function-ref name="led0On" scoped="" ref="0x40401710"/>
        <function-ref name="led2On" scoped="" ref="0x404017f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x403faba8" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x403faba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403f46a8"/>
        <function-ref name="fired" scoped="" ref="0x403f5948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403f4068"/>
        <function-ref name="isOneShot" scoped="" ref="0x403f5df8"/>
        <function-ref name="getdt" scoped="" ref="0x403f4b58"/>
        <function-ref name="gett0" scoped="" ref="0x403f4900"/>
        <function-ref name="isRunning" scoped="" ref="0x403f5ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403f51f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403f4388"/>
        <function-ref name="startOneShot" scoped="" ref="0x403f5470"/>
        <function-ref name="stop" scoped="" ref="0x403f56f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4041f4a0" loc="58:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4041f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041f678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40418858" loc="57:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40418858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40418a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404229c8" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404229c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40422ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4041e868" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4041e868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40422268" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40422268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40422440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40422520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40422600"/>
        <function-ref name="actualMicro" scoped="" ref="0x404226e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404227c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4042a088" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4042a088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042a260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4041dc68" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4041dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041de40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4042a490" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4042a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042a668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4041c870" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4041c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4041c4a0" loc="17:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4041c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041c678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4042f4a8" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4042f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4042ba68" loc="21:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4042ba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042bc40"/>
        <function-ref name="isInput" scoped="" ref="0x4042bd20"/>
        <function-ref name="toggle" scoped="" ref="0x4042be00"/>
        <function-ref name="isOutput" scoped="" ref="0x4042bee0"/>
        <function-ref name="get" scoped="" ref="0x4042f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f0f0"/>
        <function-ref name="set" scoped="" ref="0x4042f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40430420" loc="20:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40430420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404305f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40450210" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40450210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404505e8"/>
        <function-ref name="isInput" scoped="" ref="0x404506c8"/>
        <function-ref name="toggle" scoped="" ref="0x404507a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40450888"/>
        <function-ref name="get" scoped="" ref="0x40450968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450a48"/>
        <function-ref name="set" scoped="" ref="0x40450b28"/>
        <function-ref name="clr" scoped="" ref="0x40450c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40448750" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40448750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448928"/>
        <function-ref name="isInput" scoped="" ref="0x40448a08"/>
        <function-ref name="toggle" scoped="" ref="0x40448ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40448bc8"/>
        <function-ref name="get" scoped="" ref="0x40448ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448d88"/>
        <function-ref name="set" scoped="" ref="0x40448e68"/>
        <function-ref name="clr" scoped="" ref="0x40447010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4044dce8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4044dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4044c010"/>
        <function-ref name="toggle" scoped="" ref="0x4044c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c1d0"/>
        <function-ref name="get" scoped="" ref="0x4044c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c390"/>
        <function-ref name="set" scoped="" ref="0x4044c470"/>
        <function-ref name="clr" scoped="" ref="0x4044c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40454ea8" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40454ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404530c0"/>
        <function-ref name="isInput" scoped="" ref="0x404531a0"/>
        <function-ref name="toggle" scoped="" ref="0x40453280"/>
        <function-ref name="isOutput" scoped="" ref="0x40453360"/>
        <function-ref name="get" scoped="" ref="0x40453440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453520"/>
        <function-ref name="set" scoped="" ref="0x40453600"/>
        <function-ref name="clr" scoped="" ref="0x404536e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40459750" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40459750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459928"/>
        <function-ref name="isInput" scoped="" ref="0x40459a08"/>
        <function-ref name="toggle" scoped="" ref="0x40459ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40459bc8"/>
        <function-ref name="get" scoped="" ref="0x40459ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459d88"/>
        <function-ref name="set" scoped="" ref="0x40459e68"/>
        <function-ref name="clr" scoped="" ref="0x40458010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4043c2f0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4043c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043c5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043c688"/>
        <function-ref name="isOutput" scoped="" ref="0x4043c768"/>
        <function-ref name="get" scoped="" ref="0x4043c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043c928"/>
        <function-ref name="set" scoped="" ref="0x4043ca08"/>
        <function-ref name="clr" scoped="" ref="0x4043cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40449a98" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40449a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449c70"/>
        <function-ref name="isInput" scoped="" ref="0x40449d50"/>
        <function-ref name="toggle" scoped="" ref="0x40449e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40449f10"/>
        <function-ref name="get" scoped="" ref="0x40454010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404540f0"/>
        <function-ref name="set" scoped="" ref="0x404541d0"/>
        <function-ref name="clr" scoped="" ref="0x404542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4043b750" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4043b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b928"/>
        <function-ref name="isInput" scoped="" ref="0x4043ba08"/>
        <function-ref name="toggle" scoped="" ref="0x4043bae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043bbc8"/>
        <function-ref name="get" scoped="" ref="0x4043bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043bd88"/>
        <function-ref name="set" scoped="" ref="0x4043be68"/>
        <function-ref name="clr" scoped="" ref="0x4043a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x40441ea8" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x40441ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404400c0"/>
        <function-ref name="isInput" scoped="" ref="0x404401a0"/>
        <function-ref name="toggle" scoped="" ref="0x40440280"/>
        <function-ref name="isOutput" scoped="" ref="0x40440360"/>
        <function-ref name="get" scoped="" ref="0x40440440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440520"/>
        <function-ref name="set" scoped="" ref="0x40440600"/>
        <function-ref name="clr" scoped="" ref="0x404406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40446670" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40446670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446848"/>
        <function-ref name="isInput" scoped="" ref="0x40446928"/>
        <function-ref name="toggle" scoped="" ref="0x40446a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40446ae8"/>
        <function-ref name="get" scoped="" ref="0x40446bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446ca8"/>
        <function-ref name="set" scoped="" ref="0x40446d88"/>
        <function-ref name="clr" scoped="" ref="0x40446e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4044bc08" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4044bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4044bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4044a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a0f0"/>
        <function-ref name="get" scoped="" ref="0x4044a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a2b0"/>
        <function-ref name="set" scoped="" ref="0x4044a390"/>
        <function-ref name="clr" scoped="" ref="0x4044a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40433010" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40433010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404331e8"/>
        <function-ref name="isInput" scoped="" ref="0x404332c8"/>
        <function-ref name="toggle" scoped="" ref="0x404333a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40433488"/>
        <function-ref name="get" scoped="" ref="0x40433568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433648"/>
        <function-ref name="set" scoped="" ref="0x40433728"/>
        <function-ref name="clr" scoped="" ref="0x40433808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40439670" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40439670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439848"/>
        <function-ref name="isInput" scoped="" ref="0x40439928"/>
        <function-ref name="toggle" scoped="" ref="0x40439a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40439ae8"/>
        <function-ref name="get" scoped="" ref="0x40439bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439ca8"/>
        <function-ref name="set" scoped="" ref="0x40439d88"/>
        <function-ref name="clr" scoped="" ref="0x40439e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4043fce8" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4043fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4043e010"/>
        <function-ref name="toggle" scoped="" ref="0x4043e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e1d0"/>
        <function-ref name="get" scoped="" ref="0x4043e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e390"/>
        <function-ref name="set" scoped="" ref="0x4043e470"/>
        <function-ref name="clr" scoped="" ref="0x4043e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404434b0" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404434b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443688"/>
        <function-ref name="isInput" scoped="" ref="0x40443768"/>
        <function-ref name="toggle" scoped="" ref="0x40443848"/>
        <function-ref name="isOutput" scoped="" ref="0x40443928"/>
        <function-ref name="get" scoped="" ref="0x40443a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40443ae8"/>
        <function-ref name="set" scoped="" ref="0x40443bc8"/>
        <function-ref name="clr" scoped="" ref="0x40443ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40452ce8" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40452ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40451010"/>
        <function-ref name="toggle" scoped="" ref="0x404510f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404511d0"/>
        <function-ref name="get" scoped="" ref="0x404512b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451390"/>
        <function-ref name="set" scoped="" ref="0x40451470"/>
        <function-ref name="clr" scoped="" ref="0x40451550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4045a2f0" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4045a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a768"/>
        <function-ref name="get" scoped="" ref="0x4045a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a928"/>
        <function-ref name="set" scoped="" ref="0x4045aa08"/>
        <function-ref name="clr" scoped="" ref="0x4045aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4044e8e0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4044e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044eab8"/>
        <function-ref name="isInput" scoped="" ref="0x4044eb98"/>
        <function-ref name="toggle" scoped="" ref="0x4044ec78"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ed58"/>
        <function-ref name="get" scoped="" ref="0x4044ee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ef18"/>
        <function-ref name="set" scoped="" ref="0x4044d010"/>
        <function-ref name="clr" scoped="" ref="0x4044d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40432ea8" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40432ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404310c0"/>
        <function-ref name="isInput" scoped="" ref="0x404311a0"/>
        <function-ref name="toggle" scoped="" ref="0x40431280"/>
        <function-ref name="isOutput" scoped="" ref="0x40431360"/>
        <function-ref name="get" scoped="" ref="0x40431440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431520"/>
        <function-ref name="set" scoped="" ref="0x40431600"/>
        <function-ref name="clr" scoped="" ref="0x404316e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40437590" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40437590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437768"/>
        <function-ref name="isInput" scoped="" ref="0x40437848"/>
        <function-ref name="toggle" scoped="" ref="0x40437928"/>
        <function-ref name="isOutput" scoped="" ref="0x40437a08"/>
        <function-ref name="get" scoped="" ref="0x40437ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437bc8"/>
        <function-ref name="set" scoped="" ref="0x40437ca8"/>
        <function-ref name="clr" scoped="" ref="0x40437d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40450e08" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40450e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f010"/>
        <function-ref name="isInput" scoped="" ref="0x4044f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4044f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f2b0"/>
        <function-ref name="get" scoped="" ref="0x4044f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f470"/>
        <function-ref name="set" scoped="" ref="0x4044f550"/>
        <function-ref name="clr" scoped="" ref="0x4044f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40442a08" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40442a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442be0"/>
        <function-ref name="isInput" scoped="" ref="0x40442cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40442da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40442e80"/>
        <function-ref name="get" scoped="" ref="0x40441010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404410f0"/>
        <function-ref name="set" scoped="" ref="0x404411d0"/>
        <function-ref name="clr" scoped="" ref="0x404412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40447210" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40447210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404473e8"/>
        <function-ref name="isInput" scoped="" ref="0x404474c8"/>
        <function-ref name="toggle" scoped="" ref="0x404475a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40447688"/>
        <function-ref name="get" scoped="" ref="0x40447768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447848"/>
        <function-ref name="set" scoped="" ref="0x40447928"/>
        <function-ref name="clr" scoped="" ref="0x40447a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4044c750" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4044c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c928"/>
        <function-ref name="isInput" scoped="" ref="0x4044ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4044cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044cbc8"/>
        <function-ref name="get" scoped="" ref="0x4044cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044cd88"/>
        <function-ref name="set" scoped="" ref="0x4044ce68"/>
        <function-ref name="clr" scoped="" ref="0x4044b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404538e0" loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404538e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40453b98"/>
        <function-ref name="toggle" scoped="" ref="0x40453c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40453d58"/>
        <function-ref name="get" scoped="" ref="0x40453e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453f18"/>
        <function-ref name="set" scoped="" ref="0x40452010"/>
        <function-ref name="clr" scoped="" ref="0x404520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4043cce8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4043cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043cec0"/>
        <function-ref name="isInput" scoped="" ref="0x4043b010"/>
        <function-ref name="toggle" scoped="" ref="0x4043b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b1d0"/>
        <function-ref name="get" scoped="" ref="0x4043b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b390"/>
        <function-ref name="set" scoped="" ref="0x4043b470"/>
        <function-ref name="clr" scoped="" ref="0x4043b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4043a210" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4043a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043a4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a688"/>
        <function-ref name="get" scoped="" ref="0x4043a768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a848"/>
        <function-ref name="set" scoped="" ref="0x4043a928"/>
        <function-ref name="clr" scoped="" ref="0x4043aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404408e0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404408e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40440b98"/>
        <function-ref name="toggle" scoped="" ref="0x40440c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40440d58"/>
        <function-ref name="get" scoped="" ref="0x40440e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440f18"/>
        <function-ref name="set" scoped="" ref="0x4043f010"/>
        <function-ref name="clr" scoped="" ref="0x4043f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404440a0" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444278"/>
        <function-ref name="isInput" scoped="" ref="0x40444358"/>
        <function-ref name="toggle" scoped="" ref="0x40444438"/>
        <function-ref name="isOutput" scoped="" ref="0x40444518"/>
        <function-ref name="get" scoped="" ref="0x404445f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404446d8"/>
        <function-ref name="set" scoped="" ref="0x404447b8"/>
        <function-ref name="clr" scoped="" ref="0x40444898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4044a670" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4044a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a848"/>
        <function-ref name="isInput" scoped="" ref="0x4044a928"/>
        <function-ref name="toggle" scoped="" ref="0x4044aa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4044aae8"/>
        <function-ref name="get" scoped="" ref="0x4044abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044aca8"/>
        <function-ref name="set" scoped="" ref="0x4044ad88"/>
        <function-ref name="clr" scoped="" ref="0x4044ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40433a08" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40433a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433be0"/>
        <function-ref name="isInput" scoped="" ref="0x40433cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40433da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40433e80"/>
        <function-ref name="get" scoped="" ref="0x40432010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404320f0"/>
        <function-ref name="set" scoped="" ref="0x404321d0"/>
        <function-ref name="clr" scoped="" ref="0x404322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404380a0" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404382f8"/>
        <function-ref name="isInput" scoped="" ref="0x404383d8"/>
        <function-ref name="toggle" scoped="" ref="0x404384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40438598"/>
        <function-ref name="get" scoped="" ref="0x40438678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438758"/>
        <function-ref name="set" scoped="" ref="0x40438838"/>
        <function-ref name="clr" scoped="" ref="0x40438918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4043e750" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4043e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e928"/>
        <function-ref name="isInput" scoped="" ref="0x4043ea08"/>
        <function-ref name="toggle" scoped="" ref="0x4043eae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ebc8"/>
        <function-ref name="get" scoped="" ref="0x4043eca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ed88"/>
        <function-ref name="set" scoped="" ref="0x4043ee68"/>
        <function-ref name="clr" scoped="" ref="0x4043d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40451750" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40451750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451928"/>
        <function-ref name="isInput" scoped="" ref="0x40451a08"/>
        <function-ref name="toggle" scoped="" ref="0x40451ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40451bc8"/>
        <function-ref name="get" scoped="" ref="0x40451ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451d88"/>
        <function-ref name="set" scoped="" ref="0x40451e68"/>
        <function-ref name="clr" scoped="" ref="0x40450010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4043dc08" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4043dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043dee0"/>
        <function-ref name="isInput" scoped="" ref="0x40448010"/>
        <function-ref name="toggle" scoped="" ref="0x404480f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404481d0"/>
        <function-ref name="get" scoped="" ref="0x404482b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448390"/>
        <function-ref name="set" scoped="" ref="0x40448470"/>
        <function-ref name="clr" scoped="" ref="0x40448550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4044d2f0" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4044d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4044d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4044d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4044d768"/>
        <function-ref name="get" scoped="" ref="0x4044d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d928"/>
        <function-ref name="set" scoped="" ref="0x4044da08"/>
        <function-ref name="clr" scoped="" ref="0x4044dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404544b0" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404544b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454688"/>
        <function-ref name="isInput" scoped="" ref="0x40454768"/>
        <function-ref name="toggle" scoped="" ref="0x40454848"/>
        <function-ref name="isOutput" scoped="" ref="0x40454928"/>
        <function-ref name="get" scoped="" ref="0x40454a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454ae8"/>
        <function-ref name="set" scoped="" ref="0x40454bc8"/>
        <function-ref name="clr" scoped="" ref="0x40454ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4045ace8" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4045ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40459010"/>
        <function-ref name="toggle" scoped="" ref="0x404590f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404591d0"/>
        <function-ref name="get" scoped="" ref="0x404592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459390"/>
        <function-ref name="set" scoped="" ref="0x40459470"/>
        <function-ref name="clr" scoped="" ref="0x40459550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404318e0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404318e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40431b98"/>
        <function-ref name="toggle" scoped="" ref="0x40431c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40431d58"/>
        <function-ref name="get" scoped="" ref="0x40431e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431f18"/>
        <function-ref name="set" scoped="" ref="0x4043c010"/>
        <function-ref name="clr" scoped="" ref="0x4043c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40442010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40442010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404421e8"/>
        <function-ref name="isInput" scoped="" ref="0x404422c8"/>
        <function-ref name="toggle" scoped="" ref="0x404423a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40442488"/>
        <function-ref name="get" scoped="" ref="0x40442568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442648"/>
        <function-ref name="set" scoped="" ref="0x40442728"/>
        <function-ref name="clr" scoped="" ref="0x40442808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404490a0" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449278"/>
        <function-ref name="isInput" scoped="" ref="0x40449358"/>
        <function-ref name="toggle" scoped="" ref="0x40449438"/>
        <function-ref name="isOutput" scoped="" ref="0x40449518"/>
        <function-ref name="get" scoped="" ref="0x404495f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404496d8"/>
        <function-ref name="set" scoped="" ref="0x404497b8"/>
        <function-ref name="clr" scoped="" ref="0x40449898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404414b0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404414b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40441688"/>
        <function-ref name="isInput" scoped="" ref="0x40441768"/>
        <function-ref name="toggle" scoped="" ref="0x40441848"/>
        <function-ref name="isOutput" scoped="" ref="0x40441928"/>
        <function-ref name="get" scoped="" ref="0x40441a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40441ae8"/>
        <function-ref name="set" scoped="" ref="0x40441bc8"/>
        <function-ref name="clr" scoped="" ref="0x40441ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40447c08" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40447c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447de0"/>
        <function-ref name="isInput" scoped="" ref="0x40447ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40446010"/>
        <function-ref name="isOutput" scoped="" ref="0x404460f0"/>
        <function-ref name="get" scoped="" ref="0x404461d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404462b0"/>
        <function-ref name="set" scoped="" ref="0x40446390"/>
        <function-ref name="clr" scoped="" ref="0x40446470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4044b210" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4044b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4044b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4044b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044b688"/>
        <function-ref name="get" scoped="" ref="0x4044b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b848"/>
        <function-ref name="set" scoped="" ref="0x4044b928"/>
        <function-ref name="clr" scoped="" ref="0x4044ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404522f0" loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404524c8"/>
        <function-ref name="isInput" scoped="" ref="0x404525a8"/>
        <function-ref name="toggle" scoped="" ref="0x40452688"/>
        <function-ref name="isOutput" scoped="" ref="0x40452768"/>
        <function-ref name="get" scoped="" ref="0x40452848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452928"/>
        <function-ref name="set" scoped="" ref="0x40452a08"/>
        <function-ref name="clr" scoped="" ref="0x40452ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40427538" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40427538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427710"/>
        <function-ref name="isInput" scoped="" ref="0x404277f0"/>
        <function-ref name="toggle" scoped="" ref="0x404278d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404279b0"/>
        <function-ref name="get" scoped="" ref="0x40427a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427b70"/>
        <function-ref name="set" scoped="" ref="0x40427c50"/>
        <function-ref name="clr" scoped="" ref="0x40427d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4043ac08" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4043ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4043aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40439010"/>
        <function-ref name="isOutput" scoped="" ref="0x404390f0"/>
        <function-ref name="get" scoped="" ref="0x404391d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404392b0"/>
        <function-ref name="set" scoped="" ref="0x40439390"/>
        <function-ref name="clr" scoped="" ref="0x40439470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4043f2f0" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4043f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f768"/>
        <function-ref name="get" scoped="" ref="0x4043f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f928"/>
        <function-ref name="set" scoped="" ref="0x4043fa08"/>
        <function-ref name="clr" scoped="" ref="0x4043fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40444a98" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40444a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444c70"/>
        <function-ref name="isInput" scoped="" ref="0x40444d50"/>
        <function-ref name="toggle" scoped="" ref="0x40444e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40444f10"/>
        <function-ref name="get" scoped="" ref="0x40443010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404430f0"/>
        <function-ref name="set" scoped="" ref="0x404431d0"/>
        <function-ref name="clr" scoped="" ref="0x404432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4044f830" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4044f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044fa08"/>
        <function-ref name="isInput" scoped="" ref="0x4044fae8"/>
        <function-ref name="toggle" scoped="" ref="0x4044fbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044fca8"/>
        <function-ref name="get" scoped="" ref="0x4044fd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044fe68"/>
        <function-ref name="set" scoped="" ref="0x4045a010"/>
        <function-ref name="clr" scoped="" ref="0x4045a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40443ea8" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40443ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4044e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4044e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4044e360"/>
        <function-ref name="get" scoped="" ref="0x4044e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044e520"/>
        <function-ref name="set" scoped="" ref="0x4044e600"/>
        <function-ref name="clr" scoped="" ref="0x4044e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4043d210" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4043d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043d4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043d5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d688"/>
        <function-ref name="get" scoped="" ref="0x4043d768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d848"/>
        <function-ref name="set" scoped="" ref="0x4043d928"/>
        <function-ref name="clr" scoped="" ref="0x4043da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404324b0" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404324b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432688"/>
        <function-ref name="isInput" scoped="" ref="0x40432768"/>
        <function-ref name="toggle" scoped="" ref="0x40432848"/>
        <function-ref name="isOutput" scoped="" ref="0x40432928"/>
        <function-ref name="get" scoped="" ref="0x40432a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432ae8"/>
        <function-ref name="set" scoped="" ref="0x40432bc8"/>
        <function-ref name="clr" scoped="" ref="0x40432ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40438b18" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40438b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40438dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40438eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40437010"/>
        <function-ref name="get" scoped="" ref="0x404370f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404371d0"/>
        <function-ref name="set" scoped="" ref="0x404372b0"/>
        <function-ref name="clr" scoped="" ref="0x40437390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40484d68" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40484d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483010"/>
        <function-ref name="isInput" scoped="" ref="0x404830f0"/>
        <function-ref name="toggle" scoped="" ref="0x404831d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404832b0"/>
        <function-ref name="get" scoped="" ref="0x40483390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483470"/>
        <function-ref name="set" scoped="" ref="0x40483550"/>
        <function-ref name="clr" scoped="" ref="0x40483630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40482ac8" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40482ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40482d80"/>
        <function-ref name="toggle" scoped="" ref="0x40482e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40481010"/>
        <function-ref name="get" scoped="" ref="0x404810f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404811d0"/>
        <function-ref name="set" scoped="" ref="0x404812b0"/>
        <function-ref name="clr" scoped="" ref="0x40481390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40479a28" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40479a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479c00"/>
        <function-ref name="isInput" scoped="" ref="0x40479ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40479dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40479ea0"/>
        <function-ref name="get" scoped="" ref="0x40484010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404840f0"/>
        <function-ref name="set" scoped="" ref="0x404841d0"/>
        <function-ref name="clr" scoped="" ref="0x404842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40483790" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40483790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483968"/>
        <function-ref name="isInput" scoped="" ref="0x40483a48"/>
        <function-ref name="toggle" scoped="" ref="0x40483b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40483c08"/>
        <function-ref name="get" scoped="" ref="0x40483ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483dc8"/>
        <function-ref name="set" scoped="" ref="0x40483ea8"/>
        <function-ref name="clr" scoped="" ref="0x40482010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404814f0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404814f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404816c8"/>
        <function-ref name="isInput" scoped="" ref="0x404817a8"/>
        <function-ref name="toggle" scoped="" ref="0x40481888"/>
        <function-ref name="isOutput" scoped="" ref="0x40481968"/>
        <function-ref name="get" scoped="" ref="0x40481a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481b28"/>
        <function-ref name="set" scoped="" ref="0x40481c08"/>
        <function-ref name="clr" scoped="" ref="0x40481ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40484410" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40484410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404845e8"/>
        <function-ref name="isInput" scoped="" ref="0x404846c8"/>
        <function-ref name="toggle" scoped="" ref="0x404847a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40484888"/>
        <function-ref name="get" scoped="" ref="0x40484968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484a48"/>
        <function-ref name="set" scoped="" ref="0x40484b28"/>
        <function-ref name="clr" scoped="" ref="0x40484c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40482170" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40482170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482348"/>
        <function-ref name="isInput" scoped="" ref="0x40482428"/>
        <function-ref name="toggle" scoped="" ref="0x40482508"/>
        <function-ref name="isOutput" scoped="" ref="0x404825e8"/>
        <function-ref name="get" scoped="" ref="0x404826c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404827a8"/>
        <function-ref name="set" scoped="" ref="0x40482888"/>
        <function-ref name="clr" scoped="" ref="0x40482968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40481e48" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40481e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f050"/>
        <function-ref name="isInput" scoped="" ref="0x4047f130"/>
        <function-ref name="toggle" scoped="" ref="0x4047f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f2f0"/>
        <function-ref name="get" scoped="" ref="0x4047f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f4b0"/>
        <function-ref name="set" scoped="" ref="0x4047f590"/>
        <function-ref name="clr" scoped="" ref="0x4047f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d8ce18" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d8ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d88010"/>
        <function-ref name="isInput" scoped="" ref="0x40d880f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d881d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d882b0"/>
        <function-ref name="get" scoped="" ref="0x40d88390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d88470"/>
        <function-ref name="set" scoped="" ref="0x40d88550"/>
        <function-ref name="clr" scoped="" ref="0x40d88630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d877f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d877f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d879d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d87ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d87b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d87c70"/>
        <function-ref name="get" scoped="" ref="0x40d87d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d87e30"/>
        <function-ref name="set" scoped="" ref="0x40d87f10"/>
        <function-ref name="clr" scoped="" ref="0x40d86010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d85228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d85228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d85400"/>
        <function-ref name="isInput" scoped="" ref="0x40d854e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d855c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d856a0"/>
        <function-ref name="get" scoped="" ref="0x40d85780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d85860"/>
        <function-ref name="set" scoped="" ref="0x40d85940"/>
        <function-ref name="clr" scoped="" ref="0x40d85a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d83c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d83c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d83de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d83ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d82010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d820f0"/>
        <function-ref name="get" scoped="" ref="0x40d821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d822b0"/>
        <function-ref name="set" scoped="" ref="0x40d82390"/>
        <function-ref name="clr" scoped="" ref="0x40d82470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d816c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d816c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d81898"/>
        <function-ref name="isInput" scoped="" ref="0x40d81978"/>
        <function-ref name="toggle" scoped="" ref="0x40d81a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d81b38"/>
        <function-ref name="get" scoped="" ref="0x40d81c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d81cf8"/>
        <function-ref name="set" scoped="" ref="0x40d81dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d81eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db20b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db2288"/>
        <function-ref name="isInput" scoped="" ref="0x40db2368"/>
        <function-ref name="toggle" scoped="" ref="0x40db2448"/>
        <function-ref name="isOutput" scoped="" ref="0x40db2528"/>
        <function-ref name="get" scoped="" ref="0x40db2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db26e8"/>
        <function-ref name="set" scoped="" ref="0x40db27c8"/>
        <function-ref name="clr" scoped="" ref="0x40db28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db1a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db1c60"/>
        <function-ref name="isInput" scoped="" ref="0x40db1d40"/>
        <function-ref name="toggle" scoped="" ref="0x40db1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40db1f00"/>
        <function-ref name="get" scoped="" ref="0x40db0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db00f0"/>
        <function-ref name="set" scoped="" ref="0x40db01d0"/>
        <function-ref name="clr" scoped="" ref="0x40db02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40daf538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40daf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40daf710"/>
        <function-ref name="isInput" scoped="" ref="0x40daf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40daf8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40daf9b0"/>
        <function-ref name="get" scoped="" ref="0x40dafa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dafb70"/>
        <function-ref name="set" scoped="" ref="0x40dafc50"/>
        <function-ref name="clr" scoped="" ref="0x40dafd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404876b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404876b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487888"/>
        <function-ref name="isInput" scoped="" ref="0x40487968"/>
        <function-ref name="toggle" scoped="" ref="0x40487a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40487b28"/>
        <function-ref name="get" scoped="" ref="0x40487c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487ce8"/>
        <function-ref name="set" scoped="" ref="0x40487dc8"/>
        <function-ref name="clr" scoped="" ref="0x40487ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40485330" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40485330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485508"/>
        <function-ref name="isInput" scoped="" ref="0x404855e8"/>
        <function-ref name="toggle" scoped="" ref="0x404856c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404857a8"/>
        <function-ref name="get" scoped="" ref="0x40485888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485968"/>
        <function-ref name="set" scoped="" ref="0x40485a48"/>
        <function-ref name="clr" scoped="" ref="0x40485b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404883d8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404883d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404885b0"/>
        <function-ref name="isInput" scoped="" ref="0x40488690"/>
        <function-ref name="toggle" scoped="" ref="0x40488770"/>
        <function-ref name="isOutput" scoped="" ref="0x40488850"/>
        <function-ref name="get" scoped="" ref="0x40488930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488a10"/>
        <function-ref name="set" scoped="" ref="0x40488af0"/>
        <function-ref name="clr" scoped="" ref="0x40488bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40486030" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40486030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486208"/>
        <function-ref name="isInput" scoped="" ref="0x404862e8"/>
        <function-ref name="toggle" scoped="" ref="0x404863c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404864a8"/>
        <function-ref name="get" scoped="" ref="0x40486588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486668"/>
        <function-ref name="set" scoped="" ref="0x40486748"/>
        <function-ref name="clr" scoped="" ref="0x40486828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40485c88" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40485c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485e60"/>
        <function-ref name="isInput" scoped="" ref="0x40490010"/>
        <function-ref name="toggle" scoped="" ref="0x404900f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404901d0"/>
        <function-ref name="get" scoped="" ref="0x404902b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490390"/>
        <function-ref name="set" scoped="" ref="0x40490470"/>
        <function-ref name="clr" scoped="" ref="0x40490550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40488d30" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40488d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488f08"/>
        <function-ref name="isInput" scoped="" ref="0x40487010"/>
        <function-ref name="toggle" scoped="" ref="0x404870f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404871d0"/>
        <function-ref name="get" scoped="" ref="0x404872b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487390"/>
        <function-ref name="set" scoped="" ref="0x40487470"/>
        <function-ref name="clr" scoped="" ref="0x40487550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40486988" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40486988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486b60"/>
        <function-ref name="isInput" scoped="" ref="0x40486c40"/>
        <function-ref name="toggle" scoped="" ref="0x40486d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40486e00"/>
        <function-ref name="get" scoped="" ref="0x40486ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485010"/>
        <function-ref name="set" scoped="" ref="0x404850f0"/>
        <function-ref name="clr" scoped="" ref="0x404851d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404906b0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404906b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490888"/>
        <function-ref name="isInput" scoped="" ref="0x40490968"/>
        <function-ref name="toggle" scoped="" ref="0x40490a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40490b28"/>
        <function-ref name="get" scoped="" ref="0x40490c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490ce8"/>
        <function-ref name="set" scoped="" ref="0x40490dc8"/>
        <function-ref name="clr" scoped="" ref="0x40490ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db4938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db4938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db4b10"/>
        <function-ref name="isInput" scoped="" ref="0x40db4bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40db4cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40db4db0"/>
        <function-ref name="get" scoped="" ref="0x40db4e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db3010"/>
        <function-ref name="set" scoped="" ref="0x40db30f0"/>
        <function-ref name="clr" scoped="" ref="0x40db31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de43b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de4588"/>
        <function-ref name="isInput" scoped="" ref="0x40de4668"/>
        <function-ref name="toggle" scoped="" ref="0x40de4748"/>
        <function-ref name="isOutput" scoped="" ref="0x40de4828"/>
        <function-ref name="get" scoped="" ref="0x40de4908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de49e8"/>
        <function-ref name="set" scoped="" ref="0x40de4ac8"/>
        <function-ref name="clr" scoped="" ref="0x40de4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de3d70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de2010"/>
        <function-ref name="isInput" scoped="" ref="0x40de20f0"/>
        <function-ref name="toggle" scoped="" ref="0x40de21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40de22b0"/>
        <function-ref name="get" scoped="" ref="0x40de2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de2470"/>
        <function-ref name="set" scoped="" ref="0x40de2550"/>
        <function-ref name="clr" scoped="" ref="0x40de2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de17f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de17f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de19d0"/>
        <function-ref name="isInput" scoped="" ref="0x40de1ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40de1b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40de1c70"/>
        <function-ref name="get" scoped="" ref="0x40de1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de1e30"/>
        <function-ref name="set" scoped="" ref="0x40de1f10"/>
        <function-ref name="clr" scoped="" ref="0x40de0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddf228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddf228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddf400"/>
        <function-ref name="isInput" scoped="" ref="0x40ddf4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ddf5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddf6a0"/>
        <function-ref name="get" scoped="" ref="0x40ddf780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddf860"/>
        <function-ref name="set" scoped="" ref="0x40ddf940"/>
        <function-ref name="clr" scoped="" ref="0x40ddfa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddec08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddede0"/>
        <function-ref name="isInput" scoped="" ref="0x40ddeec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ddd010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddd0f0"/>
        <function-ref name="get" scoped="" ref="0x40ddd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddd2b0"/>
        <function-ref name="set" scoped="" ref="0x40ddd390"/>
        <function-ref name="clr" scoped="" ref="0x40ddd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddc6c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddc898"/>
        <function-ref name="isInput" scoped="" ref="0x40ddc978"/>
        <function-ref name="toggle" scoped="" ref="0x40ddca58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddcb38"/>
        <function-ref name="get" scoped="" ref="0x40ddcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddccf8"/>
        <function-ref name="set" scoped="" ref="0x40ddcdd8"/>
        <function-ref name="clr" scoped="" ref="0x40ddceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dda0b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dda0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dda288"/>
        <function-ref name="isInput" scoped="" ref="0x40dda368"/>
        <function-ref name="toggle" scoped="" ref="0x40dda448"/>
        <function-ref name="isOutput" scoped="" ref="0x40dda528"/>
        <function-ref name="get" scoped="" ref="0x40dda608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dda6e8"/>
        <function-ref name="set" scoped="" ref="0x40dda7c8"/>
        <function-ref name="clr" scoped="" ref="0x40dda8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40496170" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40496170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496348"/>
        <function-ref name="isInput" scoped="" ref="0x40496428"/>
        <function-ref name="toggle" scoped="" ref="0x40496508"/>
        <function-ref name="isOutput" scoped="" ref="0x404965e8"/>
        <function-ref name="get" scoped="" ref="0x404966c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404967a8"/>
        <function-ref name="set" scoped="" ref="0x40496888"/>
        <function-ref name="clr" scoped="" ref="0x40496968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40495e48" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40495e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494050"/>
        <function-ref name="isInput" scoped="" ref="0x40494130"/>
        <function-ref name="toggle" scoped="" ref="0x40494210"/>
        <function-ref name="isOutput" scoped="" ref="0x404942f0"/>
        <function-ref name="get" scoped="" ref="0x404943d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404944b0"/>
        <function-ref name="set" scoped="" ref="0x40494590"/>
        <function-ref name="clr" scoped="" ref="0x40494670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4048cdc8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4048cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b010"/>
        <function-ref name="isInput" scoped="" ref="0x4048b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4048b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b2b0"/>
        <function-ref name="get" scoped="" ref="0x4048b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b470"/>
        <function-ref name="set" scoped="" ref="0x4048b550"/>
        <function-ref name="clr" scoped="" ref="0x4048b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40496ac8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40496ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40496d80"/>
        <function-ref name="toggle" scoped="" ref="0x40496e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40495010"/>
        <function-ref name="get" scoped="" ref="0x404950f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404951d0"/>
        <function-ref name="set" scoped="" ref="0x404952b0"/>
        <function-ref name="clr" scoped="" ref="0x40495390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404947d0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404947d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404949a8"/>
        <function-ref name="isInput" scoped="" ref="0x40494a88"/>
        <function-ref name="toggle" scoped="" ref="0x40494b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40494c48"/>
        <function-ref name="get" scoped="" ref="0x40494d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40494e08"/>
        <function-ref name="set" scoped="" ref="0x40494ee8"/>
        <function-ref name="clr" scoped="" ref="0x40493010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4048b790" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4048b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b968"/>
        <function-ref name="isInput" scoped="" ref="0x4048ba48"/>
        <function-ref name="toggle" scoped="" ref="0x4048bb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4048bc08"/>
        <function-ref name="get" scoped="" ref="0x4048bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048bdc8"/>
        <function-ref name="set" scoped="" ref="0x4048bea8"/>
        <function-ref name="clr" scoped="" ref="0x40496010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404954f0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404954f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404956c8"/>
        <function-ref name="isInput" scoped="" ref="0x404957a8"/>
        <function-ref name="toggle" scoped="" ref="0x40495888"/>
        <function-ref name="isOutput" scoped="" ref="0x40495968"/>
        <function-ref name="get" scoped="" ref="0x40495a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495b28"/>
        <function-ref name="set" scoped="" ref="0x40495c08"/>
        <function-ref name="clr" scoped="" ref="0x40495ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40493170" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40493170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40493348"/>
        <function-ref name="isInput" scoped="" ref="0x40493428"/>
        <function-ref name="toggle" scoped="" ref="0x40493508"/>
        <function-ref name="isOutput" scoped="" ref="0x404935e8"/>
        <function-ref name="get" scoped="" ref="0x404936c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404937a8"/>
        <function-ref name="set" scoped="" ref="0x40493888"/>
        <function-ref name="clr" scoped="" ref="0x40493968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e12538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e12538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e12710"/>
        <function-ref name="isInput" scoped="" ref="0x40e127f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e128d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e129b0"/>
        <function-ref name="get" scoped="" ref="0x40e12a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e12b70"/>
        <function-ref name="set" scoped="" ref="0x40e12c50"/>
        <function-ref name="clr" scoped="" ref="0x40e12d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e10010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e10010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e101e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e102c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e103a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e10488"/>
        <function-ref name="get" scoped="" ref="0x40e10568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e10648"/>
        <function-ref name="set" scoped="" ref="0x40e10728"/>
        <function-ref name="clr" scoped="" ref="0x40e10808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e0e9e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e0e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e0ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e0eca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e0ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e0ee60"/>
        <function-ref name="get" scoped="" ref="0x40e0d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e0d0f0"/>
        <function-ref name="set" scoped="" ref="0x40e0d1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e0d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e0c538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e0c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e0c710"/>
        <function-ref name="isInput" scoped="" ref="0x40e0c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e0c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e0c9b0"/>
        <function-ref name="get" scoped="" ref="0x40e0ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e0cb70"/>
        <function-ref name="set" scoped="" ref="0x40e0cc50"/>
        <function-ref name="clr" scoped="" ref="0x40e0cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e0a010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e0a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e0a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e0a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e0a488"/>
        <function-ref name="get" scoped="" ref="0x40e0a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e0a648"/>
        <function-ref name="set" scoped="" ref="0x40e0a728"/>
        <function-ref name="clr" scoped="" ref="0x40e0a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e099e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e099e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e09bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e09ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e09d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e09e60"/>
        <function-ref name="get" scoped="" ref="0x40e08010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e080f0"/>
        <function-ref name="set" scoped="" ref="0x40e081d0"/>
        <function-ref name="clr" scoped="" ref="0x40e082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e07538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e07538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e07710"/>
        <function-ref name="isInput" scoped="" ref="0x40e077f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e078d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e079b0"/>
        <function-ref name="get" scoped="" ref="0x40e07a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e07b70"/>
        <function-ref name="set" scoped="" ref="0x40e07c50"/>
        <function-ref name="clr" scoped="" ref="0x40e07d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e05010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e05010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e051e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e052c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e053a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e05488"/>
        <function-ref name="get" scoped="" ref="0x40e05568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e05648"/>
        <function-ref name="set" scoped="" ref="0x40e05728"/>
        <function-ref name="clr" scoped="" ref="0x40e05808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4049b9e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4049b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4049bca0"/>
        <function-ref name="toggle" scoped="" ref="0x4049bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4049be60"/>
        <function-ref name="get" scoped="" ref="0x40499010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404990f0"/>
        <function-ref name="set" scoped="" ref="0x404991d0"/>
        <function-ref name="clr" scoped="" ref="0x404992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40498790" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40498790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40498968"/>
        <function-ref name="isInput" scoped="" ref="0x40498a48"/>
        <function-ref name="toggle" scoped="" ref="0x40498b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40498c08"/>
        <function-ref name="get" scoped="" ref="0x40498ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498dc8"/>
        <function-ref name="set" scoped="" ref="0x40498ea8"/>
        <function-ref name="clr" scoped="" ref="0x40497010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4049c6f8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4049c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4049c9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4049ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x4049cb70"/>
        <function-ref name="get" scoped="" ref="0x4049cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049cd30"/>
        <function-ref name="set" scoped="" ref="0x4049ce10"/>
        <function-ref name="clr" scoped="" ref="0x4049cef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40499410" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40499410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404995e8"/>
        <function-ref name="isInput" scoped="" ref="0x404996c8"/>
        <function-ref name="toggle" scoped="" ref="0x404997a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40499888"/>
        <function-ref name="get" scoped="" ref="0x40499968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40499a48"/>
        <function-ref name="set" scoped="" ref="0x40499b28"/>
        <function-ref name="clr" scoped="" ref="0x40499c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40497170" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40497170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497348"/>
        <function-ref name="isInput" scoped="" ref="0x40497428"/>
        <function-ref name="toggle" scoped="" ref="0x40497508"/>
        <function-ref name="isOutput" scoped="" ref="0x404975e8"/>
        <function-ref name="get" scoped="" ref="0x404976c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404977a8"/>
        <function-ref name="set" scoped="" ref="0x40497888"/>
        <function-ref name="clr" scoped="" ref="0x40497968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4049b090" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4049b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049b268"/>
        <function-ref name="isInput" scoped="" ref="0x4049b348"/>
        <function-ref name="toggle" scoped="" ref="0x4049b428"/>
        <function-ref name="isOutput" scoped="" ref="0x4049b508"/>
        <function-ref name="get" scoped="" ref="0x4049b5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049b6c8"/>
        <function-ref name="set" scoped="" ref="0x4049b7a8"/>
        <function-ref name="clr" scoped="" ref="0x4049b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40499d68" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40499d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40498010"/>
        <function-ref name="isInput" scoped="" ref="0x404980f0"/>
        <function-ref name="toggle" scoped="" ref="0x404981d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404982b0"/>
        <function-ref name="get" scoped="" ref="0x40498390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498470"/>
        <function-ref name="set" scoped="" ref="0x40498550"/>
        <function-ref name="clr" scoped="" ref="0x40498630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40497ac8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40497ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40497d80"/>
        <function-ref name="toggle" scoped="" ref="0x40497e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2010"/>
        <function-ref name="get" scoped="" ref="0x404a20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a21d0"/>
        <function-ref name="set" scoped="" ref="0x404a22b0"/>
        <function-ref name="clr" scoped="" ref="0x404a2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e3e418" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e3e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e3e5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40e3e6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40e3e7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e3e890"/>
        <function-ref name="get" scoped="" ref="0x40e3e970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e3ea50"/>
        <function-ref name="set" scoped="" ref="0x40e3eb30"/>
        <function-ref name="clr" scoped="" ref="0x40e3ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e3dde0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e3dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e3c010"/>
        <function-ref name="isInput" scoped="" ref="0x40e3c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e3c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e3c2b0"/>
        <function-ref name="get" scoped="" ref="0x40e3c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e3c470"/>
        <function-ref name="set" scoped="" ref="0x40e3c550"/>
        <function-ref name="clr" scoped="" ref="0x40e3c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e3b7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e3b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e3b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e3bab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e3bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e3bc70"/>
        <function-ref name="get" scoped="" ref="0x40e3bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e3be30"/>
        <function-ref name="set" scoped="" ref="0x40e3bf10"/>
        <function-ref name="clr" scoped="" ref="0x40e3a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e39228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e39228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e39400"/>
        <function-ref name="isInput" scoped="" ref="0x40e394e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e395c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e396a0"/>
        <function-ref name="get" scoped="" ref="0x40e39780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e39860"/>
        <function-ref name="set" scoped="" ref="0x40e39940"/>
        <function-ref name="clr" scoped="" ref="0x40e39a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e38c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e38c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e38de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e38ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e37010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e370f0"/>
        <function-ref name="get" scoped="" ref="0x40e371d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e372b0"/>
        <function-ref name="set" scoped="" ref="0x40e37390"/>
        <function-ref name="clr" scoped="" ref="0x40e37470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e366c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e36898"/>
        <function-ref name="isInput" scoped="" ref="0x40e36978"/>
        <function-ref name="toggle" scoped="" ref="0x40e36a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e36b38"/>
        <function-ref name="get" scoped="" ref="0x40e36c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e36cf8"/>
        <function-ref name="set" scoped="" ref="0x40e36dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e36eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e340b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e340b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e34288"/>
        <function-ref name="isInput" scoped="" ref="0x40e34368"/>
        <function-ref name="toggle" scoped="" ref="0x40e34448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e34528"/>
        <function-ref name="get" scoped="" ref="0x40e34608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e346e8"/>
        <function-ref name="set" scoped="" ref="0x40e347c8"/>
        <function-ref name="clr" scoped="" ref="0x40e348a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e33a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e33a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e33c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e33d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e33e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e33f00"/>
        <function-ref name="get" scoped="" ref="0x40e32010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e320f0"/>
        <function-ref name="set" scoped="" ref="0x40e321d0"/>
        <function-ref name="clr" scoped="" ref="0x40e322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4049e410" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4049e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4049e6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4049e7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e888"/>
        <function-ref name="get" scoped="" ref="0x4049e968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ea48"/>
        <function-ref name="set" scoped="" ref="0x4049eb28"/>
        <function-ref name="clr" scoped="" ref="0x4049ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404a8170" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404a8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8348"/>
        <function-ref name="isInput" scoped="" ref="0x404a8428"/>
        <function-ref name="toggle" scoped="" ref="0x404a8508"/>
        <function-ref name="isOutput" scoped="" ref="0x404a85e8"/>
        <function-ref name="get" scoped="" ref="0x404a86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a87a8"/>
        <function-ref name="set" scoped="" ref="0x404a8888"/>
        <function-ref name="clr" scoped="" ref="0x404a8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4049f128" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4049f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049f300"/>
        <function-ref name="isInput" scoped="" ref="0x4049f3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4049f4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049f5a0"/>
        <function-ref name="get" scoped="" ref="0x4049f680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049f760"/>
        <function-ref name="set" scoped="" ref="0x4049f840"/>
        <function-ref name="clr" scoped="" ref="0x4049f920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4049ed68" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4049ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d010"/>
        <function-ref name="isInput" scoped="" ref="0x4049d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4049d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d2b0"/>
        <function-ref name="get" scoped="" ref="0x4049d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d470"/>
        <function-ref name="set" scoped="" ref="0x4049d550"/>
        <function-ref name="clr" scoped="" ref="0x4049d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a8ac8" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404a8d80"/>
        <function-ref name="toggle" scoped="" ref="0x404a8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7010"/>
        <function-ref name="get" scoped="" ref="0x404a70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a71d0"/>
        <function-ref name="set" scoped="" ref="0x404a72b0"/>
        <function-ref name="clr" scoped="" ref="0x404a7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4049fa80" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4049fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049fc58"/>
        <function-ref name="isInput" scoped="" ref="0x4049fd38"/>
        <function-ref name="toggle" scoped="" ref="0x4049fe18"/>
        <function-ref name="isOutput" scoped="" ref="0x4049fef8"/>
        <function-ref name="get" scoped="" ref="0x4049e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e0f0"/>
        <function-ref name="set" scoped="" ref="0x4049e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4049e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4049d790" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4049d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d968"/>
        <function-ref name="isInput" scoped="" ref="0x4049da48"/>
        <function-ref name="toggle" scoped="" ref="0x4049db28"/>
        <function-ref name="isOutput" scoped="" ref="0x4049dc08"/>
        <function-ref name="get" scoped="" ref="0x4049dce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ddc8"/>
        <function-ref name="set" scoped="" ref="0x4049dea8"/>
        <function-ref name="clr" scoped="" ref="0x404a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a74f0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a76c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a77a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a7888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7968"/>
        <function-ref name="get" scoped="" ref="0x404a7a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7b28"/>
        <function-ref name="set" scoped="" ref="0x404a7c08"/>
        <function-ref name="clr" scoped="" ref="0x404a7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e72de8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e72de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6d010"/>
        <function-ref name="isInput" scoped="" ref="0x40e6d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e6d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6d2b0"/>
        <function-ref name="get" scoped="" ref="0x40e6d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6d470"/>
        <function-ref name="set" scoped="" ref="0x40e6d550"/>
        <function-ref name="clr" scoped="" ref="0x40e6d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e6c7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e6c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e6cab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e6cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6cc70"/>
        <function-ref name="get" scoped="" ref="0x40e6cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6ce30"/>
        <function-ref name="set" scoped="" ref="0x40e6cf10"/>
        <function-ref name="clr" scoped="" ref="0x40e6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e6a228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e6a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6a400"/>
        <function-ref name="isInput" scoped="" ref="0x40e6a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e6a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6a6a0"/>
        <function-ref name="get" scoped="" ref="0x40e6a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6a860"/>
        <function-ref name="set" scoped="" ref="0x40e6a940"/>
        <function-ref name="clr" scoped="" ref="0x40e6aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e69c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e69c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e69de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e69ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e68010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e680f0"/>
        <function-ref name="get" scoped="" ref="0x40e681d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e682b0"/>
        <function-ref name="set" scoped="" ref="0x40e68390"/>
        <function-ref name="clr" scoped="" ref="0x40e68470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e676c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e67898"/>
        <function-ref name="isInput" scoped="" ref="0x40e67978"/>
        <function-ref name="toggle" scoped="" ref="0x40e67a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e67b38"/>
        <function-ref name="get" scoped="" ref="0x40e67c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e67cf8"/>
        <function-ref name="set" scoped="" ref="0x40e67dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e67eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e650b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e650b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e65288"/>
        <function-ref name="isInput" scoped="" ref="0x40e65368"/>
        <function-ref name="toggle" scoped="" ref="0x40e65448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e65528"/>
        <function-ref name="get" scoped="" ref="0x40e65608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e656e8"/>
        <function-ref name="set" scoped="" ref="0x40e657c8"/>
        <function-ref name="clr" scoped="" ref="0x40e658a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e64a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e64a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e64c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e64d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e64e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e64f00"/>
        <function-ref name="get" scoped="" ref="0x40e97010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e970f0"/>
        <function-ref name="set" scoped="" ref="0x40e971d0"/>
        <function-ref name="clr" scoped="" ref="0x40e972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e96538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e96538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e96710"/>
        <function-ref name="isInput" scoped="" ref="0x40e967f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e968d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e969b0"/>
        <function-ref name="get" scoped="" ref="0x40e96a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e96b70"/>
        <function-ref name="set" scoped="" ref="0x40e96c50"/>
        <function-ref name="clr" scoped="" ref="0x40e96d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404aee48" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404aee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad050"/>
        <function-ref name="isInput" scoped="" ref="0x404ad130"/>
        <function-ref name="toggle" scoped="" ref="0x404ad210"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad2f0"/>
        <function-ref name="get" scoped="" ref="0x404ad3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad4b0"/>
        <function-ref name="set" scoped="" ref="0x404ad590"/>
        <function-ref name="clr" scoped="" ref="0x404ad670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404acac8" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404acac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404acca0"/>
        <function-ref name="isInput" scoped="" ref="0x404acd80"/>
        <function-ref name="toggle" scoped="" ref="0x404ace60"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab010"/>
        <function-ref name="get" scoped="" ref="0x404ab0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab1d0"/>
        <function-ref name="set" scoped="" ref="0x404ab2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ab390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a3b00" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3cd8"/>
        <function-ref name="isInput" scoped="" ref="0x404a3db8"/>
        <function-ref name="toggle" scoped="" ref="0x404a3e98"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae010"/>
        <function-ref name="get" scoped="" ref="0x404ae0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae1d0"/>
        <function-ref name="set" scoped="" ref="0x404ae2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ae390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ad7d0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ad7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404ada88"/>
        <function-ref name="toggle" scoped="" ref="0x404adb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404adc48"/>
        <function-ref name="get" scoped="" ref="0x404add28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ade08"/>
        <function-ref name="set" scoped="" ref="0x404adee8"/>
        <function-ref name="clr" scoped="" ref="0x404ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404ab4f0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404ab4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ab7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ab888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab968"/>
        <function-ref name="get" scoped="" ref="0x404aba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404abb28"/>
        <function-ref name="set" scoped="" ref="0x404abc08"/>
        <function-ref name="clr" scoped="" ref="0x404abce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ae4f0" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ae4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ae7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ae888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae968"/>
        <function-ref name="get" scoped="" ref="0x404aea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aeb28"/>
        <function-ref name="set" scoped="" ref="0x404aec08"/>
        <function-ref name="clr" scoped="" ref="0x404aece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ac170" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ac170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac348"/>
        <function-ref name="isInput" scoped="" ref="0x404ac428"/>
        <function-ref name="toggle" scoped="" ref="0x404ac508"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac5e8"/>
        <function-ref name="get" scoped="" ref="0x404ac6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac7a8"/>
        <function-ref name="set" scoped="" ref="0x404ac888"/>
        <function-ref name="clr" scoped="" ref="0x404ac968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404abe48" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404abe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa050"/>
        <function-ref name="isInput" scoped="" ref="0x404aa130"/>
        <function-ref name="toggle" scoped="" ref="0x404aa210"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa2f0"/>
        <function-ref name="get" scoped="" ref="0x404aa3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa4b0"/>
        <function-ref name="set" scoped="" ref="0x404aa590"/>
        <function-ref name="clr" scoped="" ref="0x404aa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9e938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9eb10"/>
        <function-ref name="isInput" scoped="" ref="0x40e9ebf0"/>
        <function-ref name="toggle" scoped="" ref="0x40e9ecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9edb0"/>
        <function-ref name="get" scoped="" ref="0x40e9ee90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9d010"/>
        <function-ref name="set" scoped="" ref="0x40e9d0f0"/>
        <function-ref name="clr" scoped="" ref="0x40e9d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9c3b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9c588"/>
        <function-ref name="isInput" scoped="" ref="0x40e9c668"/>
        <function-ref name="toggle" scoped="" ref="0x40e9c748"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9c828"/>
        <function-ref name="get" scoped="" ref="0x40e9c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9c9e8"/>
        <function-ref name="set" scoped="" ref="0x40e9cac8"/>
        <function-ref name="clr" scoped="" ref="0x40e9cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9bd70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9a010"/>
        <function-ref name="isInput" scoped="" ref="0x40e9a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e9a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9a2b0"/>
        <function-ref name="get" scoped="" ref="0x40e9a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9a470"/>
        <function-ref name="set" scoped="" ref="0x40e9a550"/>
        <function-ref name="clr" scoped="" ref="0x40e9a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e997f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e997f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e999d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e99ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e99b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e99c70"/>
        <function-ref name="get" scoped="" ref="0x40e99d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e99e30"/>
        <function-ref name="set" scoped="" ref="0x40e99f10"/>
        <function-ref name="clr" scoped="" ref="0x40e98010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecc228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecc400"/>
        <function-ref name="isInput" scoped="" ref="0x40ecc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ecc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecc6a0"/>
        <function-ref name="get" scoped="" ref="0x40ecc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecc860"/>
        <function-ref name="set" scoped="" ref="0x40ecc940"/>
        <function-ref name="clr" scoped="" ref="0x40ecca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecbc08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecbde0"/>
        <function-ref name="isInput" scoped="" ref="0x40ecbec0"/>
        <function-ref name="toggle" scoped="" ref="0x40eca010"/>
        <function-ref name="isOutput" scoped="" ref="0x40eca0f0"/>
        <function-ref name="get" scoped="" ref="0x40eca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eca2b0"/>
        <function-ref name="set" scoped="" ref="0x40eca390"/>
        <function-ref name="clr" scoped="" ref="0x40eca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec96c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec9898"/>
        <function-ref name="isInput" scoped="" ref="0x40ec9978"/>
        <function-ref name="toggle" scoped="" ref="0x40ec9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec9b38"/>
        <function-ref name="get" scoped="" ref="0x40ec9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec9cf8"/>
        <function-ref name="set" scoped="" ref="0x40ec9dd8"/>
        <function-ref name="clr" scoped="" ref="0x40ec9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec70b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec7288"/>
        <function-ref name="isInput" scoped="" ref="0x40ec7368"/>
        <function-ref name="toggle" scoped="" ref="0x40ec7448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec7528"/>
        <function-ref name="get" scoped="" ref="0x40ec7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec76e8"/>
        <function-ref name="set" scoped="" ref="0x40ec77c8"/>
        <function-ref name="clr" scoped="" ref="0x40ec78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b2010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b21e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b22c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2488"/>
        <function-ref name="get" scoped="" ref="0x404b2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2648"/>
        <function-ref name="set" scoped="" ref="0x404b2728"/>
        <function-ref name="clr" scoped="" ref="0x404b2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c07b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0990"/>
        <function-ref name="isInput" scoped="" ref="0x404c0a70"/>
        <function-ref name="toggle" scoped="" ref="0x404c0b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0c30"/>
        <function-ref name="get" scoped="" ref="0x404c0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0df0"/>
        <function-ref name="set" scoped="" ref="0x404c0ed0"/>
        <function-ref name="clr" scoped="" ref="0x404bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404bd010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd488"/>
        <function-ref name="get" scoped="" ref="0x404bd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd648"/>
        <function-ref name="set" scoped="" ref="0x404bd728"/>
        <function-ref name="clr" scoped="" ref="0x404bd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c97b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c97b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9990"/>
        <function-ref name="isInput" scoped="" ref="0x404c9a70"/>
        <function-ref name="toggle" scoped="" ref="0x404c9b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9c30"/>
        <function-ref name="get" scoped="" ref="0x404c9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9df0"/>
        <function-ref name="set" scoped="" ref="0x404c9ed0"/>
        <function-ref name="clr" scoped="" ref="0x404c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c5010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c51e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c52c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5488"/>
        <function-ref name="get" scoped="" ref="0x404c5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5648"/>
        <function-ref name="set" scoped="" ref="0x404c5728"/>
        <function-ref name="clr" scoped="" ref="0x404c5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d17b8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1990"/>
        <function-ref name="isInput" scoped="" ref="0x404d1a70"/>
        <function-ref name="toggle" scoped="" ref="0x404d1b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1c30"/>
        <function-ref name="get" scoped="" ref="0x404d1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1df0"/>
        <function-ref name="set" scoped="" ref="0x404d1ed0"/>
        <function-ref name="clr" scoped="" ref="0x404d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cd080" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd258"/>
        <function-ref name="isInput" scoped="" ref="0x404cd338"/>
        <function-ref name="toggle" scoped="" ref="0x404cd418"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd4f8"/>
        <function-ref name="get" scoped="" ref="0x404cd5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd6b8"/>
        <function-ref name="set" scoped="" ref="0x404cd798"/>
        <function-ref name="clr" scoped="" ref="0x404cd878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cb840" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cba18"/>
        <function-ref name="isInput" scoped="" ref="0x404cbaf8"/>
        <function-ref name="toggle" scoped="" ref="0x404cbbd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cbcb8"/>
        <function-ref name="get" scoped="" ref="0x404cbd98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cbe78"/>
        <function-ref name="set" scoped="" ref="0x404d8010"/>
        <function-ref name="clr" scoped="" ref="0x404d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d60b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6288"/>
        <function-ref name="isInput" scoped="" ref="0x404d6368"/>
        <function-ref name="toggle" scoped="" ref="0x404d6448"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6528"/>
        <function-ref name="get" scoped="" ref="0x404d6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d66e8"/>
        <function-ref name="set" scoped="" ref="0x404d67c8"/>
        <function-ref name="clr" scoped="" ref="0x404d68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d3880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3a58"/>
        <function-ref name="isInput" scoped="" ref="0x404d3b38"/>
        <function-ref name="toggle" scoped="" ref="0x404d3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3cf8"/>
        <function-ref name="get" scoped="" ref="0x404d3dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3eb8"/>
        <function-ref name="set" scoped="" ref="0x404d2010"/>
        <function-ref name="clr" scoped="" ref="0x404d20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404de0b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404de0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404de288"/>
        <function-ref name="isInput" scoped="" ref="0x404de368"/>
        <function-ref name="toggle" scoped="" ref="0x404de448"/>
        <function-ref name="isOutput" scoped="" ref="0x404de528"/>
        <function-ref name="get" scoped="" ref="0x404de608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de6e8"/>
        <function-ref name="set" scoped="" ref="0x404de7c8"/>
        <function-ref name="clr" scoped="" ref="0x404de8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404db880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404db880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dba58"/>
        <function-ref name="isInput" scoped="" ref="0x404dbb38"/>
        <function-ref name="toggle" scoped="" ref="0x404dbc18"/>
        <function-ref name="isOutput" scoped="" ref="0x404dbcf8"/>
        <function-ref name="get" scoped="" ref="0x404dbdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dbeb8"/>
        <function-ref name="set" scoped="" ref="0x404da010"/>
        <function-ref name="clr" scoped="" ref="0x404da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e60b0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e6288"/>
        <function-ref name="isInput" scoped="" ref="0x404e6368"/>
        <function-ref name="toggle" scoped="" ref="0x404e6448"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6528"/>
        <function-ref name="get" scoped="" ref="0x404e6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e66e8"/>
        <function-ref name="set" scoped="" ref="0x404e67c8"/>
        <function-ref name="clr" scoped="" ref="0x404e68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e4880" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4a58"/>
        <function-ref name="isInput" scoped="" ref="0x404e4b38"/>
        <function-ref name="toggle" scoped="" ref="0x404e4c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4cf8"/>
        <function-ref name="get" scoped="" ref="0x404e4dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e4eb8"/>
        <function-ref name="set" scoped="" ref="0x404e3010"/>
        <function-ref name="clr" scoped="" ref="0x404e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40506bf8" loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40506bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40506dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40505010" loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40505010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405051e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405052c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405053a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40505488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40505568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40510808" loc="60:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40510808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405109e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40417a30" loc="57:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40417a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40417c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40510400" loc="59:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40510400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405105d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40417dc8" loc="58:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40417dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40510010"/>
        <function-ref name="taskLoop" scoped="" ref="0x405100f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x405101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403179c0" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40317b98"/>
        <function-ref name="runTask" scoped="" ref="0x40317c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40315250" loc="47:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40315428"/>
        <function-ref name="taskLoop" scoped="" ref="0x40315508"/>
        <function-ref name="runNextTask" scoped="" ref="0x403155e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40384100" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403842d8"/>
        <function-ref name="runTask" scoped="" ref="0x403843b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40384d70" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40383010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403858a8" loc="55:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40385a80"/>
        <function-ref name="taskLoop" scoped="" ref="0x40385b60"/>
        <function-ref name="runNextTask" scoped="" ref="0x40385c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40399e88" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40394070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4031c690" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4031c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40392370" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40392548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40420f08" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40420f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404f80f0"/>
        <function-ref name="stopDone" scoped="" ref="0x404f81d0"/>
        <function-ref name="start" scoped="" ref="0x404f82b0"/>
        <function-ref name="stop" scoped="" ref="0x404f8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40522120" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40522120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405222f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40527078" loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40527078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40527250"/>
        <function-ref name="payloadLength" scoped="" ref="0x40527330"/>
        <function-ref name="getPayload" scoped="" ref="0x40527410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405274f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405275d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x404f87f0" loc="43:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x404f87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f89c8"/>
        <function-ref name="getPayload" scoped="" ref="0x404f8aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404f8b88"/>
        <function-ref name="cancel" scoped="" ref="0x404f8c68"/>
        <function-ref name="sendDone" scoped="" ref="0x404f8d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40516890" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40516890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40516a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40535e58" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40535e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4052b050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4052b130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4052b210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4052b2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405161f8" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405161f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405163d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4052c010" loc="51:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4052c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4052c1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4052c2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4052c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405417a0" loc="53:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40541978"/>
        <function-ref name="setRetries" scoped="" ref="0x40541a58"/>
        <function-ref name="getRetries" scoped="" ref="0x40541b38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40541c18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40541cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4052edf8" loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4052edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40521010"/>
        <function-ref name="source" scoped="" ref="0x405210f0"/>
        <function-ref name="address" scoped="" ref="0x405211d0"/>
        <function-ref name="destination" scoped="" ref="0x405212b0"/>
        <function-ref name="setSource" scoped="" ref="0x40521390"/>
        <function-ref name="setDestination" scoped="" ref="0x40521470"/>
        <function-ref name="type" scoped="" ref="0x40521550"/>
        <function-ref name="setType" scoped="" ref="0x40521630"/>
        <function-ref name="isForMe" scoped="" ref="0x40521710"/>
        <function-ref name="setGroup" scoped="" ref="0x405217f0"/>
        <function-ref name="localGroup" scoped="" ref="0x405218d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4053e1d8" loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4053e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4053e3b0"/>
        <function-ref name="setChannel" scoped="" ref="0x4053e490"/>
        <function-ref name="getChannel" scoped="" ref="0x4053e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x4054ac68" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x4054ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405347a0"/>
        <function-ref name="clear" scoped="" ref="0x40534b50"/>
        <function-ref name="isValid" scoped="" ref="0x405343f0"/>
        <function-ref name="set" scoped="" ref="0x40534f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40549650" loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40549650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405481f8"/>
        <function-ref name="clear" scoped="" ref="0x405485a8"/>
        <function-ref name="isValid" scoped="" ref="0x40549e20"/>
        <function-ref name="set" scoped="" ref="0x40548958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405463f0" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405465c8"/>
        <function-ref name="stopDone" scoped="" ref="0x405466a8"/>
        <function-ref name="start" scoped="" ref="0x40546788"/>
        <function-ref name="stop" scoped="" ref="0x40546868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4054cd18" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4054cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405578f0"/>
        <function-ref name="get" scoped="" ref="0x40557630"/>
        <function-ref name="isSet" scoped="" ref="0x40557370"/>
        <function-ref name="set" scoped="" ref="0x40557bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40561578" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40561578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4055f088"/>
        <function-ref name="clear" scoped="" ref="0x4055f438"/>
        <function-ref name="isValid" scoped="" ref="0x40561cc8"/>
        <function-ref name="set" scoped="" ref="0x4055f7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405524b0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405524b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40552688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40551600" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40551600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405517d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405518b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40551998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40551a78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40551b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40546cc8" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40546cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40546ea0"/>
        <function-ref name="getPayload" scoped="" ref="0x40543010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405430f0"/>
        <function-ref name="cancel" scoped="" ref="0x405431d0"/>
        <function-ref name="sendDone" scoped="" ref="0x405432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40543db0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40543db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40552010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4054d8f8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4054d8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4054c590"/>
        <function-ref name="get" scoped="" ref="0x4054c2d0"/>
        <function-ref name="isSet" scoped="" ref="0x4054c010"/>
        <function-ref name="set" scoped="" ref="0x4054c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4054f010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4054f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4054f1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4054f2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4054f3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4054f488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40543718" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40543718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40554ba8" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40554ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405626c8"/>
        <function-ref name="clear" scoped="" ref="0x40562a78"/>
        <function-ref name="isValid" scoped="" ref="0x40562318"/>
        <function-ref name="set" scoped="" ref="0x40562e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40554010" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40554010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40554658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40559540" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40559540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4054d118"/>
        <function-ref name="get" scoped="" ref="0x40559e48"/>
        <function-ref name="isSet" scoped="" ref="0x40559b88"/>
        <function-ref name="set" scoped="" ref="0x4054d3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40550a10" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40550a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40550be8"/>
        <function-ref name="noAck" scoped="" ref="0x40550cc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40550da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40552bb0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40552bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40552d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4054f630" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4054f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4054f808"/>
        <function-ref name="setRetries" scoped="" ref="0x4054f8e8"/>
        <function-ref name="getRetries" scoped="" ref="0x4054f9c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4054faa8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4054fb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40551cf0" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40551cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40551ec8"/>
        <function-ref name="source" scoped="" ref="0x40550010"/>
        <function-ref name="address" scoped="" ref="0x405500f0"/>
        <function-ref name="destination" scoped="" ref="0x405501d0"/>
        <function-ref name="setSource" scoped="" ref="0x405502b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40550390"/>
        <function-ref name="type" scoped="" ref="0x40550470"/>
        <function-ref name="setType" scoped="" ref="0x40550550"/>
        <function-ref name="isForMe" scoped="" ref="0x40550630"/>
        <function-ref name="setGroup" scoped="" ref="0x40550710"/>
        <function-ref name="localGroup" scoped="" ref="0x405507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4054fd48" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4054fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4054e010"/>
        <function-ref name="setChannel" scoped="" ref="0x4054e0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x4054e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40556df8" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40556df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40555010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x405512a8" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x405512a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40551480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4055c1c0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4055c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4055c398"/>
        <function-ref name="stopDone" scoped="" ref="0x4055c478"/>
        <function-ref name="start" scoped="" ref="0x4055c558"/>
        <function-ref name="stop" scoped="" ref="0x4055c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40574580" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40574580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40582170"/>
        <function-ref name="get" scoped="" ref="0x40574e88"/>
        <function-ref name="isSet" scoped="" ref="0x40574bc8"/>
        <function-ref name="set" scoped="" ref="0x40582430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40566778" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40566778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40566950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4056ef18" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4056ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40571188"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40571268"/>
        <function-ref name="request" scoped="" ref="0x40571348"/>
        <function-ref name="granted" scoped="" ref="0x40571428"/>
        <function-ref name="isOwner" scoped="" ref="0x40571508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4056a1b0" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4056a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4056a388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4055ca98" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4055ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4055cc70"/>
        <function-ref name="getPayload" scoped="" ref="0x4055cd50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4055ce30"/>
        <function-ref name="cancel" scoped="" ref="0x4055cf10"/>
        <function-ref name="sendDone" scoped="" ref="0x4055b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4055bb10" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4055bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4055bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40578098" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40578098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40578270"/>
        <function-ref name="address" scoped="" ref="0x40578350"/>
        <function-ref name="destination" scoped="" ref="0x40578430"/>
        <function-ref name="setSource" scoped="" ref="0x40578510"/>
        <function-ref name="setDestination" scoped="" ref="0x405785f0"/>
        <function-ref name="pan" scoped="" ref="0x405786d0"/>
        <function-ref name="setPan" scoped="" ref="0x405787b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40578890"/>
        <function-ref name="localPan" scoped="" ref="0x40578970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40578bf8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40578bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40578dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40578eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40570010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405700f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405701d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40575218" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40575218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40575de0"/>
        <function-ref name="get" scoped="" ref="0x40575b20"/>
        <function-ref name="isSet" scoped="" ref="0x40575860"/>
        <function-ref name="set" scoped="" ref="0x405740b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40570978" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40570978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40570b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40570c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40570d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40570df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40567110" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40567110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405672e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405673c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405674a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40567588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40567668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4055b478" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4055b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4055b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405818c0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405818c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405804d8"/>
        <function-ref name="clear" scoped="" ref="0x40580888"/>
        <function-ref name="isValid" scoped="" ref="0x40580128"/>
        <function-ref name="set" scoped="" ref="0x40580c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40582cd8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40582cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40581370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4056de18" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4056de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40577a08"/>
        <function-ref name="get" scoped="" ref="0x40577748"/>
        <function-ref name="isSet" scoped="" ref="0x40577488"/>
        <function-ref name="set" scoped="" ref="0x40577cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405703f0" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405703f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405705c8"/>
        <function-ref name="noAck" scoped="" ref="0x405706a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40570788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40572ab8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40572ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40572c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40572d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40572e50"/>
        <function-ref name="cancel" scoped="" ref="0x40566010"/>
        <function-ref name="sendDone" scoped="" ref="0x405660f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4056a8b0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4056a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4056aa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4056d010" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4056d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4056d1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x4056d2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x4056d3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4056d488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4056d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4056d728" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4056d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4056d900"/>
        <function-ref name="setChannel" scoped="" ref="0x4056d9e0"/>
        <function-ref name="getChannel" scoped="" ref="0x4056dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40568380" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40568380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40568558"/>
        <function-ref name="source" scoped="" ref="0x40568638"/>
        <function-ref name="address" scoped="" ref="0x40568718"/>
        <function-ref name="destination" scoped="" ref="0x405687f8"/>
        <function-ref name="setSource" scoped="" ref="0x405688d8"/>
        <function-ref name="setDestination" scoped="" ref="0x405689b8"/>
        <function-ref name="type" scoped="" ref="0x40568a98"/>
        <function-ref name="setType" scoped="" ref="0x40568b78"/>
        <function-ref name="isForMe" scoped="" ref="0x40568c58"/>
        <function-ref name="setGroup" scoped="" ref="0x40568d38"/>
        <function-ref name="localGroup" scoped="" ref="0x40568e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4057e3a0" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4057eea0"/>
        <function-ref name="clear" scoped="" ref="0x4057d280"/>
        <function-ref name="isValid" scoped="" ref="0x4057eaf0"/>
        <function-ref name="set" scoped="" ref="0x4057d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40566328" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40566328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40566500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405827e0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405827e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405829b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40568010" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40568010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405681e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x4059e3c0" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x4059e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4059e598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4058ed30" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4058ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x4058ef08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4059f428" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4059f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4059f600"/>
        <function-ref name="checkFrame" scoped="" ref="0x4059f6e0"/>
        <function-ref name="source" scoped="" ref="0x4059f7c0"/>
        <function-ref name="destination" scoped="" ref="0x4059f8a0"/>
        <function-ref name="setSource" scoped="" ref="0x4059f980"/>
        <function-ref name="setDestination" scoped="" ref="0x4059fa60"/>
        <function-ref name="setGroup" scoped="" ref="0x4059fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405949b0" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405949b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40594b88"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40594c68"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40594d48"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40594e28"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40594f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405ac4c8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405ac4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405ac6a0"/>
        <function-ref name="wait" scoped="" ref="0x405ac780"/>
        <function-ref name="cancel" scoped="" ref="0x405ac860"/>
        <function-ref name="isFree" scoped="" ref="0x405ac940"/>
        <function-ref name="getNow" scoped="" ref="0x405aca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x405bb6a8" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x405bb6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405bb880"/>
        <function-ref name="payloadLength" scoped="" ref="0x405bb960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bba40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405bbb20"/>
        <function-ref name="headerLength" scoped="" ref="0x405bbc00"/>
        <function-ref name="metadataLength" scoped="" ref="0x405bbce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x405b0088" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x405b0088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405b0c08"/>
        <function-ref name="clear" scoped="" ref="0x405af010"/>
        <function-ref name="isValid" scoped="" ref="0x405b0858"/>
        <function-ref name="set" scoped="" ref="0x405af3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x40584518" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x40584518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405846f0"/>
        <function-ref name="headerLength" scoped="" ref="0x405847d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x405848b0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40584990"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40584a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4058e010" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4058e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4058e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x4058f8d8" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4058f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4058fab0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4058fb90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4058fc70"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4058fd50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4058fe30"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4058ff10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40588010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405880f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x405b1e20" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405b1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40597010"/>
        <function-ref name="getDSN" scoped="" ref="0x405970f0"/>
        <function-ref name="setFCF" scoped="" ref="0x405971d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405972b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40597390"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40597470"/>
        <function-ref name="setDSN" scoped="" ref="0x40597550"/>
        <function-ref name="createAckReply" scoped="" ref="0x40597630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40597710"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405977f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405978d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405979b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40597a90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40597bf0"/>
        <function-ref name="localPan" scoped="" ref="0x40597cd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40597db0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40597e90"/>
        <function-ref name="setFramePending" scoped="" ref="0x40593010"/>
        <function-ref name="setDestPan" scoped="" ref="0x405930f0"/>
        <function-ref name="isForMe" scoped="" ref="0x405931d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405932b0"/>
        <function-ref name="getFCF" scoped="" ref="0x40593390"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40593470"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40593550"/>
        <function-ref name="getFramePending" scoped="" ref="0x40593630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40587010" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40587010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405871e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405872c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405873a8"/>
        <function-ref name="getSender" scoped="" ref="0x40587488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40598e28" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40598e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4059a050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4059a130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4059a210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4059a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x405f2108" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405f2108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405f22f0"/>
        <function-ref name="wait" scoped="" ref="0x405f23d0"/>
        <function-ref name="cancel" scoped="" ref="0x405f24b0"/>
        <function-ref name="isFree" scoped="" ref="0x405f2590"/>
        <function-ref name="getNow" scoped="" ref="0x405f2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405f29c0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405f29c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4060be70"/>
        <function-ref name="fired" scoped="" ref="0x4060b640"/>
        <function-ref name="startAt" scoped="" ref="0x4060bb30"/>
        <function-ref name="isRunning" scoped="" ref="0x4060b8b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4060a110"/>
        <function-ref name="start" scoped="" ref="0x4060b128"/>
        <function-ref name="stop" scoped="" ref="0x4060b3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40f23608" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40f23608"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f237f0"/>
        <function-ref name="wait" scoped="" ref="0x40f238d0"/>
        <function-ref name="cancel" scoped="" ref="0x40f239b0"/>
        <function-ref name="isFree" scoped="" ref="0x40f23a90"/>
        <function-ref name="getNow" scoped="" ref="0x40f23b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40f23e00" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f23e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f20350"/>
        <function-ref name="fired" scoped="" ref="0x40f21a88"/>
        <function-ref name="startAt" scoped="" ref="0x40f20010"/>
        <function-ref name="isRunning" scoped="" ref="0x40f21d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f205c8"/>
        <function-ref name="start" scoped="" ref="0x40f21570"/>
        <function-ref name="stop" scoped="" ref="0x40f21810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40f207d8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40f207d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40f209b0"/>
        <function-ref name="suspend" scoped="" ref="0x40f20a90"/>
        <function-ref name="resume" scoped="" ref="0x40f20b70"/>
        <function-ref name="run" scoped="" ref="0x40f20c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4060ca60" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4060ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4060cc38"/>
        <function-ref name="suspend" scoped="" ref="0x4060cd18"/>
        <function-ref name="resume" scoped="" ref="0x4060cdf8"/>
        <function-ref name="run" scoped="" ref="0x4060ced8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40672f20" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40672f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40670110"/>
        <function-ref name="cancel" scoped="" ref="0x406701f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406702d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40670430" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40670430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40670608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40673c28" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40673c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40673e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406745b0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406745b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40674788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40674868"/>
        <function-ref name="getPayload" scoped="" ref="0x40674948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40674a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40674b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40674ce0" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40674ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40674ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40673010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406730f0"/>
        <function-ref name="cancel" scoped="" ref="0x406731d0"/>
        <function-ref name="sendDone" scoped="" ref="0x406732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40673868" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40673868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40673a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40672788" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40672788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40672960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40672a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40672b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40672c00"/>
        <function-ref name="headerLength" scoped="" ref="0x40672ce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40672dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40670768" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40670768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40670940"/>
        <function-ref name="checkFrame" scoped="" ref="0x40670a20"/>
        <function-ref name="source" scoped="" ref="0x40670b00"/>
        <function-ref name="destination" scoped="" ref="0x40670be0"/>
        <function-ref name="setSource" scoped="" ref="0x40670cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40670da0"/>
        <function-ref name="setGroup" scoped="" ref="0x40670e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40673488" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40673488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40673670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40672030" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40672030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40672218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40675940" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40675940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40675b18"/>
        <function-ref name="source" scoped="" ref="0x40675bf8"/>
        <function-ref name="address" scoped="" ref="0x40675cd8"/>
        <function-ref name="destination" scoped="" ref="0x40675db8"/>
        <function-ref name="setSource" scoped="" ref="0x40675e98"/>
        <function-ref name="setDestination" scoped="" ref="0x40674010"/>
        <function-ref name="type" scoped="" ref="0x406740f0"/>
        <function-ref name="setType" scoped="" ref="0x406741d0"/>
        <function-ref name="isForMe" scoped="" ref="0x406742b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40674390"/>
        <function-ref name="localGroup" scoped="" ref="0x40674470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40672410" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40672410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406725f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f4d430" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f4d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4d608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f4ef20" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f4ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4d110"/>
        <function-ref name="cancel" scoped="" ref="0x40f4d1f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4d2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40f4fc28" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40f4fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40f4fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f505b0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f505b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f50788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f50868"/>
        <function-ref name="getPayload" scoped="" ref="0x40f50948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f50a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f50b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f50ce0" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f50ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f50ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4f0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f4f1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40f4f868" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40f4f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f511c0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f511c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f51398"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f51478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f51558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f51638"/>
        <function-ref name="headerLength" scoped="" ref="0x40f51718"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f517f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f4d768" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f4d768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4d9c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x40f4daa0"/>
        <function-ref name="source" scoped="" ref="0x40f4db80"/>
        <function-ref name="destination" scoped="" ref="0x40f4dc60"/>
        <function-ref name="setSource" scoped="" ref="0x40f4dd40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f4de20"/>
        <function-ref name="setGroup" scoped="" ref="0x40f4df00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40f4b070" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f4b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40f4b248"/>
        <function-ref name="changed" scoped="" ref="0x40f4b328"/>
        <function-ref name="amGroup" scoped="" ref="0x40f4b408"/>
        <function-ref name="setAddress" scoped="" ref="0x40f4b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f4e788" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f4e788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4e960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4ea40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4eb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4ec00"/>
        <function-ref name="headerLength" scoped="" ref="0x40f4ece0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f4edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f4f488" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f4f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40f4e030" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40f4e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4e218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f51938" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f51938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f51b10"/>
        <function-ref name="source" scoped="" ref="0x40f51bf0"/>
        <function-ref name="address" scoped="" ref="0x40f51cd0"/>
        <function-ref name="destination" scoped="" ref="0x40f51db0"/>
        <function-ref name="setSource" scoped="" ref="0x40f51e90"/>
        <function-ref name="setDestination" scoped="" ref="0x40f50010"/>
        <function-ref name="type" scoped="" ref="0x40f500f0"/>
        <function-ref name="setType" scoped="" ref="0x40f501d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f502b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f50390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f50470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40f4e410" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40f4e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x4065ad70" loc="54:/home/user/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4065ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4066b010"/>
        <function-ref name="changed" scoped="" ref="0x4066b0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x4066b1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x4066b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4067fa60" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4067fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067fc38"/>
        <function-ref name="cancel" scoped="" ref="0x4067fd18"/>
        <function-ref name="sendDone" scoped="" ref="0x4067fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4067e010" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4067e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4067e1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4067e2c8"/>
        <function-ref name="request" scoped="" ref="0x4067e3a8"/>
        <function-ref name="granted" scoped="" ref="0x4067e488"/>
        <function-ref name="isOwner" scoped="" ref="0x4067e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4067f538" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4067f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067f710"/>
        <function-ref name="cancel" scoped="" ref="0x4067f7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4067f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40687cb0" loc="86:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40687cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40687e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406b5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406b5600" loc="89:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406b5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406b57e8"/>
        <function-ref name="configure" scoped="" ref="0x406b58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40687570" loc="85:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40687570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40687758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40687838"/>
        <function-ref name="request" scoped="" ref="0x40687918"/>
        <function-ref name="granted" scoped="" ref="0x406879f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40687ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406b5150" loc="87:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406b5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406b5328"/>
        <function-ref name="userId" scoped="" ref="0x406b5408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f8e070" loc="44:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f8e070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f8e248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f8e3a8" loc="45:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f8e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f8e580"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f8e660"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f8e740"/>
        <function-ref name="dequeue" scoped="" ref="0x40f8e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f8db18" loc="52:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f8db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f8dd00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f8dde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f8c3f8" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f8c3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f8c5e0"/>
        <function-ref name="configure" scoped="" ref="0x40f8c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f8c820" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f8c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f8c9f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f8cad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f8cbb8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f8cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f8d3d8" loc="51:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f8d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f8d5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f8d6a0"/>
        <function-ref name="request" scoped="" ref="0x40f8d780"/>
        <function-ref name="granted" scoped="" ref="0x40f8d860"/>
        <function-ref name="isOwner" scoped="" ref="0x40f8d940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f8df20" loc="53:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f8df20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f8c110"/>
        <function-ref name="userId" scoped="" ref="0x40f8c1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f8ce18" loc="69:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f8ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f8b010"/>
        <function-ref name="runTask" scoped="" ref="0x40f8b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406d79e8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406d79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406d7bc0"/>
        <function-ref name="cancel" scoped="" ref="0x406d7ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x406d7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406d7ee0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406d7ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406d9488" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406d9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406c83b0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406c83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c8588"/>
        <function-ref name="payloadLength" scoped="" ref="0x406c8668"/>
        <function-ref name="getPayload" scoped="" ref="0x406c8748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c8828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406c8908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x406d7250" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x406d7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406d7428"/>
        <function-ref name="payloadLength" scoped="" ref="0x406d7508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d75e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406d76c8"/>
        <function-ref name="headerLength" scoped="" ref="0x406d77a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x406d7888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406d97d0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406d97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406d99a8"/>
        <function-ref name="getDSN" scoped="" ref="0x406d9a88"/>
        <function-ref name="setFCF" scoped="" ref="0x406d9b68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406d9c48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406d9d28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406d9e08"/>
        <function-ref name="setDSN" scoped="" ref="0x406d9ee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x406d8010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406d80f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406d81d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406d82b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406d8390"/>
        <function-ref name="localAddr" scoped="" ref="0x406d8470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406d85d0"/>
        <function-ref name="localPan" scoped="" ref="0x406d86b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406d8790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406d8870"/>
        <function-ref name="setFramePending" scoped="" ref="0x406d8950"/>
        <function-ref name="setDestPan" scoped="" ref="0x406d8a30"/>
        <function-ref name="isForMe" scoped="" ref="0x406d8b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406d8bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x406d8cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406d8db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406d8e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x406d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406c8a48" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406c8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c8c20"/>
        <function-ref name="getPayload" scoped="" ref="0x406c8d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c8de0"/>
        <function-ref name="cancel" scoped="" ref="0x406c8ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x406d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406d9170" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406d9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d9348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406f6280" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406f6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f6458"/>
        <function-ref name="cancel" scoped="" ref="0x406f6538"/>
        <function-ref name="sendDone" scoped="" ref="0x406f6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406f6778" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406f6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x406e9a58" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x406e9a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e9c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e9d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e9df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e9ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x406e8010"/>
        <function-ref name="metadataLength" scoped="" ref="0x406e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x406e8748" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x406e8748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406f6ab0" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406f6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406f6c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x406f6d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f6e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406f6f28"/>
        <function-ref name="headerLength" scoped="" ref="0x4070b018"/>
        <function-ref name="metadataLength" scoped="" ref="0x4070b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x406e8250" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x406e8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e8428"/>
        <function-ref name="cancel" scoped="" ref="0x406e8508"/>
        <function-ref name="sendDone" scoped="" ref="0x406e85e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406e9228" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406e9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e9400"/>
        <function-ref name="cancel" scoped="" ref="0x406e94e0"/>
        <function-ref name="sendDone" scoped="" ref="0x406e95c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406e9720" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406e9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e98f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x406e8a80" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x406e8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e8c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e8d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e8e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e8ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x406f6010"/>
        <function-ref name="metadataLength" scoped="" ref="0x406f60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40757170" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40757170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40757348"/>
        <function-ref name="address" scoped="" ref="0x40757428"/>
        <function-ref name="destination" scoped="" ref="0x40757508"/>
        <function-ref name="setSource" scoped="" ref="0x407575e8"/>
        <function-ref name="setDestination" scoped="" ref="0x407576c8"/>
        <function-ref name="pan" scoped="" ref="0x407577a8"/>
        <function-ref name="setPan" scoped="" ref="0x40757888"/>
        <function-ref name="isForMe" scoped="" ref="0x40757968"/>
        <function-ref name="localPan" scoped="" ref="0x40757a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40757b88" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40757b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40757d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40757e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40757f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40756018"/>
        <function-ref name="headerLength" scoped="" ref="0x407560f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407561d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40759658" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40759658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40759830"/>
        <function-ref name="getDSN" scoped="" ref="0x40759910"/>
        <function-ref name="setFCF" scoped="" ref="0x407599f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40759ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40759bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40759c90"/>
        <function-ref name="setDSN" scoped="" ref="0x40759d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40759e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40758010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407580f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407581d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407582b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40758390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407584f0"/>
        <function-ref name="localPan" scoped="" ref="0x407585d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407586b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40758790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40758870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40758950"/>
        <function-ref name="isForMe" scoped="" ref="0x40758a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40758b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40758bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40758cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40758db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40758e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40756368" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40756368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40756540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40756620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40756700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407567e0"/>
        <function-ref name="headerLength" scoped="" ref="0x407568c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407569a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40fc4950" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40fc4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40fc4b28"/>
        <function-ref name="address" scoped="" ref="0x40fc4c08"/>
        <function-ref name="destination" scoped="" ref="0x40fc4ce8"/>
        <function-ref name="setSource" scoped="" ref="0x40fc4dc8"/>
        <function-ref name="setDestination" scoped="" ref="0x40fc4ea8"/>
        <function-ref name="pan" scoped="" ref="0x40fc3010"/>
        <function-ref name="setPan" scoped="" ref="0x40fc30f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc31d0"/>
        <function-ref name="localPan" scoped="" ref="0x40fc32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40fc33f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40fc33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc35c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc36a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc3788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc3868"/>
        <function-ref name="headerLength" scoped="" ref="0x40fc3948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40fc3a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40fcbf20" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40fcbf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40fc5110"/>
        <function-ref name="getDSN" scoped="" ref="0x40fc51f0"/>
        <function-ref name="setFCF" scoped="" ref="0x40fc52d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40fc53b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40fc5490"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40fc5570"/>
        <function-ref name="setDSN" scoped="" ref="0x40fc5650"/>
        <function-ref name="createAckReply" scoped="" ref="0x40fc5730"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40fc5810"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40fc58f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40fc59d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40fc5ab0"/>
        <function-ref name="localAddr" scoped="" ref="0x40fc5b90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40fc5cf0"/>
        <function-ref name="localPan" scoped="" ref="0x40fc5dd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40fc5eb0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40fc4010"/>
        <function-ref name="setFramePending" scoped="" ref="0x40fc40f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40fc41d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc42b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40fc4390"/>
        <function-ref name="getFCF" scoped="" ref="0x40fc4470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40fc4550"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40fc4630"/>
        <function-ref name="getFramePending" scoped="" ref="0x40fc4710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40fc3b98" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40fc3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40fc3d70"/>
        <function-ref name="changed" scoped="" ref="0x40fc3e50"/>
        <function-ref name="amGroup" scoped="" ref="0x40fc2010"/>
        <function-ref name="setAddress" scoped="" ref="0x40fc20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40fc2250" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40fc2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc2428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc2508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc25e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc26c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40fc27a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40fc2888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40753ca8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40753ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40753e80"/>
        <function-ref name="cancel" scoped="" ref="0x40791010"/>
        <function-ref name="sendDone" scoped="" ref="0x407910f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40791250" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40791250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40791428"/>
        <function-ref name="header" scoped="" ref="0x40791508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40753388" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40753388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40753560"/>
        <function-ref name="cancel" scoped="" ref="0x40753640"/>
        <function-ref name="sendDone" scoped="" ref="0x40753720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40791668" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40791668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40791840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40791920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40791a00"/>
        <function-ref name="getSender" scoped="" ref="0x40791ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40753860" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40753860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40753a38"/>
        <function-ref name="header" scoped="" ref="0x40753b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40fd2b20" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40fd2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd2cf8"/>
        <function-ref name="cancel" scoped="" ref="0x40fd2dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40fd1030" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40fd1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd1208"/>
        <function-ref name="header" scoped="" ref="0x40fd12e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40fcf150" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fcf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fcf328"/>
        <function-ref name="clearAll" scoped="" ref="0x40fcf408"/>
        <function-ref name="get" scoped="" ref="0x40fcf4e8"/>
        <function-ref name="set" scoped="" ref="0x40fcf5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fd5ea8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fd5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd20c0"/>
        <function-ref name="cancel" scoped="" ref="0x40fd21a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd2280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40fd19e0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40fd19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40fd1bb8"/>
        <function-ref name="insertNode" scoped="" ref="0x40fd1c98"/>
        <function-ref name="getNode" scoped="" ref="0x40fd1d78"/>
        <function-ref name="evicted" scoped="" ref="0x40fd1e58"/>
        <function-ref name="getIndex" scoped="" ref="0x40fcf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40fd23c0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40fd23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd2598"/>
        <function-ref name="header" scoped="" ref="0x40fd2678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fd27b8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fd27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fd2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40fd1428" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40fd1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40fd1600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40fd16e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40fd17c0"/>
        <function-ref name="getSender" scoped="" ref="0x40fd18a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4077f610" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4077f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4077f7e8"/>
        <function-ref name="insertNode" scoped="" ref="0x4077f8c8"/>
        <function-ref name="getNode" scoped="" ref="0x4077f9a8"/>
        <function-ref name="evicted" scoped="" ref="0x4077fa88"/>
        <function-ref name="getIndex" scoped="" ref="0x4077fb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40779010" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40779010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407791e8"/>
        <function-ref name="clearAll" scoped="" ref="0x407792c8"/>
        <function-ref name="get" scoped="" ref="0x407793a8"/>
        <function-ref name="set" scoped="" ref="0x40779488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4077c5d0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4077c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4077c7a8"/>
        <function-ref name="insertNode" scoped="" ref="0x4077c888"/>
        <function-ref name="getNode" scoped="" ref="0x4077c968"/>
        <function-ref name="evicted" scoped="" ref="0x4077ca48"/>
        <function-ref name="getIndex" scoped="" ref="0x4077cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077c238" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4077c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40fce578" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40fce578"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fce750"/>
        <function-ref name="clearAll" scoped="" ref="0x40fce830"/>
        <function-ref name="get" scoped="" ref="0x40fce910"/>
        <function-ref name="set" scoped="" ref="0x40fce9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408c4838" loc="85:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408c4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c4a10"/>
        <function-ref name="cancel" scoped="" ref="0x408c4af0"/>
        <function-ref name="sendDone" scoped="" ref="0x408c4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408c4d30" loc="86:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408c4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c4f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408c6190" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408c6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c6368"/>
        <function-ref name="cancel" scoped="" ref="0x408c6448"/>
        <function-ref name="sendDone" scoped="" ref="0x408c6528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408c4070" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408c4070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c4248"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c4328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c4408"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c44e8"/>
        <function-ref name="headerLength" scoped="" ref="0x408c45c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c46a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408c3090" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408c3090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c3268"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c3348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c3428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c3508"/>
        <function-ref name="headerLength" scoped="" ref="0x408c35e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c36c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408c6688" loc="78:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408c6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c6860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x408c3808" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c3808"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408c39e0"/>
        <function-ref name="noAck" scoped="" ref="0x408c3ac0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408c3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408c69a0" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408c69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408c6b78"/>
        <function-ref name="setRetries" scoped="" ref="0x408c6c58"/>
        <function-ref name="getRetries" scoped="" ref="0x408c6d38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408c6e18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408c6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ff70c0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ff70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff7298"/>
        <function-ref name="cancel" scoped="" ref="0x40ff7378"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff7458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40ff45f0" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40ff45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff47c8"/>
        <function-ref name="runTask" scoped="" ref="0x40ff48a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x40ff7b20" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x40ff7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ff56a8"/>
        <function-ref name="fired" scoped="" ref="0x40ff6938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ff5068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ff6de8"/>
        <function-ref name="getdt" scoped="" ref="0x40ff5b58"/>
        <function-ref name="gett0" scoped="" ref="0x40ff5900"/>
        <function-ref name="isRunning" scoped="" ref="0x40ff6b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ff61e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ff5388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ff6460"/>
        <function-ref name="stop" scoped="" ref="0x40ff66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ffcc98" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ffcc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ffce70"/>
        <function-ref name="cancel" scoped="" ref="0x40ff8010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ff88c8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ff88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff8aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff8b80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff8c60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff8d40"/>
        <function-ref name="headerLength" scoped="" ref="0x40ff8e20"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ff8f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ff5d88" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ff5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff4010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff40f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff41d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff42b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ff4390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ff4470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40ff7598" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ff7598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ff7770"/>
        <function-ref name="noAck" scoped="" ref="0x40ff7850"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ff7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40ff8230" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40ff8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40ff8408"/>
        <function-ref name="setRetries" scoped="" ref="0x40ff84e8"/>
        <function-ref name="getRetries" scoped="" ref="0x40ff85c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40ff86a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40ff8788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ff3ba0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ff3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ff06a8"/>
        <function-ref name="fired" scoped="" ref="0x40ff1938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ff0068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ff1de8"/>
        <function-ref name="getdt" scoped="" ref="0x40ff0b58"/>
        <function-ref name="gett0" scoped="" ref="0x40ff0900"/>
        <function-ref name="isRunning" scoped="" ref="0x40ff1b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ff11e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ff0388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ff1460"/>
        <function-ref name="stop" scoped="" ref="0x40ff16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407d23f0" loc="49:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407d1ed0"/>
        <function-ref name="fired" scoped="" ref="0x407d1188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407d1890"/>
        <function-ref name="isOneShot" scoped="" ref="0x407d1638"/>
        <function-ref name="getdt" scoped="" ref="0x407cf3a8"/>
        <function-ref name="gett0" scoped="" ref="0x407cf150"/>
        <function-ref name="isRunning" scoped="" ref="0x407d13e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407d2a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407d1bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x407d2c98"/>
        <function-ref name="stop" scoped="" ref="0x407d2f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407cc810" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407cc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407e4330"/>
        <function-ref name="fired" scoped="" ref="0x407cb5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407cbcb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x407cba60"/>
        <function-ref name="getdt" scoped="" ref="0x407e47e0"/>
        <function-ref name="gett0" scoped="" ref="0x407e4588"/>
        <function-ref name="isRunning" scoped="" ref="0x407cb808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407cce38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407e4010"/>
        <function-ref name="startOneShot" scoped="" ref="0x407cb0d8"/>
        <function-ref name="stop" scoped="" ref="0x407cb358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x407e4b40" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x407e4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407e2200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407cc060" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407cc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407cc238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x407d8310" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x407d8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407d8a60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407db010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d8cd8"/>
        <function-ref name="overflow" scoped="" ref="0x407db288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407df290" loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407df290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407df468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x407df858" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x407df858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407ded58"/>
        <function-ref name="fired" scoped="" ref="0x407de528"/>
        <function-ref name="startAt" scoped="" ref="0x407dea18"/>
        <function-ref name="isRunning" scoped="" ref="0x407de7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x407dc010"/>
        <function-ref name="start" scoped="" ref="0x407de010"/>
        <function-ref name="stop" scoped="" ref="0x407de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40874ca8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40874ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40871170"/>
        <function-ref name="fired" scoped="" ref="0x40873928"/>
        <function-ref name="startAt" scoped="" ref="0x40873e18"/>
        <function-ref name="isRunning" scoped="" ref="0x40873ba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x408713e8"/>
        <function-ref name="start" scoped="" ref="0x40873410"/>
        <function-ref name="stop" scoped="" ref="0x408736b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40874870" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40874870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40874a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40871718" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40871718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40871e68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40870388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40870110"/>
        <function-ref name="overflow" scoped="" ref="0x40870600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41008c48" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41008c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41008e20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41008f00"/>
        <function-ref name="getControlA" scoped="" ref="0x41040010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x410400f0"/>
        <function-ref name="setControlB" scoped="" ref="0x410401d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x410402b0"/>
        <function-ref name="getControlB" scoped="" ref="0x41040390"/>
        <function-ref name="setControlA" scoped="" ref="0x41040470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4100fd80" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4100fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4100b258"/>
        <function-ref name="fired" scoped="" ref="0x4100da00"/>
        <function-ref name="startAt" scoped="" ref="0x4100def0"/>
        <function-ref name="isRunning" scoped="" ref="0x4100dc78"/>
        <function-ref name="getAlarm" scoped="" ref="0x4100b4d0"/>
        <function-ref name="start" scoped="" ref="0x4100d4e8"/>
        <function-ref name="stop" scoped="" ref="0x4100d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4100f948" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4100f948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4100fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4100b800" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4100b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4100a010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4100a500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4100a288"/>
        <function-ref name="overflow" scoped="" ref="0x4100a778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4103e090" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4103e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4103e268"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4103e348"/>
        <function-ref name="controlABusy" scoped="" ref="0x4103e428"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4103e508"/>
        <function-ref name="countBusy" scoped="" ref="0x4103e5e8"/>
        <function-ref name="compareABusy" scoped="" ref="0x4103e6c8"/>
        <function-ref name="getAssr" scoped="" ref="0x4103e7a8"/>
        <function-ref name="setAssr" scoped="" ref="0x4103e888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41040660" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41040660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4103fbb8"/>
        <function-ref name="fired" scoped="" ref="0x4103f1d8"/>
        <function-ref name="get" scoped="" ref="0x41040ca8"/>
        <function-ref name="reset" scoped="" ref="0x4103f450"/>
        <function-ref name="isOn" scoped="" ref="0x4103fe30"/>
        <function-ref name="set" scoped="" ref="0x41040f20"/>
        <function-ref name="start" scoped="" ref="0x4103f6c8"/>
        <function-ref name="stop" scoped="" ref="0x4103f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4100aa68" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4100aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41008500"/>
        <function-ref name="test" scoped="" ref="0x41008010"/>
        <function-ref name="get" scoped="" ref="0x410090d8"/>
        <function-ref name="setScale" scoped="" ref="0x41008778"/>
        <function-ref name="getScale" scoped="" ref="0x41008a18"/>
        <function-ref name="reset" scoped="" ref="0x41009868"/>
        <function-ref name="overflow" scoped="" ref="0x410095f0"/>
        <function-ref name="isOn" scoped="" ref="0x41008288"/>
        <function-ref name="set" scoped="" ref="0x41009350"/>
        <function-ref name="start" scoped="" ref="0x41009ae0"/>
        <function-ref name="stop" scoped="" ref="0x41009d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40827c80" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40827c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40827e58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40840010"/>
        <function-ref name="getControlA" scoped="" ref="0x408400f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408401d0"/>
        <function-ref name="setControlB" scoped="" ref="0x408402b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40840390"/>
        <function-ref name="getControlB" scoped="" ref="0x40840470"/>
        <function-ref name="setControlA" scoped="" ref="0x40840550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4083e3c0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4083e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4083e598"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4083e678"/>
        <function-ref name="controlABusy" scoped="" ref="0x4083e758"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4083e838"/>
        <function-ref name="countBusy" scoped="" ref="0x4083e918"/>
        <function-ref name="compareABusy" scoped="" ref="0x4083e9f8"/>
        <function-ref name="getAssr" scoped="" ref="0x4083ead8"/>
        <function-ref name="setAssr" scoped="" ref="0x4083ebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40840878" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40840878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4083fdd0"/>
        <function-ref name="fired" scoped="" ref="0x4083f3f0"/>
        <function-ref name="get" scoped="" ref="0x40840ec0"/>
        <function-ref name="reset" scoped="" ref="0x4083f668"/>
        <function-ref name="isOn" scoped="" ref="0x4083e068"/>
        <function-ref name="set" scoped="" ref="0x4083f150"/>
        <function-ref name="start" scoped="" ref="0x4083f8e0"/>
        <function-ref name="stop" scoped="" ref="0x4083fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4082b980" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4082b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40827418"/>
        <function-ref name="test" scoped="" ref="0x40828f08"/>
        <function-ref name="get" scoped="" ref="0x40828010"/>
        <function-ref name="setScale" scoped="" ref="0x40827690"/>
        <function-ref name="getScale" scoped="" ref="0x40827930"/>
        <function-ref name="reset" scoped="" ref="0x408287a0"/>
        <function-ref name="overflow" scoped="" ref="0x40828528"/>
        <function-ref name="isOn" scoped="" ref="0x408271a0"/>
        <function-ref name="set" scoped="" ref="0x40828288"/>
        <function-ref name="start" scoped="" ref="0x40828a18"/>
        <function-ref name="stop" scoped="" ref="0x40828c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40838bb8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40838bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40838d90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40838e70"/>
        <function-ref name="getControlA" scoped="" ref="0x40837010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408370f0"/>
        <function-ref name="setControlB" scoped="" ref="0x408371d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408372b0"/>
        <function-ref name="getControlB" scoped="" ref="0x40837390"/>
        <function-ref name="setControlA" scoped="" ref="0x40837470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x408352c8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x408352c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x408354a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40835728" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40835728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40835900"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x408359e0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40835ac0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40835ba0"/>
        <function-ref name="countBusy" scoped="" ref="0x40835c80"/>
        <function-ref name="compareABusy" scoped="" ref="0x40835d60"/>
        <function-ref name="getAssr" scoped="" ref="0x40835e40"/>
        <function-ref name="setAssr" scoped="" ref="0x40835f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40837798" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40837798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40836ce8"/>
        <function-ref name="fired" scoped="" ref="0x40836308"/>
        <function-ref name="get" scoped="" ref="0x40837de0"/>
        <function-ref name="reset" scoped="" ref="0x40836580"/>
        <function-ref name="isOn" scoped="" ref="0x40835010"/>
        <function-ref name="set" scoped="" ref="0x40836068"/>
        <function-ref name="start" scoped="" ref="0x408367f8"/>
        <function-ref name="stop" scoped="" ref="0x40836a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4083d8e0" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4083d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40838350"/>
        <function-ref name="test" scoped="" ref="0x4083ae30"/>
        <function-ref name="get" scoped="" ref="0x4083df28"/>
        <function-ref name="setScale" scoped="" ref="0x408385c8"/>
        <function-ref name="getScale" scoped="" ref="0x40838868"/>
        <function-ref name="reset" scoped="" ref="0x4083a6c8"/>
        <function-ref name="overflow" scoped="" ref="0x4083a450"/>
        <function-ref name="isOn" scoped="" ref="0x408380d8"/>
        <function-ref name="set" scoped="" ref="0x4083a1b0"/>
        <function-ref name="start" scoped="" ref="0x4083a940"/>
        <function-ref name="stop" scoped="" ref="0x4083abb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4088d9a8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4088d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4088db80"/>
        <function-ref name="runTask" scoped="" ref="0x4088dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4088e010" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4088e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4088d4e0"/>
        <function-ref name="fired" scoped="" ref="0x4088ec78"/>
        <function-ref name="startAt" scoped="" ref="0x4088d1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4088eef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4088d758"/>
        <function-ref name="start" scoped="" ref="0x4088e760"/>
        <function-ref name="stop" scoped="" ref="0x4088ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e0c60" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4088f790"/>
        <function-ref name="fired" scoped="" ref="0x4086ea20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4088f150"/>
        <function-ref name="isOneShot" scoped="" ref="0x4086eed0"/>
        <function-ref name="getdt" scoped="" ref="0x4088fc40"/>
        <function-ref name="gett0" scoped="" ref="0x4088f9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x4086ec78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4086e2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4088f470"/>
        <function-ref name="startOneShot" scoped="" ref="0x4086e548"/>
        <function-ref name="stop" scoped="" ref="0x4086e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x408b4050" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x408b4050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408b4228"/>
        <function-ref name="runTask" scoped="" ref="0x408b4308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x408b8e30" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x408b8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b6920"/>
        <function-ref name="fired" scoped="" ref="0x408b7bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b62e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x408b6088"/>
        <function-ref name="getdt" scoped="" ref="0x408b6dd0"/>
        <function-ref name="gett0" scoped="" ref="0x408b6b78"/>
        <function-ref name="isRunning" scoped="" ref="0x408b7e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408b7468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408b6600"/>
        <function-ref name="startOneShot" scoped="" ref="0x408b76e8"/>
        <function-ref name="stop" scoped="" ref="0x408b7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40889a60" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40889a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b8670"/>
        <function-ref name="fired" scoped="" ref="0x408ba840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b8010"/>
        <function-ref name="isOneShot" scoped="" ref="0x408bad10"/>
        <function-ref name="getdt" scoped="" ref="0x408b8b40"/>
        <function-ref name="gett0" scoped="" ref="0x408b88d8"/>
        <function-ref name="isRunning" scoped="" ref="0x408baaa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408ba0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408b8340"/>
        <function-ref name="startOneShot" scoped="" ref="0x408ba348"/>
        <function-ref name="stop" scoped="" ref="0x408ba5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408b3460" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408b3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x408b3df8" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408b3df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b2570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b2a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b27e8"/>
        <function-ref name="overflow" scoped="" ref="0x408b2cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408dd2c0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408dd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408dd498"/>
        <function-ref name="stopDone" scoped="" ref="0x408dd578"/>
        <function-ref name="start" scoped="" ref="0x408dd658"/>
        <function-ref name="stop" scoped="" ref="0x408dd738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408d04c0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408d04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d0698"/>
        <function-ref name="cancel" scoped="" ref="0x408d0778"/>
        <function-ref name="sendDone" scoped="" ref="0x408d0858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408d09b8" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408d09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408dd898" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408dd898"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408dda70"/>
        <function-ref name="cancel" scoped="" ref="0x408ddb50"/>
        <function-ref name="sendDone" scoped="" ref="0x408ddc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408d6150" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408d6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d6328"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d6408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d64e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d65c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408d66a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d6788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408d68c8" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408d68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408d6aa0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408d6b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408d6c60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408d6d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408d6ed0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408d6ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408d00c0"/>
        <function-ref name="stopDone" scoped="" ref="0x408d01a0"/>
        <function-ref name="start" scoped="" ref="0x408d0280"/>
        <function-ref name="stop" scoped="" ref="0x408d0360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408ddd90" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408ddd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408d0cf0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408d0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d0ec8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408cf010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408cf0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408cf1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x408cf2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408cf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41044060" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41044060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41044238"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41044318"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x410443f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x410444d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408e9778" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e9778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e9950"/>
        <function-ref name="stopDone" scoped="" ref="0x408e9a30"/>
        <function-ref name="start" scoped="" ref="0x408e9b10"/>
        <function-ref name="stop" scoped="" ref="0x408e9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40926a78" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40926a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40926c50"/>
        <function-ref name="turnOn" scoped="" ref="0x40926d30"/>
        <function-ref name="setChannel" scoped="" ref="0x40926e10"/>
        <function-ref name="done" scoped="" ref="0x40926ef0"/>
        <function-ref name="standby" scoped="" ref="0x40925010"/>
        <function-ref name="getChannel" scoped="" ref="0x409250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408e9d50" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408e9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e9f28"/>
        <function-ref name="cancel" scoped="" ref="0x40926018"/>
        <function-ref name="sendDone" scoped="" ref="0x409260f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40925708" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40925708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409258e0"/>
        <function-ref name="header" scoped="" ref="0x409259c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40926258" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40926258"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40926430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40925230" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40925230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40925408"/>
        <function-ref name="ready" scoped="" ref="0x409254e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409255c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40926570" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40926570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40926748"/>
        <function-ref name="setChannel" scoped="" ref="0x40926828"/>
        <function-ref name="getChannel" scoped="" ref="0x40926908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4107c3b0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4107c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4107c588"/>
        <function-ref name="stopDone" scoped="" ref="0x4107c668"/>
        <function-ref name="start" scoped="" ref="0x4107c748"/>
        <function-ref name="stop" scoped="" ref="0x4107c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4107c988" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4107c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4107cb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4107ba70" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4107ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4107bc48"/>
        <function-ref name="turnOn" scoped="" ref="0x4107bd28"/>
        <function-ref name="setChannel" scoped="" ref="0x4107be08"/>
        <function-ref name="done" scoped="" ref="0x4107bee8"/>
        <function-ref name="standby" scoped="" ref="0x41079010"/>
        <function-ref name="getChannel" scoped="" ref="0x410790f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4107ccc0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4107ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4107ce98"/>
        <function-ref name="cancel" scoped="" ref="0x4107b010"/>
        <function-ref name="sendDone" scoped="" ref="0x4107b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410785c8" loc="189:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410785c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410787a0"/>
        <function-ref name="runTask" scoped="" ref="0x41078880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41079cc0" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41079cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41079e98"/>
        <function-ref name="header" scoped="" ref="0x41078010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41078a00" loc="144:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41078a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41078bd8"/>
        <function-ref name="runTask" scoped="" ref="0x41078cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4107b250" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4107b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4107b428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41078190" loc="322:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41078190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41078368"/>
        <function-ref name="runTask" scoped="" ref="0x41078448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x410797e8" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x410797e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410799c0"/>
        <function-ref name="ready" scoped="" ref="0x41079aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x41079b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4107b568" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4107b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4107b740"/>
        <function-ref name="setChannel" scoped="" ref="0x4107b820"/>
        <function-ref name="getChannel" scoped="" ref="0x4107b900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41079230" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41079230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41079408"/>
        <function-ref name="suspend" scoped="" ref="0x410794e8"/>
        <function-ref name="resume" scoped="" ref="0x410795c8"/>
        <function-ref name="run" scoped="" ref="0x410796a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40920930" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40920930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40920b08"/>
        <function-ref name="ready" scoped="" ref="0x40920be8"/>
        <function-ref name="sendDone" scoped="" ref="0x40920cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40920e28" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40920e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093d050"/>
        <function-ref name="header" scoped="" ref="0x4093d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4093d270" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4093d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4093d448"/>
        <function-ref name="wait" scoped="" ref="0x4093d528"/>
        <function-ref name="cancel" scoped="" ref="0x4093d608"/>
        <function-ref name="isFree" scoped="" ref="0x4093d6e8"/>
        <function-ref name="getNow" scoped="" ref="0x4093d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4093d928" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4093d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4093db00"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4093dbe0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4093dcc0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4093dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409204e8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409204e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409206c0"/>
        <function-ref name="header" scoped="" ref="0x409207a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40920010" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40920010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409201e8"/>
        <function-ref name="ready" scoped="" ref="0x409202c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409203a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41096ea0" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41096ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410950c0"/>
        <function-ref name="ready" scoped="" ref="0x410951a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41095280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410953e0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410953e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410955b8"/>
        <function-ref name="header" scoped="" ref="0x41095698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x410957d8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410957d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410959b0"/>
        <function-ref name="wait" scoped="" ref="0x41095a90"/>
        <function-ref name="cancel" scoped="" ref="0x41095b70"/>
        <function-ref name="isFree" scoped="" ref="0x41095c50"/>
        <function-ref name="getNow" scoped="" ref="0x41095d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41095e70" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41095e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41094070"/>
        <function-ref name="rand32" scoped="" ref="0x41094150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x410942b0" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x410942b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41094488"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x41094568"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x41094648"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x41094728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41096a58" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41096a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41096c30"/>
        <function-ref name="header" scoped="" ref="0x41096d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x41096580" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41096580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41096758"/>
        <function-ref name="ready" scoped="" ref="0x41096838"/>
        <function-ref name="sendDone" scoped="" ref="0x41096918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x410948a8" loc="78:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x410948a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41094a80"/>
        <function-ref name="runTask" scoped="" ref="0x41094b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4093c478" loc="46:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4093c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4093c650"/>
        <function-ref name="rand32" scoped="" ref="0x4093c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4093ab58" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4093ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093c1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4093f918" loc="44:/home/user/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4093f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40957ef8" loc="48:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40957ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409560e0"/>
        <function-ref name="rand32" scoped="" ref="0x409561c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40957638" loc="47:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40957638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40957c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40957118" loc="46:/home/user/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40957118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409572f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4094cb50" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4094cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094cd28"/>
        <function-ref name="ready" scoped="" ref="0x4094ce08"/>
        <function-ref name="sendDone" scoped="" ref="0x4094cee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40972060" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40972060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40972238"/>
        <function-ref name="header" scoped="" ref="0x40972318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40972458" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40972458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40972630"/>
        <function-ref name="wait" scoped="" ref="0x40972710"/>
        <function-ref name="cancel" scoped="" ref="0x409727f0"/>
        <function-ref name="isFree" scoped="" ref="0x409728d0"/>
        <function-ref name="getNow" scoped="" ref="0x409729b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x409714f0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x409714f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409716c8"/>
        <function-ref name="get" scoped="" ref="0x409717a8"/>
        <function-ref name="setValue" scoped="" ref="0x40971888"/>
        <function-ref name="set" scoped="" ref="0x40971968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40972b10" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40972b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40972ce8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40972dc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40972ea8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40971010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409710f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409711d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409712b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40971390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4094c230" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4094c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4094c408"/>
        <function-ref name="header" scoped="" ref="0x4094c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4094dcf8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4094dcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094ded0"/>
        <function-ref name="ready" scoped="" ref="0x4094c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4094c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4094c628" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4094c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4094c800"/>
        <function-ref name="noAck" scoped="" ref="0x4094c8e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4094c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4096c8a0" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4096c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4096ca78"/>
        <function-ref name="stopDone" scoped="" ref="0x4096cb58"/>
        <function-ref name="start" scoped="" ref="0x4096cc38"/>
        <function-ref name="stop" scoped="" ref="0x4096cd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40981708" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40981708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409818e0"/>
        <function-ref name="request" scoped="" ref="0x409819c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4097ecc8" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4097ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097eea0"/>
        <function-ref name="ready" scoped="" ref="0x4097d010"/>
        <function-ref name="sendDone" scoped="" ref="0x4097d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4097d250" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4097d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097d428"/>
        <function-ref name="header" scoped="" ref="0x4097d508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40982668" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40982668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40982840"/>
        <function-ref name="turnOn" scoped="" ref="0x40982920"/>
        <function-ref name="setChannel" scoped="" ref="0x40982a00"/>
        <function-ref name="done" scoped="" ref="0x40982ae0"/>
        <function-ref name="standby" scoped="" ref="0x40982bc0"/>
        <function-ref name="getChannel" scoped="" ref="0x40982ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40981b00" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40981b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40981cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40981db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40981e98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40980010"/>
        <function-ref name="headerLength" scoped="" ref="0x409800f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409801d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4097e4b0" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4097e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4097e708"/>
        <function-ref name="turnOn" scoped="" ref="0x4097e7e8"/>
        <function-ref name="setChannel" scoped="" ref="0x4097e8c8"/>
        <function-ref name="done" scoped="" ref="0x4097e9a8"/>
        <function-ref name="standby" scoped="" ref="0x4097ea88"/>
        <function-ref name="getChannel" scoped="" ref="0x4097eb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40980330" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40980330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40980508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40981310" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40981310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409814e8"/>
        <function-ref name="header" scoped="" ref="0x409815c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x4097e178" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x4097e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40980698" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40980698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40980870"/>
        <function-ref name="stopDone" scoped="" ref="0x40980950"/>
        <function-ref name="start" scoped="" ref="0x40980a30"/>
        <function-ref name="stop" scoped="" ref="0x40980b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4097da80" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4097da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4097dc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x4097dd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097de18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4097def8"/>
        <function-ref name="headerLength" scoped="" ref="0x4097c010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4097c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40982350" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40982350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40982528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097c250" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4097c428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40980c70" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40980c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40980e48"/>
        <function-ref name="cancel" scoped="" ref="0x40980f28"/>
        <function-ref name="sendDone" scoped="" ref="0x4097e018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40982de0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40982de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40981010"/>
        <function-ref name="ready" scoped="" ref="0x409810f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409811d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x4097d668" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x4097d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4097d840"/>
        <function-ref name="request" scoped="" ref="0x4097d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4096ce58" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4096ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40982050"/>
        <function-ref name="cancel" scoped="" ref="0x40982130"/>
        <function-ref name="sendDone" scoped="" ref="0x40982210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409c5098" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409c5098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c5270"/>
        <function-ref name="get" scoped="" ref="0x409c5350"/>
        <function-ref name="setValue" scoped="" ref="0x409c5430"/>
        <function-ref name="set" scoped="" ref="0x409c5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c77f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c79c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c7aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c7b88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c7c68"/>
        <function-ref name="headerLength" scoped="" ref="0x409c7d48"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c7e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c68f0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c6ac8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c6ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c6c88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c6d68"/>
        <function-ref name="headerLength" scoped="" ref="0x409c6e48"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c6f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409a8180" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409a8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409a8c80"/>
        <function-ref name="clear" scoped="" ref="0x409c7048"/>
        <function-ref name="isValid" scoped="" ref="0x409a88d0"/>
        <function-ref name="set" scoped="" ref="0x409c73f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409c6078" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409c6078"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40978998" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40978998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409aa4d0"/>
        <function-ref name="clear" scoped="" ref="0x409aa880"/>
        <function-ref name="isValid" scoped="" ref="0x409aa120"/>
        <function-ref name="set" scoped="" ref="0x409aac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x410a3010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x410a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a31e8"/>
        <function-ref name="get" scoped="" ref="0x410a32c8"/>
        <function-ref name="setValue" scoped="" ref="0x410a33a8"/>
        <function-ref name="set" scoped="" ref="0x410a3488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x410a47b8" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x410a47b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a4990"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a4a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a4b50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a4c30"/>
        <function-ref name="headerLength" scoped="" ref="0x410a4d10"/>
        <function-ref name="metadataLength" scoped="" ref="0x410a4df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x410a2888" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x410a2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a2a60"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a2b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a2c20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a2d00"/>
        <function-ref name="headerLength" scoped="" ref="0x410a2de0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410a2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x410a60c0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x410a60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x410a6bc0"/>
        <function-ref name="clear" scoped="" ref="0x410a4010"/>
        <function-ref name="isValid" scoped="" ref="0x410a6810"/>
        <function-ref name="set" scoped="" ref="0x410a43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x410a3678" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x410a3678"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410a3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x410a2010" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x410a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410a2658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x410ab8c0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x410ab8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x410a73f8"/>
        <function-ref name="clear" scoped="" ref="0x410a77a8"/>
        <function-ref name="isValid" scoped="" ref="0x410a7048"/>
        <function-ref name="set" scoped="" ref="0x410a7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409ac5e0" loc="20:/home/user/local/src/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409ac5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409acc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c23f0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c25c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c26a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c2788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c2868"/>
        <function-ref name="headerLength" scoped="" ref="0x409c2948"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c2a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c2bb8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c2bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c2d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c2e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c1010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c10f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409c11d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409d1db8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409d1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c2010"/>
        <function-ref name="get" scoped="" ref="0x409c20f0"/>
        <function-ref name="setValue" scoped="" ref="0x409c21d0"/>
        <function-ref name="set" scoped="" ref="0x409c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409d0548" loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409d0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409d0720"/>
        <function-ref name="stopDone" scoped="" ref="0x409d0800"/>
        <function-ref name="start" scoped="" ref="0x409d08e0"/>
        <function-ref name="stop" scoped="" ref="0x409d09c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409ce408" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409ce408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ce5e0"/>
        <function-ref name="request" scoped="" ref="0x409ce6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409cb9c8" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409cb9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cbba0"/>
        <function-ref name="ready" scoped="" ref="0x409cbc80"/>
        <function-ref name="sendDone" scoped="" ref="0x409cbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409cbec0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409cbec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ca0c0"/>
        <function-ref name="header" scoped="" ref="0x409ca1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409cf328" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409cf328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409cf500"/>
        <function-ref name="turnOn" scoped="" ref="0x409cf5e0"/>
        <function-ref name="setChannel" scoped="" ref="0x409cf6c0"/>
        <function-ref name="done" scoped="" ref="0x409cf7a0"/>
        <function-ref name="standby" scoped="" ref="0x409cf880"/>
        <function-ref name="getChannel" scoped="" ref="0x409cf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409ce800" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409ce800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ce9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409ceab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ceb98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409cec78"/>
        <function-ref name="headerLength" scoped="" ref="0x409ced58"/>
        <function-ref name="metadataLength" scoped="" ref="0x409cee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409cb1b0" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409cb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409cb408"/>
        <function-ref name="turnOn" scoped="" ref="0x409cb4e8"/>
        <function-ref name="setChannel" scoped="" ref="0x409cb5c8"/>
        <function-ref name="done" scoped="" ref="0x409cb6a8"/>
        <function-ref name="standby" scoped="" ref="0x409cb788"/>
        <function-ref name="getChannel" scoped="" ref="0x409cb868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409cd010" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409cd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409ce010" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ce1e8"/>
        <function-ref name="header" scoped="" ref="0x409ce2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409cde48" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409cde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409cb050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409cd378" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409cd378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409cd550"/>
        <function-ref name="stopDone" scoped="" ref="0x409cd630"/>
        <function-ref name="start" scoped="" ref="0x409cd710"/>
        <function-ref name="stop" scoped="" ref="0x409cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409ca718" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409ca718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ca8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409ca9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409caab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409cab90"/>
        <function-ref name="headerLength" scoped="" ref="0x409cac70"/>
        <function-ref name="metadataLength" scoped="" ref="0x409cad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409cf010" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409cf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409caeb0" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409caeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c90c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409cd950" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409cd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cdb28"/>
        <function-ref name="cancel" scoped="" ref="0x409cdc08"/>
        <function-ref name="sendDone" scoped="" ref="0x409cdce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409cfaa0" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409cfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cfc78"/>
        <function-ref name="ready" scoped="" ref="0x409cfd58"/>
        <function-ref name="sendDone" scoped="" ref="0x409cfe38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409ca300" loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409ca300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ca4d8"/>
        <function-ref name="request" scoped="" ref="0x409ca5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409d0b00" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409d0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d0cd8"/>
        <function-ref name="cancel" scoped="" ref="0x409d0db8"/>
        <function-ref name="sendDone" scoped="" ref="0x409d0e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409e6a68" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409e6a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409e6c40"/>
        <function-ref name="request" scoped="" ref="0x409e6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409e4bf8" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409e4bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e27f8"/>
        <function-ref name="get" scoped="" ref="0x409e2538"/>
        <function-ref name="isSet" scoped="" ref="0x409e2278"/>
        <function-ref name="set" scoped="" ref="0x409e2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x409f9a08" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x409f9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f9be0"/>
        <function-ref name="get" scoped="" ref="0x409f9cc0"/>
        <function-ref name="setValue" scoped="" ref="0x409f9da0"/>
        <function-ref name="set" scoped="" ref="0x409f9e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409daad8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409daad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409fb6b8"/>
        <function-ref name="clear" scoped="" ref="0x409fba68"/>
        <function-ref name="isValid" scoped="" ref="0x409fb308"/>
        <function-ref name="set" scoped="" ref="0x409fbe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409e98b0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409e98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409e9a88"/>
        <function-ref name="turnOn" scoped="" ref="0x409e9b68"/>
        <function-ref name="setChannel" scoped="" ref="0x409e9c48"/>
        <function-ref name="done" scoped="" ref="0x409e9d28"/>
        <function-ref name="standby" scoped="" ref="0x409e9e08"/>
        <function-ref name="getChannel" scoped="" ref="0x409e9ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409f8700" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409f8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409f88d8"/>
        <function-ref name="wait" scoped="" ref="0x409f89b8"/>
        <function-ref name="cancel" scoped="" ref="0x409f8a98"/>
        <function-ref name="isFree" scoped="" ref="0x409f8b78"/>
        <function-ref name="getNow" scoped="" ref="0x409f8c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409e5888" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409e5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e4470"/>
        <function-ref name="get" scoped="" ref="0x409e41b0"/>
        <function-ref name="isSet" scoped="" ref="0x409e5ed0"/>
        <function-ref name="set" scoped="" ref="0x409e4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409e6ed0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409e6ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e50c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409e51a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e5280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409e5360"/>
        <function-ref name="headerLength" scoped="" ref="0x409e5440"/>
        <function-ref name="metadataLength" scoped="" ref="0x409e5520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409da170" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409da170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409da3c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409da4a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409da588"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x409da668"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409da748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409e6618" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409e6618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e67f0"/>
        <function-ref name="header" scoped="" ref="0x409e68d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409dd618" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409dd618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409dbaf0"/>
        <function-ref name="fired" scoped="" ref="0x409db2c0"/>
        <function-ref name="startAt" scoped="" ref="0x409db7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x409db538"/>
        <function-ref name="getAlarm" scoped="" ref="0x409dbd68"/>
        <function-ref name="start" scoped="" ref="0x409ddd68"/>
        <function-ref name="stop" scoped="" ref="0x409db048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409e1010" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e1bd8"/>
        <function-ref name="get" scoped="" ref="0x409e1918"/>
        <function-ref name="isSet" scoped="" ref="0x409e1658"/>
        <function-ref name="set" scoped="" ref="0x409e1e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x409deb78" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409deb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409dd200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409e60c0" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409e60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e6298"/>
        <function-ref name="ready" scoped="" ref="0x409e6378"/>
        <function-ref name="sendDone" scoped="" ref="0x409e6458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x409df3d8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409df3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409de010"/>
        <function-ref name="get" scoped="" ref="0x409dfce0"/>
        <function-ref name="isSet" scoped="" ref="0x409dfa20"/>
        <function-ref name="set" scoped="" ref="0x409de2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x409f80e0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x409f80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f82b8"/>
        <function-ref name="get" scoped="" ref="0x409f8398"/>
        <function-ref name="setValue" scoped="" ref="0x409f8478"/>
        <function-ref name="set" scoped="" ref="0x409f8558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x409f9370" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409f9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f9548"/>
        <function-ref name="get" scoped="" ref="0x409f9628"/>
        <function-ref name="setValue" scoped="" ref="0x409f9708"/>
        <function-ref name="set" scoped="" ref="0x409f97e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409de680" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409de680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409de858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409f2628" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409f2628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409f2800"/>
        <function-ref name="request" scoped="" ref="0x409f28e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409ff300" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409ff300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409ffa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409ef7d0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409ef7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ee3b8"/>
        <function-ref name="get" scoped="" ref="0x409ee0f8"/>
        <function-ref name="isSet" scoped="" ref="0x409efe18"/>
        <function-ref name="set" scoped="" ref="0x409ee678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a015b0" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a015b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a01788"/>
        <function-ref name="get" scoped="" ref="0x40a01868"/>
        <function-ref name="setValue" scoped="" ref="0x40a01948"/>
        <function-ref name="set" scoped="" ref="0x40a01a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x409f3118" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x409f3118"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f32f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409fe488" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409fe488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409fd0a8"/>
        <function-ref name="clear" scoped="" ref="0x409fd458"/>
        <function-ref name="isValid" scoped="" ref="0x409fecd8"/>
        <function-ref name="set" scoped="" ref="0x409fd808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a09820" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a09820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a099f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a09ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40a09bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a09c98"/>
        <function-ref name="get" scoped="" ref="0x40a09d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a09e58"/>
        <function-ref name="set" scoped="" ref="0x40a08010"/>
        <function-ref name="clr" scoped="" ref="0x40a080f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a1d298" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a1d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a1d470"/>
        <function-ref name="wait" scoped="" ref="0x40a1d550"/>
        <function-ref name="cancel" scoped="" ref="0x40a1d630"/>
        <function-ref name="isFree" scoped="" ref="0x40a1d710"/>
        <function-ref name="getNow" scoped="" ref="0x40a1d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409f3498" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409f3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409f3670"/>
        <function-ref name="turnOn" scoped="" ref="0x409f3750"/>
        <function-ref name="setChannel" scoped="" ref="0x409f3830"/>
        <function-ref name="done" scoped="" ref="0x409f3910"/>
        <function-ref name="standby" scoped="" ref="0x409f39f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409f3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409ffdb8" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409ffdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a04410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409f1458" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f1458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ef048"/>
        <function-ref name="get" scoped="" ref="0x409f1d60"/>
        <function-ref name="isSet" scoped="" ref="0x409f1aa0"/>
        <function-ref name="set" scoped="" ref="0x409ef308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409f2a90" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409f2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f2c68"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f2d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f2e28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f2f08"/>
        <function-ref name="headerLength" scoped="" ref="0x409f1010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a06da0" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a06da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a09010"/>
        <function-ref name="isInput" scoped="" ref="0x40a090f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a091d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a092b0"/>
        <function-ref name="get" scoped="" ref="0x40a09390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a09470"/>
        <function-ref name="set" scoped="" ref="0x40a09550"/>
        <function-ref name="clr" scoped="" ref="0x40a09630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a04730" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a04730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a04908"/>
        <function-ref name="headerLength" scoped="" ref="0x40a049e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a04ac8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a04ba8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a04c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409f21d8" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409f21d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f23b0"/>
        <function-ref name="header" scoped="" ref="0x409f2490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a58dd0" loc="847:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a58dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a56010"/>
        <function-ref name="runTask" scoped="" ref="0x40a560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409eeba8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409eeba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ed790"/>
        <function-ref name="get" scoped="" ref="0x409ed4d0"/>
        <function-ref name="isSet" scoped="" ref="0x409ed210"/>
        <function-ref name="set" scoped="" ref="0x409eda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409f4aa0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409f4aa0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f4c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a0a148" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a0a148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a0a320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a0a400"/>
        <function-ref name="request" scoped="" ref="0x40a0a4e0"/>
        <function-ref name="granted" scoped="" ref="0x40a0a5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a0a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a0c690" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a0c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a0c8e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a0c9c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a0caa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a0cb88"/>
        <function-ref name="get" scoped="" ref="0x40a0cc68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a0cd48"/>
        <function-ref name="set" scoped="" ref="0x40a0ce28"/>
        <function-ref name="clr" scoped="" ref="0x40a0cf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x409eb010" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ebbd8"/>
        <function-ref name="get" scoped="" ref="0x409eb918"/>
        <function-ref name="isSet" scoped="" ref="0x409eb658"/>
        <function-ref name="set" scoped="" ref="0x409ebe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409f3c70" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409f3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f3e48"/>
        <function-ref name="ready" scoped="" ref="0x409f3f28"/>
        <function-ref name="sendDone" scoped="" ref="0x409f2018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a029e0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a029e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a02bb8"/>
        <function-ref name="disable" scoped="" ref="0x40a02c98"/>
        <function-ref name="captured" scoped="" ref="0x40a02d78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a02e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a06728" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a06728"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a06900"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a069e0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a06ac0"/>
        <function-ref name="write" scoped="" ref="0x40a06ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a01c70" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a01c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a01e48"/>
        <function-ref name="get" scoped="" ref="0x40a01f28"/>
        <function-ref name="setValue" scoped="" ref="0x409fe018"/>
        <function-ref name="set" scoped="" ref="0x409fe0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a04f00" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a04f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a010f0"/>
        <function-ref name="get" scoped="" ref="0x40a011d0"/>
        <function-ref name="setValue" scoped="" ref="0x40a012b0"/>
        <function-ref name="set" scoped="" ref="0x40a01390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a0c278" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a0c450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409fdc48" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409fdc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409fde20"/>
        <function-ref name="suspend" scoped="" ref="0x409fdf00"/>
        <function-ref name="resume" scoped="" ref="0x40a1d010"/>
        <function-ref name="run" scoped="" ref="0x40a1d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a77090" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a77090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a77268"/>
        <function-ref name="isInput" scoped="" ref="0x40a77348"/>
        <function-ref name="toggle" scoped="" ref="0x40a77428"/>
        <function-ref name="isOutput" scoped="" ref="0x40a77508"/>
        <function-ref name="get" scoped="" ref="0x40a775e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a776c8"/>
        <function-ref name="set" scoped="" ref="0x40a777a8"/>
        <function-ref name="clr" scoped="" ref="0x40a77888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a78688" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a78688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a78860"/>
        <function-ref name="isInput" scoped="" ref="0x40a78940"/>
        <function-ref name="toggle" scoped="" ref="0x40a78a20"/>
        <function-ref name="isOutput" scoped="" ref="0x40a78b00"/>
        <function-ref name="get" scoped="" ref="0x40a78be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a78cc0"/>
        <function-ref name="set" scoped="" ref="0x40a78da0"/>
        <function-ref name="clr" scoped="" ref="0x40a78e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a9a2a8" loc="49:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a9a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a99758"/>
        <function-ref name="fired" scoped="" ref="0x40a9af10"/>
        <function-ref name="startAt" scoped="" ref="0x40a99418"/>
        <function-ref name="isRunning" scoped="" ref="0x40a991a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a999d0"/>
        <function-ref name="start" scoped="" ref="0x40a9a9f8"/>
        <function-ref name="stop" scoped="" ref="0x40a9ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a79858" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a79858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a79a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a79b10"/>
        <function-ref name="request" scoped="" ref="0x40a79bf0"/>
        <function-ref name="granted" scoped="" ref="0x40a79cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a79db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40a7cd98" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a7cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a79010"/>
        <function-ref name="isInput" scoped="" ref="0x40a790f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a791d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a792b0"/>
        <function-ref name="get" scoped="" ref="0x40a79390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a79470"/>
        <function-ref name="set" scoped="" ref="0x40a79550"/>
        <function-ref name="clr" scoped="" ref="0x40a79630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a77a78" loc="48:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a77a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a77c50"/>
        <function-ref name="disable" scoped="" ref="0x40a77d30"/>
        <function-ref name="captured" scoped="" ref="0x40a77e10"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a77ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a78010" loc="43:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a78010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a781e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a782c8"/>
        <function-ref name="splitRead" scoped="" ref="0x40a783a8"/>
        <function-ref name="write" scoped="" ref="0x40a78488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a99dc0" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a99dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403d5728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a98428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a8e810" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a8e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8e9e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a8eac8"/>
        <function-ref name="toggle" scoped="" ref="0x40a8eba8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8ec88"/>
        <function-ref name="get" scoped="" ref="0x40a8ed68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8ee48"/>
        <function-ref name="set" scoped="" ref="0x40a8ef28"/>
        <function-ref name="clr" scoped="" ref="0x40a8d018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a8f998" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a8f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a8e500"/>
        <function-ref name="test" scoped="" ref="0x40a8e010"/>
        <function-ref name="get" scoped="" ref="0x40a93010"/>
        <function-ref name="captured" scoped="" ref="0x40a93528"/>
        <function-ref name="reset" scoped="" ref="0x40a937c8"/>
        <function-ref name="isOn" scoped="" ref="0x40a8e288"/>
        <function-ref name="set" scoped="" ref="0x40a93288"/>
        <function-ref name="start" scoped="" ref="0x40a93a40"/>
        <function-ref name="stop" scoped="" ref="0x40a93cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a8d220" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a8d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8d3f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a8d4d8"/>
        <function-ref name="toggle" scoped="" ref="0x40a8d5b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8d698"/>
        <function-ref name="get" scoped="" ref="0x40a8d778"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8d858"/>
        <function-ref name="set" scoped="" ref="0x40a8d938"/>
        <function-ref name="clr" scoped="" ref="0x40a8da18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a94300" loc="40:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a94300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a944d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a98bb0" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a98bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a98d88"/>
        <function-ref name="disable" scoped="" ref="0x40a98e68"/>
        <function-ref name="captured" scoped="" ref="0x40a94010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a940f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40aa1800" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40aa1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aa19d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40aa1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40aa8df0" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aa8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aa7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aa8178" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aa8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aa8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aa71e0" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aa71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aa73b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aa7498"/>
        <function-ref name="splitRead" scoped="" ref="0x40aa7578"/>
        <function-ref name="write" scoped="" ref="0x40aa7658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aa6010" loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aa6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa61e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa62c8"/>
        <function-ref name="request" scoped="" ref="0x40aa63a8"/>
        <function-ref name="granted" scoped="" ref="0x40aa6488"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa6568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40ac31e0" loc="241:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40ac31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ac33b8"/>
        <function-ref name="runTask" scoped="" ref="0x40ac3498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a9fe68" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a9fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a9e050"/>
        <function-ref name="sendDone" scoped="" ref="0x40a9e130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a9c3d8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a9c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a9c5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a9c690"/>
        <function-ref name="request" scoped="" ref="0x40a9c770"/>
        <function-ref name="granted" scoped="" ref="0x40a9c850"/>
        <function-ref name="isOwner" scoped="" ref="0x40a9c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a9f4c8" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a9f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a9f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a9f168" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a9f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a9f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ab2780" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ab2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ab2958"/>
        <function-ref name="sleep" scoped="" ref="0x40a9ddb0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ab2b18"/>
        <function-ref name="dataReady" scoped="" ref="0x40a9de90"/>
        <function-ref name="initMaster" scoped="" ref="0x40ab2cd8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ab2db8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ab2e98"/>
        <function-ref name="read" scoped="" ref="0x40a9d010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a9d0f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a9d1d0"/>
        <function-ref name="setClock" scoped="" ref="0x40a9d2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a9d390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a9d470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a9d5d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a9d6b0"/>
        <function-ref name="write" scoped="" ref="0x40a9d790"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a9d870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a9d950"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a9da30"/>
        <function-ref name="getClock" scoped="" ref="0x40a9db10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a9dbf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ab2a38"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ab2bf8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a9dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a9f850" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a9f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a9fa28"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a9fb08"/>
        <function-ref name="splitRead" scoped="" ref="0x40a9fbe8"/>
        <function-ref name="write" scoped="" ref="0x40a9fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a9e5a8" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a9e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a9e780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a9e860"/>
        <function-ref name="request" scoped="" ref="0x40a9e940"/>
        <function-ref name="granted" scoped="" ref="0x40a9ea20"/>
        <function-ref name="isOwner" scoped="" ref="0x40a9eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a9cae0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a9cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a9ccb8"/>
        <function-ref name="userId" scoped="" ref="0x40a9cd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40ab1010" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40ab1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ab11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40aa3e50" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40aa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40af6050"/>
        <function-ref name="sleep" scoped="" ref="0x40af5470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40af6210"/>
        <function-ref name="dataReady" scoped="" ref="0x40af5550"/>
        <function-ref name="initMaster" scoped="" ref="0x40af63d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40af64b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40af6590"/>
        <function-ref name="read" scoped="" ref="0x40af6670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40af6750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40af6830"/>
        <function-ref name="setClock" scoped="" ref="0x40af6910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40af69f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40af6ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40af6c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40af6d10"/>
        <function-ref name="write" scoped="" ref="0x40af6df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40af6ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40af5010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40af50f0"/>
        <function-ref name="getClock" scoped="" ref="0x40af51d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40af52b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40af6130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40af62f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40af5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40aefe88" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40aefe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aed070"/>
        <function-ref name="isInput" scoped="" ref="0x40aed150"/>
        <function-ref name="toggle" scoped="" ref="0x40aed230"/>
        <function-ref name="isOutput" scoped="" ref="0x40aed310"/>
        <function-ref name="get" scoped="" ref="0x40aed3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aed4d0"/>
        <function-ref name="set" scoped="" ref="0x40aed5b0"/>
        <function-ref name="clr" scoped="" ref="0x40aed690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40af09e8" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40af09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40af0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40af0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40af0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40af0e60"/>
        <function-ref name="get" scoped="" ref="0x40aef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aef0f0"/>
        <function-ref name="set" scoped="" ref="0x40aef1d0"/>
        <function-ref name="clr" scoped="" ref="0x40aef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40af0010" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40af0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40af01e8"/>
        <function-ref name="isInput" scoped="" ref="0x40af02c8"/>
        <function-ref name="toggle" scoped="" ref="0x40af03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40af0488"/>
        <function-ref name="get" scoped="" ref="0x40af0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40af0648"/>
        <function-ref name="set" scoped="" ref="0x40af0728"/>
        <function-ref name="clr" scoped="" ref="0x40af0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40aeeac0" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40aeeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40aeec98"/>
        <function-ref name="stop" scoped="" ref="0x40aeed78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40aed898" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40aed898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aeda70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40af21e8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40af21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40af23c0"/>
        <function-ref name="sleep" scoped="" ref="0x40af17f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40af2580"/>
        <function-ref name="dataReady" scoped="" ref="0x40af18d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40af2740"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40af2820"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40af2900"/>
        <function-ref name="read" scoped="" ref="0x40af29e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40af2ac0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40af2ba0"/>
        <function-ref name="setClock" scoped="" ref="0x40af2c80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40af2d60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40af2e40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40af1010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40af10f0"/>
        <function-ref name="write" scoped="" ref="0x40af11d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40af12b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40af1390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40af1470"/>
        <function-ref name="getClock" scoped="" ref="0x40af1550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40af1630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40af24a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40af2660"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40af1710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40aef4a0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40aef4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aef678"/>
        <function-ref name="isInput" scoped="" ref="0x40aef758"/>
        <function-ref name="toggle" scoped="" ref="0x40aef838"/>
        <function-ref name="isOutput" scoped="" ref="0x40aef918"/>
        <function-ref name="get" scoped="" ref="0x40aef9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aefad8"/>
        <function-ref name="set" scoped="" ref="0x40aefbb8"/>
        <function-ref name="clr" scoped="" ref="0x40aefc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b122c8" loc="86:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b122c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b124b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b12590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b12b80" loc="89:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b12b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b12d68"/>
        <function-ref name="configure" scoped="" ref="0x40b12e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b13b30" loc="85:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b13b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b13d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b13df8"/>
        <function-ref name="request" scoped="" ref="0x40b13ed8"/>
        <function-ref name="granted" scoped="" ref="0x40b12010"/>
        <function-ref name="isOwner" scoped="" ref="0x40b120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b126d0" loc="87:/home/user/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b126d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b128a8"/>
        <function-ref name="userId" scoped="" ref="0x40b12988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410fe8c8" loc="44:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410fe8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410feaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410fec00" loc="45:/home/user/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410fec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410fedd8"/>
        <function-ref name="isEmpty" scoped="" ref="0x410feeb8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410fc010"/>
        <function-ref name="dequeue" scoped="" ref="0x410fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410fb3b0" loc="52:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410fb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410fb598"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410fb678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410fbc78" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410fbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410fbe60"/>
        <function-ref name="configure" scoped="" ref="0x410fa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410fa170" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410fa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410fa348"/>
        <function-ref name="isEmpty" scoped="" ref="0x410fa428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410fa508"/>
        <function-ref name="dequeue" scoped="" ref="0x410fa5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410fcc58" loc="51:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410fcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410fce40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410fcf20"/>
        <function-ref name="request" scoped="" ref="0x410fb018"/>
        <function-ref name="granted" scoped="" ref="0x410fb0f8"/>
        <function-ref name="isOwner" scoped="" ref="0x410fb1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410fb7b8" loc="53:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410fb7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410fb990"/>
        <function-ref name="userId" scoped="" ref="0x410fba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410fa768" loc="69:/home/user/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410fa768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410fa940"/>
        <function-ref name="runTask" scoped="" ref="0x410faa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b28c40" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b28c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b28e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b28ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x40b2d010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b2d0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b2d1d0"/>
        <function-ref name="setControlB" scoped="" ref="0x40b2d2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b2d390"/>
        <function-ref name="getControlB" scoped="" ref="0x40b2d470"/>
        <function-ref name="setControlC" scoped="" ref="0x40b2d550"/>
        <function-ref name="setControlA" scoped="" ref="0x40b2d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b2d968" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b2d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b27500"/>
        <function-ref name="test" scoped="" ref="0x40b27010"/>
        <function-ref name="get" scoped="" ref="0x40b2c010"/>
        <function-ref name="captured" scoped="" ref="0x40b2c528"/>
        <function-ref name="reset" scoped="" ref="0x40b2c7c8"/>
        <function-ref name="isOn" scoped="" ref="0x40b27288"/>
        <function-ref name="set" scoped="" ref="0x40b2c288"/>
        <function-ref name="start" scoped="" ref="0x40b2ca40"/>
        <function-ref name="stop" scoped="" ref="0x40b2ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b27c10" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b27c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b241a0"/>
        <function-ref name="fired" scoped="" ref="0x40b25790"/>
        <function-ref name="get" scoped="" ref="0x40b25278"/>
        <function-ref name="reset" scoped="" ref="0x40b25a08"/>
        <function-ref name="isOn" scoped="" ref="0x40b24418"/>
        <function-ref name="set" scoped="" ref="0x40b254f0"/>
        <function-ref name="start" scoped="" ref="0x40b25c80"/>
        <function-ref name="stop" scoped="" ref="0x40b25ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b31230" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b31230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b30ca0"/>
        <function-ref name="test" scoped="" ref="0x40b307b0"/>
        <function-ref name="get" scoped="" ref="0x40b31878"/>
        <function-ref name="setScale" scoped="" ref="0x40b30f18"/>
        <function-ref name="getScale" scoped="" ref="0x40b2e1d0"/>
        <function-ref name="reset" scoped="" ref="0x40b30048"/>
        <function-ref name="overflow" scoped="" ref="0x40b31d90"/>
        <function-ref name="isOn" scoped="" ref="0x40b30a28"/>
        <function-ref name="set" scoped="" ref="0x40b31af0"/>
        <function-ref name="start" scoped="" ref="0x40b302c0"/>
        <function-ref name="stop" scoped="" ref="0x40b30538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b453c8" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b453c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b455a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b45680"/>
        <function-ref name="getControlA" scoped="" ref="0x40b45760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b45840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b45920"/>
        <function-ref name="setControlB" scoped="" ref="0x40b45a00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b45ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x40b45bc0"/>
        <function-ref name="setControlC" scoped="" ref="0x40b45ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b45d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b41010" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b41010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b40578"/>
        <function-ref name="fired" scoped="" ref="0x40b41b70"/>
        <function-ref name="get" scoped="" ref="0x40b41658"/>
        <function-ref name="reset" scoped="" ref="0x40b41de8"/>
        <function-ref name="isOn" scoped="" ref="0x40b407f0"/>
        <function-ref name="set" scoped="" ref="0x40b418d0"/>
        <function-ref name="start" scoped="" ref="0x40b40088"/>
        <function-ref name="stop" scoped="" ref="0x40b40300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b440f0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b440f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b43b80"/>
        <function-ref name="test" scoped="" ref="0x40b43690"/>
        <function-ref name="get" scoped="" ref="0x40b44738"/>
        <function-ref name="captured" scoped="" ref="0x40b44c50"/>
        <function-ref name="reset" scoped="" ref="0x40b44ef0"/>
        <function-ref name="isOn" scoped="" ref="0x40b43908"/>
        <function-ref name="set" scoped="" ref="0x40b449b0"/>
        <function-ref name="start" scoped="" ref="0x40b431a0"/>
        <function-ref name="stop" scoped="" ref="0x40b43418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b40c08" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b40c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b3d1a0"/>
        <function-ref name="fired" scoped="" ref="0x40b3f790"/>
        <function-ref name="get" scoped="" ref="0x40b3f278"/>
        <function-ref name="reset" scoped="" ref="0x40b3fa08"/>
        <function-ref name="isOn" scoped="" ref="0x40b3d418"/>
        <function-ref name="set" scoped="" ref="0x40b3f4f0"/>
        <function-ref name="start" scoped="" ref="0x40b3fc80"/>
        <function-ref name="stop" scoped="" ref="0x40b3fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b3d830" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b3d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b3cd90"/>
        <function-ref name="fired" scoped="" ref="0x40b3c3b0"/>
        <function-ref name="get" scoped="" ref="0x40b3de78"/>
        <function-ref name="reset" scoped="" ref="0x40b3c628"/>
        <function-ref name="isOn" scoped="" ref="0x40b3b048"/>
        <function-ref name="set" scoped="" ref="0x40b3c110"/>
        <function-ref name="start" scoped="" ref="0x40b3c8a0"/>
        <function-ref name="stop" scoped="" ref="0x40b3cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b210e0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b210e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b1fb30"/>
        <function-ref name="test" scoped="" ref="0x40b1f640"/>
        <function-ref name="get" scoped="" ref="0x40b21728"/>
        <function-ref name="setScale" scoped="" ref="0x40b1fda8"/>
        <function-ref name="getScale" scoped="" ref="0x40b45068"/>
        <function-ref name="reset" scoped="" ref="0x40b21eb8"/>
        <function-ref name="overflow" scoped="" ref="0x40b21c40"/>
        <function-ref name="isOn" scoped="" ref="0x40b1f8b8"/>
        <function-ref name="set" scoped="" ref="0x40b219a0"/>
        <function-ref name="start" scoped="" ref="0x40b1f150"/>
        <function-ref name="stop" scoped="" ref="0x40b1f3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b72c88" loc="30:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b72c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bba150"/>
        <function-ref name="fired" scoped="" ref="0x40bbb908"/>
        <function-ref name="startAt" scoped="" ref="0x40bbbdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40bbbb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bba3c8"/>
        <function-ref name="start" scoped="" ref="0x40bbb3f0"/>
        <function-ref name="stop" scoped="" ref="0x40bbb690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b93480" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b93480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b93658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b93868" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b93868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b892e0"/>
        <function-ref name="test" scoped="" ref="0x40b91dd0"/>
        <function-ref name="get" scoped="" ref="0x40b93eb0"/>
        <function-ref name="setScale" scoped="" ref="0x40b89558"/>
        <function-ref name="getScale" scoped="" ref="0x40b897f8"/>
        <function-ref name="reset" scoped="" ref="0x40b91668"/>
        <function-ref name="overflow" scoped="" ref="0x40b913f0"/>
        <function-ref name="isOn" scoped="" ref="0x40b89068"/>
        <function-ref name="set" scoped="" ref="0x40b91150"/>
        <function-ref name="start" scoped="" ref="0x40b918e0"/>
        <function-ref name="stop" scoped="" ref="0x40b91b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410e3010" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410e3010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402fe040"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402fe040"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410e24e0"/>
        <function-ref name="fired" scoped="" ref="0x410e3c78"/>
        <function-ref name="startAt" scoped="" ref="0x410e21a0"/>
        <function-ref name="isRunning" scoped="" ref="0x410e3ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x410e2758"/>
        <function-ref name="start" scoped="" ref="0x410e3760"/>
        <function-ref name="stop" scoped="" ref="0x410e3a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4111dcd8" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4111dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4111b288"/>
        <function-ref name="fired" scoped="" ref="0x4111c888"/>
        <function-ref name="get" scoped="" ref="0x4111c370"/>
        <function-ref name="reset" scoped="" ref="0x4111cb00"/>
        <function-ref name="isOn" scoped="" ref="0x4111b500"/>
        <function-ref name="set" scoped="" ref="0x4111c5e8"/>
        <function-ref name="start" scoped="" ref="0x4111cd78"/>
        <function-ref name="stop" scoped="" ref="0x4111b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x410e2a18" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x410e2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4111d500"/>
        <function-ref name="test" scoped="" ref="0x4111d010"/>
        <function-ref name="get" scoped="" ref="0x410e1088"/>
        <function-ref name="setScale" scoped="" ref="0x4111d778"/>
        <function-ref name="getScale" scoped="" ref="0x4111da18"/>
        <function-ref name="reset" scoped="" ref="0x410e1818"/>
        <function-ref name="overflow" scoped="" ref="0x410e15a0"/>
        <function-ref name="isOn" scoped="" ref="0x4111d288"/>
        <function-ref name="set" scoped="" ref="0x410e1300"/>
        <function-ref name="start" scoped="" ref="0x410e1a90"/>
        <function-ref name="stop" scoped="" ref="0x410e1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bb9580" loc="39:/home/user/local/src/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bb9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb9bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bb6698" loc="24:/home/user/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb6de8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bb2300"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bb2088"/>
        <function-ref name="overflow" scoped="" ref="0x40bb2578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bb0e90" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb0e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TOne" ref="0x40381db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40baf600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bafaf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40baf878"/>
        <function-ref name="overflow" scoped="" ref="0x40bafd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bcf078" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bcf078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bcdab8"/>
        <function-ref name="test" scoped="" ref="0x40bcd5c8"/>
        <function-ref name="get" scoped="" ref="0x40bcf6c0"/>
        <function-ref name="setScale" scoped="" ref="0x40bcdd30"/>
        <function-ref name="getScale" scoped="" ref="0x40bcc010"/>
        <function-ref name="reset" scoped="" ref="0x40bcfe50"/>
        <function-ref name="overflow" scoped="" ref="0x40bcfbd8"/>
        <function-ref name="isOn" scoped="" ref="0x40bcd840"/>
        <function-ref name="set" scoped="" ref="0x40bcf938"/>
        <function-ref name="start" scoped="" ref="0x40bcd0d8"/>
        <function-ref name="stop" scoped="" ref="0x40bcd350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40be40e0" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40be40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be4830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be4d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be4aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40be3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bb4e60" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bcb5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bcbad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bcb858"/>
        <function-ref name="overflow" scoped="" ref="0x40bcbd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40be3f18" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40be3f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be2578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40be28c8" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be0048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be0538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be02c0"/>
        <function-ref name="overflow" scoped="" ref="0x40be07b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bdc010" loc="31:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bdc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bdc760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c09c90" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c09c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c09e68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c05010"/>
        <function-ref name="led1On" scoped="" ref="0x40c050f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c051d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c052b0"/>
        <function-ref name="get" scoped="" ref="0x40c05390"/>
        <function-ref name="led1Off" scoped="" ref="0x40c05470"/>
        <function-ref name="led2Off" scoped="" ref="0x40c057f0"/>
        <function-ref name="set" scoped="" ref="0x40c05550"/>
        <function-ref name="led0On" scoped="" ref="0x40c05630"/>
        <function-ref name="led2On" scoped="" ref="0x40c05710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40c01110" loc="50:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c01110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c012e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c013c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c014a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c01588"/>
        <function-ref name="get" scoped="" ref="0x40c01668"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c01748"/>
        <function-ref name="set" scoped="" ref="0x40c01828"/>
        <function-ref name="clr" scoped="" ref="0x40c01908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c020a0" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c02278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40c01af8" loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c01af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c01cd0"/>
        <function-ref name="isInput" scoped="" ref="0x40c01db0"/>
        <function-ref name="toggle" scoped="" ref="0x40c01e90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c00010"/>
        <function-ref name="get" scoped="" ref="0x40c000f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c001d0"/>
        <function-ref name="set" scoped="" ref="0x40c002b0"/>
        <function-ref name="clr" scoped="" ref="0x40c00390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c023e8" loc="47:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c023e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c025c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c026a0"/>
        <function-ref name="led1On" scoped="" ref="0x40c02780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c02860"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c02940"/>
        <function-ref name="get" scoped="" ref="0x40c02a20"/>
        <function-ref name="led1Off" scoped="" ref="0x40c02b00"/>
        <function-ref name="led2Off" scoped="" ref="0x40c02e80"/>
        <function-ref name="set" scoped="" ref="0x40c02be0"/>
        <function-ref name="led0On" scoped="" ref="0x40c02cc0"/>
        <function-ref name="led2On" scoped="" ref="0x40c02da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40c00580" loc="52:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c00580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c00758"/>
        <function-ref name="isInput" scoped="" ref="0x40c00838"/>
        <function-ref name="toggle" scoped="" ref="0x40c00918"/>
        <function-ref name="isOutput" scoped="" ref="0x40c009f8"/>
        <function-ref name="get" scoped="" ref="0x40c00ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c00bb8"/>
        <function-ref name="set" scoped="" ref="0x40c00c98"/>
        <function-ref name="clr" scoped="" ref="0x40c00d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40c1a8e8" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c1a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1aac0"/>
        <function-ref name="isInput" scoped="" ref="0x40c1aba0"/>
        <function-ref name="toggle" scoped="" ref="0x40c1ac80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1ad60"/>
        <function-ref name="get" scoped="" ref="0x40c1ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1af20"/>
        <function-ref name="set" scoped="" ref="0x40c19018"/>
        <function-ref name="clr" scoped="" ref="0x40c190f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40c19308" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c19308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c194e0"/>
        <function-ref name="isInput" scoped="" ref="0x40c195c0"/>
        <function-ref name="toggle" scoped="" ref="0x40c196a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c19780"/>
        <function-ref name="get" scoped="" ref="0x40c19860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c19940"/>
        <function-ref name="set" scoped="" ref="0x40c19a20"/>
        <function-ref name="clr" scoped="" ref="0x40c19b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40c186e0" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c186e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c188b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40c19d10" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c19d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c19ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40c18010"/>
        <function-ref name="toggle" scoped="" ref="0x40c180f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c181d0"/>
        <function-ref name="get" scoped="" ref="0x40c182b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c18390"/>
        <function-ref name="set" scoped="" ref="0x40c18470"/>
        <function-ref name="clr" scoped="" ref="0x40c18550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c06940" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c06940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c154c8"/>
        <function-ref name="fired" scoped="" ref="0x40c16768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c16e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c16c18"/>
        <function-ref name="getdt" scoped="" ref="0x40c15978"/>
        <function-ref name="gett0" scoped="" ref="0x40c15720"/>
        <function-ref name="isRunning" scoped="" ref="0x40c169c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c16010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c151a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c16290"/>
        <function-ref name="stop" scoped="" ref="0x40c16510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c3c188" loc="21:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c3c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3c7b0"/>
        <function-ref name="readDone" scoped="" ref="0x40c3ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x411015f0" loc="41:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x411015f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41101c18"/>
        <function-ref name="readDone" scoped="" ref="0x41101e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4113ce80" loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4113ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4113b070"/>
        <function-ref name="configure" scoped="" ref="0x4113b150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4113dde0" loc="22:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4113dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4113c448"/>
        <function-ref name="readDone" scoped="" ref="0x4113c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4113c9a8" loc="24:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4113c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4113cb80"/>
        <function-ref name="getChannel" scoped="" ref="0x4113cc60"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4113cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c2f348" loc="19:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c2f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2f970"/>
        <function-ref name="readDone" scoped="" ref="0x40c2fbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40c2a7a8" loc="20:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40c2a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2adf0"/>
        <function-ref name="readDone" scoped="" ref="0x40c2c088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40c2c740" loc="23:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c2c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c2c918"/>
        <function-ref name="getChannel" scoped="" ref="0x40c2c9f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c2cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40c2b010" loc="24:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c2b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c2b2c8"/>
        <function-ref name="request" scoped="" ref="0x40c2b3a8"/>
        <function-ref name="granted" scoped="" ref="0x40c2b488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c2b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c4f418" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c4f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c4f5f0"/>
        <function-ref name="configure" scoped="" ref="0x40c4f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c49b88" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c49b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c49d60"/>
        <function-ref name="dataReady" scoped="" ref="0x40c49e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c4c9e8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c4c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c4cbc0"/>
        <function-ref name="cancel" scoped="" ref="0x40c4cca0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c4cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c51010" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c51010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c511e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c512c8"/>
        <function-ref name="request" scoped="" ref="0x40c513a8"/>
        <function-ref name="granted" scoped="" ref="0x40c51488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c51568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c460b0" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c460b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c46288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c46e78" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c46e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c45070"/>
        <function-ref name="dataReady" scoped="" ref="0x40c45150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c468f0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c46ac8"/>
        <function-ref name="cancel" scoped="" ref="0x40c46ba8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c46c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40c68818" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c68818"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c689f0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c68ad0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c68bb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c68c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c68d70"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c68e50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c44010"/>
        <function-ref name="isComplete" scoped="" ref="0x40c440f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c441d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c442b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c44390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c44470"/>
        <function-ref name="startConversion" scoped="" ref="0x40c44550"/>
        <function-ref name="isStarted" scoped="" ref="0x40c446b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c44790"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c44870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c44950"/>
        <function-ref name="getValue" scoped="" ref="0x40c44a30"/>
        <function-ref name="dataReady" scoped="" ref="0x40c44b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40c46460" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c46460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c46638"/>
        <function-ref name="stop" scoped="" ref="0x40c46718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40c44ce8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c44ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40c44ec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40c43010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40c430f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40c431d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40c432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c4ba08" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c4ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c4bbe0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c4bcc0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c4bda0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c4be80"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c76010"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c760f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c761d0"/>
        <function-ref name="isComplete" scoped="" ref="0x40c762b0"/>
        <function-ref name="cancel" scoped="" ref="0x40c76390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c76470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c76550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c76630"/>
        <function-ref name="startConversion" scoped="" ref="0x40c76710"/>
        <function-ref name="isStarted" scoped="" ref="0x40c76870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c76950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c76a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c76b10"/>
        <function-ref name="getValue" scoped="" ref="0x40c76bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c76cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c75730" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c75730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c75908"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c759e8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c75ac8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c75ba8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c75c88"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c75d68"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c75e48"/>
        <function-ref name="isComplete" scoped="" ref="0x40c75f28"/>
        <function-ref name="cancel" scoped="" ref="0x40c72018"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c720f8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c721d8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c722b8"/>
        <function-ref name="startConversion" scoped="" ref="0x40c72398"/>
        <function-ref name="isStarted" scoped="" ref="0x40c724f8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c725d8"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c726b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c72798"/>
        <function-ref name="getValue" scoped="" ref="0x40c72878"/>
        <function-ref name="dataReady" scoped="" ref="0x40c72958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40c72b40" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40c72b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c72d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40cc7b60" loc="92:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40cc7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40cc7d48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cc7e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40cc6b58" loc="96:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40cc6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40cc6d40"/>
        <function-ref name="configure" scoped="" ref="0x40cc6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40cc6010" loc="93:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cc6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc61e8"/>
        <function-ref name="requested" scoped="" ref="0x40cc62c8"/>
        <function-ref name="granted" scoped="" ref="0x40cc63a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc6488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cc6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cc7420" loc="91:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cc7420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc7608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cc76e8"/>
        <function-ref name="request" scoped="" ref="0x40cc77c8"/>
        <function-ref name="granted" scoped="" ref="0x40cc78a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40cc66a8" loc="94:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40cc66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40cc6880"/>
        <function-ref name="userId" scoped="" ref="0x40cc6960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41134a90" loc="44:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41134a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41134c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41134dc8" loc="45:/home/user/local/src/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41134dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41132010"/>
        <function-ref name="isEmpty" scoped="" ref="0x411320f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411321d0"/>
        <function-ref name="dequeue" scoped="" ref="0x411322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41131750" loc="55:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41131750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41131938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41131a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411306f0" loc="60:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411306f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411308d8"/>
        <function-ref name="configure" scoped="" ref="0x411309b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41130b18" loc="61:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41130b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41130cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41130dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41130eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x4112f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41131b58" loc="56:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41131b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41131d30"/>
        <function-ref name="requested" scoped="" ref="0x41131e10"/>
        <function-ref name="granted" scoped="" ref="0x41131ef0"/>
        <function-ref name="isOwner" scoped="" ref="0x41130010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411300f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4112f150" loc="62:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4112f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4112f328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4112f408"/>
        <function-ref name="led1On" scoped="" ref="0x4112f4e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4112f5c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4112f6a8"/>
        <function-ref name="get" scoped="" ref="0x4112f788"/>
        <function-ref name="led1Off" scoped="" ref="0x4112f868"/>
        <function-ref name="led0On" scoped="" ref="0x4112fbe8"/>
        <function-ref name="set" scoped="" ref="0x4112fa28"/>
        <function-ref name="led2On" scoped="" ref="0x4112f948"/>
        <function-ref name="led2Off" scoped="" ref="0x4112fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41131010" loc="54:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41131010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411311f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411312d8"/>
        <function-ref name="request" scoped="" ref="0x411313b8"/>
        <function-ref name="granted" scoped="" ref="0x41131498"/>
        <function-ref name="isOwner" scoped="" ref="0x41131578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41130230" loc="57:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41130230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41130408"/>
        <function-ref name="userId" scoped="" ref="0x411304e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4112fd68" loc="75:/home/user/local/src/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4112fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4112d010"/>
        <function-ref name="runTask" scoped="" ref="0x4112d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40cc4de8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40cc4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40ce4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40ce4150" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ce4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ce4328"/>
        <function-ref name="requested" scoped="" ref="0x40ce4408"/>
        <function-ref name="granted" scoped="" ref="0x40ce44e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ce45c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ce46a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40cc49f0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40cc49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc4bc8"/>
        <function-ref name="stop" scoped="" ref="0x40cc4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40ce47e8" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ce47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ce49c0"/>
        <function-ref name="userId" scoped="" ref="0x40ce4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41153b50" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41153b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41153d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41153e68" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41153e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41151050"/>
        <function-ref name="requested" scoped="" ref="0x41151130"/>
        <function-ref name="granted" scoped="" ref="0x41151210"/>
        <function-ref name="isOwner" scoped="" ref="0x411512f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411513d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41153758" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41153758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41153930"/>
        <function-ref name="stop" scoped="" ref="0x41153a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41151510" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41151510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411516e8"/>
        <function-ref name="userId" scoped="" ref="0x411517c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40cdcd98" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40cdcd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40357010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40cdb508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cdf1d8" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cdf1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cdf800"/>
        <function-ref name="readDone" scoped="" ref="0x40cdfa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40cde178" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40cde178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cde7c0"/>
        <function-ref name="readDone" scoped="" ref="0x40cdea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40cdc6b0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cdc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40cdc888"/>
        <function-ref name="getChannel" scoped="" ref="0x40cdc968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40cdca48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40cdede8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40cdede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40cdc010"/>
        <function-ref name="cancel" scoped="" ref="0x40cdc0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40cdc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40d009b0" loc="104:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40d009b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d00b88"/>
        <function-ref name="runTask" scoped="" ref="0x40d00c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ce09d8" loc="24:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ce09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d15048"/>
        <function-ref name="readDone" scoped="" ref="0x40d152b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40d15710" loc="26:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40d15710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d15d48"/>
        <function-ref name="readDone" scoped="" ref="0x40d14010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d14390" loc="27:/home/user/local/src/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d14390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d14578"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d14658"/>
        <function-ref name="request" scoped="" ref="0x40d14738"/>
        <function-ref name="granted" scoped="" ref="0x40d14818"/>
        <function-ref name="isOwner" scoped="" ref="0x40d148f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40d10c88" loc="40:/home/user/local/src/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d10c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40d10e60"/>
        <function-ref name="getChannel" scoped="" ref="0x40d0d010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40d0d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d0fe08" loc="49:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d0fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d0e010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0e1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40d0e2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d0e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d0e4d0" loc="50:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d0e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d0e6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d0e788"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0e868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0e948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d0ea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d0eb68" loc="51:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d0eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d0ed40"/>
        <function-ref name="source" scoped="" ref="0x40d0ee20"/>
        <function-ref name="address" scoped="" ref="0x40d0ef00"/>
        <function-ref name="destination" scoped="" ref="0x40d77010"/>
        <function-ref name="setSource" scoped="" ref="0x40d770f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d771d0"/>
        <function-ref name="type" scoped="" ref="0x40d772b0"/>
        <function-ref name="setType" scoped="" ref="0x40d77390"/>
        <function-ref name="isForMe" scoped="" ref="0x40d77470"/>
        <function-ref name="setGroup" scoped="" ref="0x40d77550"/>
        <function-ref name="localGroup" scoped="" ref="0x40d77630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d77790" loc="52:/home/user/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d77790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d77968"/>
        <function-ref name="noAck" scoped="" ref="0x40d77a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d77b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41149a68" loc="49:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41149a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41149c40"/>
        <function-ref name="getPayload" scoped="" ref="0x41149d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41149e00"/>
        <function-ref name="cancel" scoped="" ref="0x41149ee0"/>
        <function-ref name="sendDone" scoped="" ref="0x41146010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41146150" loc="50:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41146150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41146328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41146408"/>
        <function-ref name="getPayload" scoped="" ref="0x411464e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411465c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411466a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411467e8" loc="51:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411467e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411469c0"/>
        <function-ref name="source" scoped="" ref="0x41146aa0"/>
        <function-ref name="address" scoped="" ref="0x41146b80"/>
        <function-ref name="destination" scoped="" ref="0x41146c60"/>
        <function-ref name="setSource" scoped="" ref="0x41146d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41146e20"/>
        <function-ref name="type" scoped="" ref="0x41146f00"/>
        <function-ref name="setType" scoped="" ref="0x41145010"/>
        <function-ref name="isForMe" scoped="" ref="0x411450f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411451d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41145410" loc="52:/home/user/local/src/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41145410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411455e8"/>
        <function-ref name="noAck" scoped="" ref="0x411456c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411457a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4113f538" loc="44:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4113f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4113f710"/>
        <function-ref name="getPayload" scoped="" ref="0x4113f7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113f8d0"/>
        <function-ref name="cancel" scoped="" ref="0x4113f9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4113fa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4113fc00" loc="46:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4113fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4113fdd8"/>
        <function-ref name="getPayload" scoped="" ref="0x4113feb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113e010"/>
        <function-ref name="cancel" scoped="" ref="0x4113e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4113e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4113e310" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4113e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4113e4e8"/>
        <function-ref name="source" scoped="" ref="0x4113e5c8"/>
        <function-ref name="address" scoped="" ref="0x4113e6a8"/>
        <function-ref name="destination" scoped="" ref="0x4113e788"/>
        <function-ref name="setSource" scoped="" ref="0x4113e868"/>
        <function-ref name="setDestination" scoped="" ref="0x4113e948"/>
        <function-ref name="type" scoped="" ref="0x4113ea28"/>
        <function-ref name="setType" scoped="" ref="0x4113eb08"/>
        <function-ref name="isForMe" scoped="" ref="0x4113ebe8"/>
        <function-ref name="setGroup" scoped="" ref="0x4113ecc8"/>
        <function-ref name="localGroup" scoped="" ref="0x4113eda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d4df00" loc="43:/home/user/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d4df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4a0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4a1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4a2b0"/>
        <function-ref name="cancel" scoped="" ref="0x40d4a390"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40d51598" loc="48:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d51598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d51780"/>
        <function-ref name="getPayload" scoped="" ref="0x40d51860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d51940"/>
        <function-ref name="cancel" scoped="" ref="0x40d51a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40d51b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d47da0" loc="46:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d47da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d51010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d510f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d511d0"/>
        <function-ref name="cancel" scoped="" ref="0x40d512b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d51390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40d4f850" loc="50:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4fa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4fb08"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4fbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4fcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4fda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40d4ff28" loc="169:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40d4ff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d4e110"/>
        <function-ref name="runTask" scoped="" ref="0x40d4e1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40d4e370" loc="126:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40d4e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d4e548"/>
        <function-ref name="runTask" scoped="" ref="0x40d4e628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40d51c40" loc="49:/home/user/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d51c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d51e18"/>
        <function-ref name="source" scoped="" ref="0x40d51ef8"/>
        <function-ref name="address" scoped="" ref="0x40d4f010"/>
        <function-ref name="destination" scoped="" ref="0x40d4f0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40d4f1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4f2b0"/>
        <function-ref name="type" scoped="" ref="0x40d4f390"/>
        <function-ref name="setType" scoped="" ref="0x40d4f470"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4f550"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4f630"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d745d8" loc="46:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d745d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d747b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d74890"/>
        <function-ref name="getPayload" scoped="" ref="0x40d74970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d74a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d74b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d742c0" loc="45:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d742c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d74498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d74c70" loc="47:/home/user/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d74c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d74e48"/>
        <function-ref name="source" scoped="" ref="0x40d74f28"/>
        <function-ref name="address" scoped="" ref="0x40d70018"/>
        <function-ref name="destination" scoped="" ref="0x40d700f8"/>
        <function-ref name="setSource" scoped="" ref="0x40d701d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40d702b8"/>
        <function-ref name="type" scoped="" ref="0x40d70398"/>
        <function-ref name="setType" scoped="" ref="0x40d70478"/>
        <function-ref name="isForMe" scoped="" ref="0x40d70558"/>
        <function-ref name="setGroup" scoped="" ref="0x40d70638"/>
        <function-ref name="localGroup" scoped="" ref="0x40d70718"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403a8dd0" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x403f2490" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403eaec8" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x403f2148" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f2328" loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403f8190" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f0d60" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f8010" loc="135:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403f0800" loc="123:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403f1168" loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f1010" loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403f1e58" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f1b00" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403f1cf8" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403ab478" loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403ab320" loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403aa1e0" loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403aa088" loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403adc18" loc="104:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403ab988" loc="130:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/user/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40400270" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40400270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40400720" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40400ed0" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40400270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40400ba0" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40400d70" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40400270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x403a7d00" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
              <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403a77b8" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403a7998" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403a7b78" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40404010" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40404458" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404048d8" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40403158" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40403e48" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4040c318" loc="117:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40404d00" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4040ca58" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4040c900" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40406b78" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404035d8" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40403a00" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x403a6618" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x403a6618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x403fbf00" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x403fdbb8" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x403fcd20" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403fc9d8" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403fcbc0" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x403fc530" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x403fa888" loc="140:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x403fa358" loc="133:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x403fc070" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x403a6c70" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403a6b18" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x403fb8e0" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403fb598" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403fb780" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x403fd320" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403fd1c8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403fd7f0" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4041f158" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40422010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40423dd8" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404255c0" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40425bf8" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40425aa0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404232d8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40423180" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40423830" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4042cc98" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4042b090" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4042c508" loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4042b860" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4042c8c8" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4042b468" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40430da0" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4042c158" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40313658" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40315010" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40313a98" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40318f20" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40317450" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40384b98" loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40399b28" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4033fbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403920f8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40520880" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40520508" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40520720" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40522bd0" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40522a78" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4052a5c0" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052a468" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40528578" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40528218" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405283f8" loc="126:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4051dc08" loc="106:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4051d270" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052aee0" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4051d110" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40537de0" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40537a48" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40537c80" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40535978" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40535820" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40537570" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x4052cd88" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4052cc30" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4053a3b8" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053a260" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4053aeb0" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053ad58" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40539950" loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405397f8" loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40533970" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40533818" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4052bda0" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052ba08" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4052bc40" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40533020" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40542eb0" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40542990" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405425f8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40542830" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405412e0" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40541188" loc="71:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4052d648" loc="177:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052d4f0" loc="177:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40524010" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40526e70" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40527f00" loc="68:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405265c8" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40526470" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405318f8" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40531590" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40531798" loc="121:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40524bf8" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40524890" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40524a98" loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4052f010" loc="147:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40532ea0" loc="147:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4052fb48" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052f818" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4052f9e8" loc="162:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e4538"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405324c0" loc="136:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40532368" loc="136:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4052e370" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4052e010" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4052e210" loc="187:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4052ebe8" loc="195:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/user/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40538ab0" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x405385d0" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40538478" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4053e010" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4053ea40" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4053ea40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4053eba8" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053eba8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4053dd90" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053eba8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053dc38" loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4053b9c0" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053b868" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4053d240" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053d0e8" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4054a4b8" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053eba8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054a148" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4054a358" loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4053eba8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4054e630" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054e630"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4054b900" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054b7a8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4054b2e0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054e630"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054b188" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4054eca8" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054eb50" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40559170" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054e630"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054bd30" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40559010" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4054e630"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40555750" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40555750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40555c30" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405567d0" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40556678" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4056e210" loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4056f8c0" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4056f2c0" loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4056fd70" loc="102:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4056e908" loc="128:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x4056c870" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056c718" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40571c50" loc="37:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4056c2a0" loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056c148" loc="39:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4057a800" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057a460" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4057a6a0" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4057a060" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056cca0" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4056cee0" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40579350" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405791f8" loc="49:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40579ac0" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40579730" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40579960" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4057ad70" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057ac18" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40579f00" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405643f0" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40567e68" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405640a8" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40564288" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405727f0" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40572490" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40572670" loc="122:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40563ee0" loc="110:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40564d80" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40564c28" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405638e8" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40563590" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40563788" loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x4059e210" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x4058eb68" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058ea10" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x405a13f0" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a1298" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4059f168" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f010" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405a2660" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2508" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40599890" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40599738" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405a2df8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2a90" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405a2c98" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405a2090" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40599cf0" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40599ef8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x405a1b78" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a1818" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405a1a18" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4059ab30" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40596158" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405947b8" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40594660" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405968a0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40596748" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40594010" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40596e40" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405aede0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405ae580" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405ae428" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405ae9c8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40593e10" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405ac2e0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403d59d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x405bb410" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb2b8" loc="70:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405ab9f8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ab8a0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405bc750" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405bc290" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405abef0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405bc130" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405ab300" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ab1a8" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405bcdd0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bcc78" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4057ced0" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4057c9d0" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057c878" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40585610" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405854b8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40585b58" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405842a0" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584148" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40587d70" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40587c18" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x4058f6c0" loc="86:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x4058f208" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40591e68" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4058f0a8" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405921e0" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592088" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405928a8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592750" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40591208" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40592e68" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405910a8" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40583298" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40583b08" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405837e0" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405839a8" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40591920" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405917c8" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405a5880" loc="131:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a5728" loc="131:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405a6a48" loc="120:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a68f0" loc="120:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4059d970" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059d620" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4059d810" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4059cd48" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059cbf0" loc="75:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405b3cc0" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3960" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405b3b60" loc="156:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4059c6b0" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059c558" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405a5270" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a6f00" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405a5110" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405aad00" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405aa988" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405aaba0" loc="88:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405b34e8" loc="151:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3390" loc="151:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4059c010" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059de80" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405a9d28" loc="99:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a9bd0" loc="99:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405a9678" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a9300" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405a9518" loc="94:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x405b14b0" loc="178:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403d2010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405b2300" loc="162:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b21a8" loc="162:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405b1010" loc="173:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403d3d18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405a4ea0" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a4b40" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405a4d40" loc="146:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405aa448" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aa2f0" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405a6438" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a60e8" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405a62d8" loc="115:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405a4090" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a5d18" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405a5f08" loc="136:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405b1a88" loc="185:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b1930" loc="185:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405a8540" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a8218" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405a83e0" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4059d168" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059d010" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405b2a10" loc="168:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b28b8" loc="168:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405a46c0" loc="141:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a4568" loc="141:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405a8bf0" loc="110:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a8a98" loc="110:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x4058d8b8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058d558" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x4058d758" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x4058dd50" loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40588a20" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405888c8" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x4058d088" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40588f10" loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40598010" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058ce90" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4058c908" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058c7b0" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40598508" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40598bc0" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40598a68" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405ed3b8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405ed3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405ed520" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405eb810" loc="98:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405ec4d0" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405eb1c8" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405ece48" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          </variable>
          <variable name="dt" ref="0x405eb068" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405ec940" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405ebca0" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405edb50" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405ed9f8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ed520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405ec070" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x405f3460" loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x405f3a30" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40604090" loc="79:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x405f3038" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x4061fef8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061fda0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4061b010" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061ce38" loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4061c8a0" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061c548" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4061c740" loc="54:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4061a010" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
              <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061be40" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x406219a0" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40620258" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40621e10" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x406214b0" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40621148" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e4790"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40621350" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406859b8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40682010" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40684be8" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40684728" loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40695298" loc="90:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40695798" loc="98:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/user/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4068c530" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40683ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4068c3d8" loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40683ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4068d1c8" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4068d888" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40683ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4068d730" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40683ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4068de38" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40683ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40766500" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
              <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40766388" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40752cf0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40752b98" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407733b8" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40773260" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40773838" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407618e8" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40761790" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40761e30" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40761cd8" loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x4075f268" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075f110" loc="57:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x4075e010" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4075fdf8" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x4075f938" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075f7e0" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x4075e6c8" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4075e570" loc="80:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40762b90" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40762a38" loc="49:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e49f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407dc8e0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407dc8e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407dca48" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407dca48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x407d9010" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407dca48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407d9a38" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407d9538" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407d9e60" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4080b158" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407f2700" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x407f4328" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407f2cc0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407f2b68" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x407f2290" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407f2138" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4080b720" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4080b5c8" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x407f4778" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407f4cf0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407f4b98" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x40802dd0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40804ae8" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x40804f10" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x40802410" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x408012b0" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x408028f0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40804010" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40804608" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x408044b0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407f6780" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f6780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x408076a8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40809650" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407f6c78" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f6780"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40809a58" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40807b08" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40809210" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f6780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x408090b8" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407f6780"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40809e60" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40807280" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x407fb3e8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407fb3e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x407f9ba0" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407f9310" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407fb8d8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407fb3e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x407f7168" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x407f7010" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407f75f8" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407fa6c8" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407fa2a8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407f9778" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407fbe50" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407fb3e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407fbcf8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407fb3e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407faad0" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407faec8" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408e5320" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408e5d58" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408e4410" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408e42b8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408e4880" loc="69:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408e5860" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408e4dc0" loc="74:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408e7eb8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e7d60" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408e1b90" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408e1678" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408e1520" loc="56:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40937a18" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40937570" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4093a098" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4093a098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4093a6e8" loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4093a098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4093a590" loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4093a098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x409633b8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40963260" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40964088" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40949f18" loc="40:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40964858" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40964518" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x409646f8" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40964e18" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40964cc0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40986010" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40969e78" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40969998" loc="44:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/user/local/src/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a056d8" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a056d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a05840" loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a05840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a05e58" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a05840"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a05d00" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a05840"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a08e10" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a027e8" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a023a0" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a02248" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a08908" loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a07230" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a070d8" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a07e18" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a07cc0" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a07740" loc="68:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a06480" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a06328" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40a94ae0" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a94ae0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40a8f650" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40a8f4f8" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40a90c30" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a91010" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a94ae0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a91b60" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a94ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a91a08" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a94ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40a90010" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40a8f0c8" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a91588" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a94ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a91430" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a94ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40a90418" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a90810" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40aa4650" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aa40e0" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aa42f8" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aa44e8" loc="70:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40aa2ca0" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aa2520" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aa2738" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aa2928" loc="82:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40aa2b30" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40aa8bb8" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40aa8a60" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40abb6c8" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40ab6ee8" loc="109:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40ab7010" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40ab54e8" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40ab5390" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40abb278" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40ab6010" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40ab7e10" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40ab91e0" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40ab9088" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40aba010" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ab25c8" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ab2470" loc="125:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40ab9638" loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40ab5e70" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40ab5d18" loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ab3748" loc="120:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ab6aa0" loc="108:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40ab6948" loc="108:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40ab2038" loc="124:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40ab75a0" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40ab7448" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40aba5a8" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aba450" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40ab9b88" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40ab9a30" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40ab64c0" loc="106:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40ab5910" loc="112:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40ab32d0" loc="115:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ab3ba0" loc="122:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40ab79d8" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40abbaf0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40abab70" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40abaa18" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40aee2f0" loc="95:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40aee7d8" loc="105:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b2b460" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b2a9f8" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b2ebd0" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b28480" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b28010" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b2ae60" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b2a010" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b2bdf8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b28a48" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b288f0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b2b038" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b2a588" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b2a430" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b2b9d8" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b2b880" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40c31838" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40c31340" loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40c31d28" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40c2d4c8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c2d4c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40c2d998" loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40c2a190" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c2d4c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c2de38" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40c2a030" loc="66:/home/user/local/src/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c2d4c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40c4a3a0" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c50b40" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40c50d68" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40c4a010" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40c4a230" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c49708" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4acc0" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40c4aeb0" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40c490d0" loc="110:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40c49328" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40c49590" loc="111:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40c4d640" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c51e38" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40c4d088" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40c4d2b0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40c4d4d0" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c4c6f8" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c4c170" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4dda0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40c4c010" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40c3e418" loc="105:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40c45af8" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4034e7b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4034ea38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40c698b8" loc="131:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40c69760" loc="131:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40c3e8d8" loc="113:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40c415b8" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40c42168" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4034e7b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4034ea38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40c42010" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4034e7b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4034ea38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40c41e08" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40c69210" loc="124:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c69d60" loc="141:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40c419b8" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40c40700" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40c402d0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40c40b38" loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40c3ed48" loc="118:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40c42c80" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403549f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40354d98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40c42b28" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403549f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40354d98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40c3e018" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40c42650" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403549f0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40354d98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40c41158" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c68648" loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c684f0" loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40ca8938" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40ca63b0" loc="73:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40ca8408" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40ca8e48" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40ca6988" loc="81:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40ced4d8" loc="52:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/home/user/local/src/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d2a228" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d2dec0" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d2a0c8" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40d26dd0" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d26a70" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d26c50" loc="125:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40d26510" loc="112:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40d2ae68" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d2ad10" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d28ba0" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d28848" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403ebc88"/>
                <typename><typedef-ref name="message_t" ref="0x403eaa30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40d28a40" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
