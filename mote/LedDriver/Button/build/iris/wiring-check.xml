<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:ButtonAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403a7188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403c7858"/></to>
    </wire>
    <wire loc="72:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403c7858"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403d0a30"/></to>
    </wire>
    <wire loc="10:ButtonAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403b2528"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403cfe80"/></to>
    </wire>
    <wire loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403cfe80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404cc520"/></to>
    </wire>
    <wire loc="11:ButtonAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x403b6c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404e0660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x404e0660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x404e9858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:ButtonAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x403b4010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405e53d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x405e53d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x404e9858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:ButtonAppC.nc">
      <from><interface-ref name="CSEL1" scoped="" ref="0x403c1438"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403eb750"/></to>
    </wire>
    <wire loc="155:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403eb750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40441b00"/></to>
    </wire>
    <wire loc="14:ButtonAppC.nc">
      <from><interface-ref name="CSEL0" scoped="" ref="0x403c1e28"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x403ea210"/></to>
    </wire>
    <wire loc="156:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403ea210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404404f0"/></to>
    </wire>
    <wire loc="15:ButtonAppC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x403bb850"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x403eac08"/></to>
    </wire>
    <wire loc="157:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403eac08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40440e48"/></to>
    </wire>
    <wire loc="16:ButtonAppC.nc">
      <from><interface-ref name="SIN" scoped="" ref="0x403ba2d0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x403f3670"/></to>
    </wire>
    <wire loc="158:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403f3670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043f7d0"/></to>
    </wire>
    <wire loc="17:ButtonAppC.nc">
      <from><interface-ref name="nLATCH" scoped="" ref="0x403bacc8"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x403f20a0"/></to>
    </wire>
    <wire loc="159:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403f20a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4043e170"/></to>
    </wire>
    <wire loc="18:ButtonAppC.nc">
      <from><interface-ref name="Blank" scoped="" ref="0x403c0748"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x403f2a98"/></to>
    </wire>
    <wire loc="160:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403f2a98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4043eac8"/></to>
    </wire>
    <wire loc="19:ButtonAppC.nc">
      <from><interface-ref name="CSEL2" scoped="" ref="0x403bf208"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x403f14b0"/></to>
    </wire>
    <wire loc="161:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403f14b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404484f0"/></to>
    </wire>
    <wire loc="20:ButtonAppC.nc">
      <from><interface-ref name="nDSEL" scoped="" ref="0x403bfbf8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x403f1ea8"/></to>
    </wire>
    <wire loc="162:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403f1ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40448e48"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ce4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404ef188"/></to>
    </wire>
    <wire loc="67:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403d0dc8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></to>
    </wire>
    <wire loc="68:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c9400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403cc868"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403cc868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403d5c68"/></to>
    </wire>
    <wire loc="71:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403ce4a0"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403d1268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404af010"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403d9490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b1bf8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403d9088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404e27c0"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403d9088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403d44a0"/></to>
    </wire>
    <wire loc="23:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403d44a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403dd420"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403d4870"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403d19c8"/></to>
    </wire>
    <wire loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403dd848"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403e0c08"/></to>
    </wire>
    <wire loc="141:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403e0c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042bf28"/></to>
    </wire>
    <wire loc="26:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403dc2e8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403d4870"/></to>
    </wire>
    <wire loc="191:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403feea8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40480ec0"/></to>
    </wire>
    <wire loc="165:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403ef4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40444d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40444d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b5de0"/></to>
    </wire>
    <wire loc="176:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403fda98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40452ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40452ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fdc08"/></to>
    </wire>
    <wire loc="185:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40402c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40455410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40455410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407337f8"/></to>
    </wire>
    <wire loc="196:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404044b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404956c0"/></to>
    </wire>
    <wire loc="143:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403e70a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40435250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40435250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40619ac8"/></to>
    </wire>
    <wire loc="183:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403f9750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40457090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40457090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407203b0"/></to>
    </wire>
    <wire loc="146:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403e64b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40431228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40431228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4064a938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40440e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406869e8"/></to>
    </wire>
    <wire loc="168:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403f72f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4044e988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4044e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c6c08"/></to>
    </wire>
    <wire loc="179:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403fb8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404507d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404507d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f8a88"/></to>
    </wire>
    <wire loc="138:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403e2ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042c250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4060f8a0"/></to>
    </wire>
    <wire loc="149:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403ee2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043be48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406457f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4043eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406819e8"/></to>
    </wire>
    <wire loc="171:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403f5210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4044c6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4044c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c0a88"/></to>
    </wire>
    <wire loc="188:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403ffa98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4045f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4045f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4072d6c0"/></to>
    </wire>
    <wire loc="194:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40405010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4048f6c0"/></to>
    </wire>
    <wire loc="174:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403f4670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40453790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40453790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ea7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4061c718"/></to>
    </wire>
    <wire loc="152:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403ec2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40439ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40439ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406546c0"/></to>
    </wire>
    <wire loc="192:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40407b28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404896c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40441b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40675538"/></to>
    </wire>
    <wire loc="166:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403efea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404436b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404436b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b37f8"/></to>
    </wire>
    <wire loc="177:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403fc4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404514f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404514f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fb6c0"/></to>
    </wire>
    <wire loc="186:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40401670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40455d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40455d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40730228"/></to>
    </wire>
    <wire loc="144:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403e7a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40435ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40435ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40617570"/></to>
    </wire>
    <wire loc="147:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403e6ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40431b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40431b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406483b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043f7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40684538"/></to>
    </wire>
    <wire loc="169:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403f7ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4044d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4044d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c36c0"/></to>
    </wire>
    <wire loc="180:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403fa2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4044f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4044f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f6538"/></to>
    </wire>
    <wire loc="139:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403e1750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042cba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042cba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4060d2d0"/></to>
    </wire>
    <wire loc="150:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403eece8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4043a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4043a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40643228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404484f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4067f538"/></to>
    </wire>
    <wire loc="189:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403fe4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4045fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4045fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4072b0b0"/></to>
    </wire>
    <wire loc="164:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403f08e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404443d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404443d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b6418"/></to>
    </wire>
    <wire loc="175:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403fd0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40452170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40452170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e8228"/></to>
    </wire>
    <wire loc="184:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40402210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404579e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404579e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4071fd70"/></to>
    </wire>
    <wire loc="195:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40405a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4048ce98"/></to>
    </wire>
    <wire loc="142:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403e9670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40436890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40436890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4061a0f8"/></to>
    </wire>
    <wire loc="153:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403ecce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404384f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404384f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406510b0"/></to>
    </wire>
    <wire loc="182:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403face8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404586f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404586f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40722938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404404f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40687010"/></to>
    </wire>
    <wire loc="167:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403f88e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4044e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4044e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b1228"/></to>
    </wire>
    <wire loc="178:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403fcea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40451e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40451e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f90b0"/></to>
    </wire>
    <wire loc="187:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403ff0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40460790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40460790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4072fc08"/></to>
    </wire>
    <wire loc="137:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403e22f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042d8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042d8e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40600ed8"/></to>
    </wire>
    <wire loc="148:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403e58e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40647d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4043e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40682010"/></to>
    </wire>
    <wire loc="170:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403f6750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4044dc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4044dc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c10b0"/></to>
    </wire>
    <wire loc="193:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40406590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40486e98"/></to>
    </wire>
    <wire loc="173:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403f5c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40454dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40454dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406efde8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40448e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40691010"/></to>
    </wire>
    <wire loc="140:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403e0210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042b5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4060cc90"/></to>
    </wire>
    <wire loc="151:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403ed830"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40439170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40439170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40656c08"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></to>
    </wire>
    <wire loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405602c8"/></to>
    </wire>
    <wire loc="53:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404e27c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404cc1d8"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404cb240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404e4978"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404e4978"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403e1750"/></to>
    </wire>
    <wire loc="55:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404cbc28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404e33e0"/></to>
    </wire>
    <wire loc="57:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404e33e0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403e2ce8"/></to>
    </wire>
    <wire loc="56:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404ca660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404e3de8"/></to>
    </wire>
    <wire loc="58:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404e3de8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403e22f0"/></to>
    </wire>
    <wire loc="54:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x404e9858"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x404ef938"/></to>
    </wire>
    <wire loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x404ef938"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405afa60"/></to>
    </wire>
    <wire loc="59:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404ef188"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404f5290"/></to>
    </wire>
    <wire loc="65:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x404f8af0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405de460"/></to>
    </wire>
    <wire loc="35:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404f5290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4058f870"/></to>
    </wire>
    <wire loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x405d1e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404f6c60"/></to>
    </wire>
    <wire loc="63:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405b4010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x404fe9d8"/></to>
    </wire>
    <wire loc="36:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x404fe9d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4058fca8"/></to>
    </wire>
    <wire loc="66:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405dedf8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x405064c8"/></to>
    </wire>
    <wire loc="37:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x405064c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4058d718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4058d718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407ad130"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4058f870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407b0238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4058fca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407b0670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x407ac300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40552980"/></to>
    </wire>
    <wire loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40552980"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405598e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407a94e0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4054dc80"/></to>
    </wire>
    <wire loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4054dc80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40554bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x407a9ec8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4054c878"/></to>
    </wire>
    <wire loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4054c878"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40563798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407a79a8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4055a3c0"/></to>
    </wire>
    <wire loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4055a3c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40560728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x405b29a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x405df050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="ButtonC" loc="11:ButtonC.nc">
      <documentation loc="2:ButtonC.nc">
        <short>&#10; &#10; Button demo application.</short>
        <long>&#10; &#10; Button demo application.&#10;&#10; @author Philipp Sommer&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="33(HplAtm128GeneralIOC.G5):/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ButtonAppC.Timer0" loc="44(ButtonAppC.Timer0):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40503058"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ButtonAppC.Timer1" loc="44(ButtonAppC.Timer1):/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4040a330" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4040a548" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4040a760" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4040e680" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4040e8a8" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4040ead0" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4040ecc0" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4045ce98" loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404650e0" loc="34:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40465308" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404654f8" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40503058" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40503058"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40503218" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4050a328" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4050a328"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4050a4e8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404f96e8" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404f96e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405b1d10" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405b1d10"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x405b1ef0" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405dc3f8" loc="35:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405dc3f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer0" ref="0x403b6c08" loc="17:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x403b6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403b1730"/>
        <function-ref name="fired" scoped="" ref="0x403a89b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403b10f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x403a8e60"/>
        <function-ref name="getdt" scoped="" ref="0x403b1be0"/>
        <function-ref name="gett0" scoped="" ref="0x403b1988"/>
        <function-ref name="isRunning" scoped="" ref="0x403a8c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403a8258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403b1410"/>
        <function-ref name="startOneShot" scoped="" ref="0x403a84d8"/>
        <function-ref name="stop" scoped="" ref="0x403a8758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403a7188" loc="14:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a7360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Blank" ref="0x403c0748" loc="24:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Blank" scoped="" ref="0x403c0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0920"/>
        <function-ref name="isInput" scoped="" ref="0x403c0a00"/>
        <function-ref name="toggle" scoped="" ref="0x403c0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0bc0"/>
        <function-ref name="get" scoped="" ref="0x403c0ca0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0d80"/>
        <function-ref name="set" scoped="" ref="0x403c0e60"/>
        <function-ref name="clr" scoped="" ref="0x403bf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIN" ref="0x403ba2d0" loc="22:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SIN" scoped="" ref="0x403ba2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba4a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ba588"/>
        <function-ref name="toggle" scoped="" ref="0x403ba668"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba748"/>
        <function-ref name="get" scoped="" ref="0x403ba828"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba908"/>
        <function-ref name="set" scoped="" ref="0x403ba9e8"/>
        <function-ref name="clr" scoped="" ref="0x403baac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x403b4010" loc="18:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x403b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403b3b00"/>
        <function-ref name="fired" scoped="" ref="0x403b4d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403b34c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x403b3268"/>
        <function-ref name="getdt" scoped="" ref="0x403bc010"/>
        <function-ref name="gett0" scoped="" ref="0x403b3d58"/>
        <function-ref name="isRunning" scoped="" ref="0x403b3010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403b4638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403b37e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x403b48b8"/>
        <function-ref name="stop" scoped="" ref="0x403b4b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSEL1" ref="0x403c1438" loc="19:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSEL1" scoped="" ref="0x403c1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c1610"/>
        <function-ref name="isInput" scoped="" ref="0x403c16f0"/>
        <function-ref name="toggle" scoped="" ref="0x403c17d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c18b0"/>
        <function-ref name="get" scoped="" ref="0x403c1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1a70"/>
        <function-ref name="set" scoped="" ref="0x403c1b50"/>
        <function-ref name="clr" scoped="" ref="0x403c1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x403bb850" loc="21:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x403bb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bba28"/>
        <function-ref name="isInput" scoped="" ref="0x403bbb08"/>
        <function-ref name="toggle" scoped="" ref="0x403bbbe8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bbcc8"/>
        <function-ref name="get" scoped="" ref="0x403bbda8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bbe88"/>
        <function-ref name="set" scoped="" ref="0x403ba010"/>
        <function-ref name="clr" scoped="" ref="0x403ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSEL2" ref="0x403bf208" loc="25:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSEL2" scoped="" ref="0x403bf208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x403bf4c0"/>
        <function-ref name="toggle" scoped="" ref="0x403bf5a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bf680"/>
        <function-ref name="get" scoped="" ref="0x403bf760"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bf840"/>
        <function-ref name="set" scoped="" ref="0x403bf920"/>
        <function-ref name="clr" scoped="" ref="0x403bfa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403b2528" loc="15:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403b2528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403b2700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403b27e0"/>
        <function-ref name="led1On" scoped="" ref="0x403b28c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403b29a0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403b2a80"/>
        <function-ref name="get" scoped="" ref="0x403b2b60"/>
        <function-ref name="led1Off" scoped="" ref="0x403b2c40"/>
        <function-ref name="led2Off" scoped="" ref="0x403a9010"/>
        <function-ref name="set" scoped="" ref="0x403b2d20"/>
        <function-ref name="led0On" scoped="" ref="0x403b2e00"/>
        <function-ref name="led2On" scoped="" ref="0x403b2ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="nDSEL" ref="0x403bfbf8" loc="26:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="nDSEL" scoped="" ref="0x403bfbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bfdd0"/>
        <function-ref name="isInput" scoped="" ref="0x403bfeb0"/>
        <function-ref name="toggle" scoped="" ref="0x403be010"/>
        <function-ref name="isOutput" scoped="" ref="0x403be0f0"/>
        <function-ref name="get" scoped="" ref="0x403be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be2b0"/>
        <function-ref name="set" scoped="" ref="0x403be390"/>
        <function-ref name="clr" scoped="" ref="0x403be470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="nLATCH" ref="0x403bacc8" loc="23:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="nLATCH" scoped="" ref="0x403bacc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403baea0"/>
        <function-ref name="isInput" scoped="" ref="0x403c0010"/>
        <function-ref name="toggle" scoped="" ref="0x403c00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c01d0"/>
        <function-ref name="get" scoped="" ref="0x403c02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0390"/>
        <function-ref name="set" scoped="" ref="0x403c0470"/>
        <function-ref name="clr" scoped="" ref="0x403c0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSEL0" ref="0x403c1e28" loc="20:ButtonC.nc">
      <component-ref qname="ButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSEL0" scoped="" ref="0x403c1e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb050"/>
        <function-ref name="isInput" scoped="" ref="0x403bb130"/>
        <function-ref name="toggle" scoped="" ref="0x403bb210"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb2f0"/>
        <function-ref name="get" scoped="" ref="0x403bb3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb4b0"/>
        <function-ref name="set" scoped="" ref="0x403bb590"/>
        <function-ref name="clr" scoped="" ref="0x403bb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x403ce4a0" loc="58:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403ce4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ce678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403c7858" loc="57:/home/user/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403c7858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403c7a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403d19c8" loc="52:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403d19c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403cc868" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403cc868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403cca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403d1268" loc="50:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403d1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403d1440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403d1520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403d1600"/>
        <function-ref name="actualMicro" scoped="" ref="0x403d16e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403d9088" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403d9088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d9260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403d5c68" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403d5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403d9490" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403d9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d9668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403d4870" loc="18:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403d4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403d44a0" loc="17:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403d44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d4678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403dc2e8" loc="22:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403dc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403dc4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403dd848" loc="21:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403dd848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dda20"/>
        <function-ref name="isInput" scoped="" ref="0x403ddb00"/>
        <function-ref name="toggle" scoped="" ref="0x403ddbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ddcc0"/>
        <function-ref name="get" scoped="" ref="0x403ddda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dde80"/>
        <function-ref name="set" scoped="" ref="0x403dc010"/>
        <function-ref name="clr" scoped="" ref="0x403dc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403dd420" loc="20:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403dd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403dd5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403feea8" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403feea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407308"/>
        <function-ref name="isInput" scoped="" ref="0x404073e8"/>
        <function-ref name="toggle" scoped="" ref="0x404074c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404075a8"/>
        <function-ref name="get" scoped="" ref="0x40407688"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407768"/>
        <function-ref name="set" scoped="" ref="0x40407848"/>
        <function-ref name="clr" scoped="" ref="0x40407928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403ef4b0" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403ef4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef688"/>
        <function-ref name="isInput" scoped="" ref="0x403ef768"/>
        <function-ref name="toggle" scoped="" ref="0x403ef848"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef928"/>
        <function-ref name="get" scoped="" ref="0x403efa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403efae8"/>
        <function-ref name="set" scoped="" ref="0x403efbc8"/>
        <function-ref name="clr" scoped="" ref="0x403efca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403fda98" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403fda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fdc70"/>
        <function-ref name="isInput" scoped="" ref="0x403fdd50"/>
        <function-ref name="toggle" scoped="" ref="0x403fde30"/>
        <function-ref name="isOutput" scoped="" ref="0x403fdf10"/>
        <function-ref name="get" scoped="" ref="0x403fc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fc0f0"/>
        <function-ref name="set" scoped="" ref="0x403fc1d0"/>
        <function-ref name="clr" scoped="" ref="0x403fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40402c08" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40402c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40402de0"/>
        <function-ref name="isInput" scoped="" ref="0x40402ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40401010"/>
        <function-ref name="isOutput" scoped="" ref="0x404010f0"/>
        <function-ref name="get" scoped="" ref="0x404011d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404012b0"/>
        <function-ref name="set" scoped="" ref="0x40401390"/>
        <function-ref name="clr" scoped="" ref="0x40401470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404044b0" loc="103:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404044b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404688"/>
        <function-ref name="isInput" scoped="" ref="0x40404768"/>
        <function-ref name="toggle" scoped="" ref="0x40404848"/>
        <function-ref name="isOutput" scoped="" ref="0x40404928"/>
        <function-ref name="get" scoped="" ref="0x40404a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404ae8"/>
        <function-ref name="set" scoped="" ref="0x40404bc8"/>
        <function-ref name="clr" scoped="" ref="0x40404ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403e70a0" loc="50:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403e70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7278"/>
        <function-ref name="isInput" scoped="" ref="0x403e7358"/>
        <function-ref name="toggle" scoped="" ref="0x403e7438"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7518"/>
        <function-ref name="get" scoped="" ref="0x403e75f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e76d8"/>
        <function-ref name="set" scoped="" ref="0x403e77b8"/>
        <function-ref name="clr" scoped="" ref="0x403e7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403f9750" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403f9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f9928"/>
        <function-ref name="isInput" scoped="" ref="0x403f9a08"/>
        <function-ref name="toggle" scoped="" ref="0x403f9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f9bc8"/>
        <function-ref name="get" scoped="" ref="0x403f9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f9d88"/>
        <function-ref name="set" scoped="" ref="0x403f9e68"/>
        <function-ref name="clr" scoped="" ref="0x40402010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403e64b0" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403e64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6688"/>
        <function-ref name="isInput" scoped="" ref="0x403e6768"/>
        <function-ref name="toggle" scoped="" ref="0x403e6848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6928"/>
        <function-ref name="get" scoped="" ref="0x403e6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6ae8"/>
        <function-ref name="set" scoped="" ref="0x403e6bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403eac08" loc="64:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403eac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eade0"/>
        <function-ref name="isInput" scoped="" ref="0x403eaec0"/>
        <function-ref name="toggle" scoped="" ref="0x403f3010"/>
        <function-ref name="isOutput" scoped="" ref="0x403f30f0"/>
        <function-ref name="get" scoped="" ref="0x403f31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f32b0"/>
        <function-ref name="set" scoped="" ref="0x403f3390"/>
        <function-ref name="clr" scoped="" ref="0x403f3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403f72f0" loc="75:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f74c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f75a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f7688"/>
        <function-ref name="isOutput" scoped="" ref="0x403f7768"/>
        <function-ref name="get" scoped="" ref="0x403f7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7928"/>
        <function-ref name="set" scoped="" ref="0x403f7a08"/>
        <function-ref name="clr" scoped="" ref="0x403f7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403fb8e0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403fb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fbab8"/>
        <function-ref name="isInput" scoped="" ref="0x403fbb98"/>
        <function-ref name="toggle" scoped="" ref="0x403fbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403fbd58"/>
        <function-ref name="get" scoped="" ref="0x403fbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fbf18"/>
        <function-ref name="set" scoped="" ref="0x403fa010"/>
        <function-ref name="clr" scoped="" ref="0x403fa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403e2ce8" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403e2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e1010"/>
        <function-ref name="toggle" scoped="" ref="0x403e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e11d0"/>
        <function-ref name="get" scoped="" ref="0x403e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1390"/>
        <function-ref name="set" scoped="" ref="0x403e1470"/>
        <function-ref name="clr" scoped="" ref="0x403e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403ee2f0" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ee5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ee688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee768"/>
        <function-ref name="get" scoped="" ref="0x403ee848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee928"/>
        <function-ref name="set" scoped="" ref="0x403eea08"/>
        <function-ref name="clr" scoped="" ref="0x403eeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403f2a98" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403f2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2c70"/>
        <function-ref name="isInput" scoped="" ref="0x403f2d50"/>
        <function-ref name="toggle" scoped="" ref="0x403f2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2f10"/>
        <function-ref name="get" scoped="" ref="0x403f1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f10f0"/>
        <function-ref name="set" scoped="" ref="0x403f11d0"/>
        <function-ref name="clr" scoped="" ref="0x403f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403f5210" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403f5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f53e8"/>
        <function-ref name="isInput" scoped="" ref="0x403f54c8"/>
        <function-ref name="toggle" scoped="" ref="0x403f55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f5688"/>
        <function-ref name="get" scoped="" ref="0x403f5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f5848"/>
        <function-ref name="set" scoped="" ref="0x403f5928"/>
        <function-ref name="clr" scoped="" ref="0x403f5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403ffa98" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403ffa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffc70"/>
        <function-ref name="isInput" scoped="" ref="0x403ffd50"/>
        <function-ref name="toggle" scoped="" ref="0x403ffe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403fff10"/>
        <function-ref name="get" scoped="" ref="0x403fe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe0f0"/>
        <function-ref name="set" scoped="" ref="0x403fe1d0"/>
        <function-ref name="clr" scoped="" ref="0x403fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40405010" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40405010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404051e8"/>
        <function-ref name="isInput" scoped="" ref="0x404052c8"/>
        <function-ref name="toggle" scoped="" ref="0x404053a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40405488"/>
        <function-ref name="get" scoped="" ref="0x40405568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405648"/>
        <function-ref name="set" scoped="" ref="0x40405728"/>
        <function-ref name="clr" scoped="" ref="0x40405808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403f4670" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4848"/>
        <function-ref name="isInput" scoped="" ref="0x403f4928"/>
        <function-ref name="toggle" scoped="" ref="0x403f4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403f4ae8"/>
        <function-ref name="get" scoped="" ref="0x403f4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f4ca8"/>
        <function-ref name="set" scoped="" ref="0x403f4d88"/>
        <function-ref name="clr" scoped="" ref="0x403f4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403e0c08" loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403e0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0de0"/>
        <function-ref name="isInput" scoped="" ref="0x403e0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403e9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e90f0"/>
        <function-ref name="get" scoped="" ref="0x403e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e92b0"/>
        <function-ref name="set" scoped="" ref="0x403e9390"/>
        <function-ref name="clr" scoped="" ref="0x403e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403ec2f0" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ec4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ec5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ec688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ec768"/>
        <function-ref name="get" scoped="" ref="0x403ec848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ec928"/>
        <function-ref name="set" scoped="" ref="0x403eca08"/>
        <function-ref name="clr" scoped="" ref="0x403ecae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40407b28" loc="99:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40407b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407d00"/>
        <function-ref name="isInput" scoped="" ref="0x40407de0"/>
        <function-ref name="toggle" scoped="" ref="0x40407ec0"/>
        <function-ref name="isOutput" scoped="" ref="0x40406010"/>
        <function-ref name="get" scoped="" ref="0x404060f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404061d0"/>
        <function-ref name="set" scoped="" ref="0x404062b0"/>
        <function-ref name="clr" scoped="" ref="0x40406390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403eb750" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403eb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb928"/>
        <function-ref name="isInput" scoped="" ref="0x403eba08"/>
        <function-ref name="toggle" scoped="" ref="0x403ebae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ebbc8"/>
        <function-ref name="get" scoped="" ref="0x403ebca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ebd88"/>
        <function-ref name="set" scoped="" ref="0x403ebe68"/>
        <function-ref name="clr" scoped="" ref="0x403ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403efea8" loc="73:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403efea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f80c0"/>
        <function-ref name="isInput" scoped="" ref="0x403f81a0"/>
        <function-ref name="toggle" scoped="" ref="0x403f8280"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8360"/>
        <function-ref name="get" scoped="" ref="0x403f8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8520"/>
        <function-ref name="set" scoped="" ref="0x403f8600"/>
        <function-ref name="clr" scoped="" ref="0x403f86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403fc4b0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403fc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fc688"/>
        <function-ref name="isInput" scoped="" ref="0x403fc768"/>
        <function-ref name="toggle" scoped="" ref="0x403fc848"/>
        <function-ref name="isOutput" scoped="" ref="0x403fc928"/>
        <function-ref name="get" scoped="" ref="0x403fca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fcae8"/>
        <function-ref name="set" scoped="" ref="0x403fcbc8"/>
        <function-ref name="clr" scoped="" ref="0x403fcca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40401670" loc="93:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40401670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40401848"/>
        <function-ref name="isInput" scoped="" ref="0x40401928"/>
        <function-ref name="toggle" scoped="" ref="0x40401a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40401ae8"/>
        <function-ref name="get" scoped="" ref="0x40401bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401ca8"/>
        <function-ref name="set" scoped="" ref="0x40401d88"/>
        <function-ref name="clr" scoped="" ref="0x40401e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403e7a98" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403e7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7c70"/>
        <function-ref name="isInput" scoped="" ref="0x403e7d50"/>
        <function-ref name="toggle" scoped="" ref="0x403e7e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7f10"/>
        <function-ref name="get" scoped="" ref="0x403e6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e60f0"/>
        <function-ref name="set" scoped="" ref="0x403e61d0"/>
        <function-ref name="clr" scoped="" ref="0x403e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403e6ea8" loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403e6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e50c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e51a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e5280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5360"/>
        <function-ref name="get" scoped="" ref="0x403e5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5520"/>
        <function-ref name="set" scoped="" ref="0x403e5600"/>
        <function-ref name="clr" scoped="" ref="0x403e56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403f3670" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3848"/>
        <function-ref name="isInput" scoped="" ref="0x403f3928"/>
        <function-ref name="toggle" scoped="" ref="0x403f3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3ae8"/>
        <function-ref name="get" scoped="" ref="0x403f3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f3ca8"/>
        <function-ref name="set" scoped="" ref="0x403f3d88"/>
        <function-ref name="clr" scoped="" ref="0x403f3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403f7ce8" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403f7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403f6010"/>
        <function-ref name="toggle" scoped="" ref="0x403f60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f61d0"/>
        <function-ref name="get" scoped="" ref="0x403f62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6390"/>
        <function-ref name="set" scoped="" ref="0x403f6470"/>
        <function-ref name="clr" scoped="" ref="0x403f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403fa2f0" loc="87:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fa4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403fa5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403fa688"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa768"/>
        <function-ref name="get" scoped="" ref="0x403fa848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fa928"/>
        <function-ref name="set" scoped="" ref="0x403faa08"/>
        <function-ref name="clr" scoped="" ref="0x403faae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403e1750" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403e1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1928"/>
        <function-ref name="isInput" scoped="" ref="0x403e1a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1bc8"/>
        <function-ref name="get" scoped="" ref="0x403e1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1d88"/>
        <function-ref name="set" scoped="" ref="0x403e1e68"/>
        <function-ref name="clr" scoped="" ref="0x403e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403eece8" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403eece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed010"/>
        <function-ref name="isInput" scoped="" ref="0x403ed0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ed1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed2b0"/>
        <function-ref name="get" scoped="" ref="0x403ed390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed470"/>
        <function-ref name="set" scoped="" ref="0x403ed550"/>
        <function-ref name="clr" scoped="" ref="0x403ed630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403f14b0" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403f14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1688"/>
        <function-ref name="isInput" scoped="" ref="0x403f1768"/>
        <function-ref name="toggle" scoped="" ref="0x403f1848"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1928"/>
        <function-ref name="get" scoped="" ref="0x403f1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1ae8"/>
        <function-ref name="set" scoped="" ref="0x403f1bc8"/>
        <function-ref name="clr" scoped="" ref="0x403f1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403fe4b0" loc="96:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403fe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe688"/>
        <function-ref name="isInput" scoped="" ref="0x403fe768"/>
        <function-ref name="toggle" scoped="" ref="0x403fe848"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe928"/>
        <function-ref name="get" scoped="" ref="0x403fea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403feae8"/>
        <function-ref name="set" scoped="" ref="0x403febc8"/>
        <function-ref name="clr" scoped="" ref="0x403feca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403f08e0" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403f08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0bb8"/>
        <function-ref name="isInput" scoped="" ref="0x403f0c98"/>
        <function-ref name="toggle" scoped="" ref="0x403f0d78"/>
        <function-ref name="isOutput" scoped="" ref="0x403f0e58"/>
        <function-ref name="get" scoped="" ref="0x403ef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef0f0"/>
        <function-ref name="set" scoped="" ref="0x403ef1d0"/>
        <function-ref name="clr" scoped="" ref="0x403ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403fd0a0" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403fd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fd278"/>
        <function-ref name="isInput" scoped="" ref="0x403fd358"/>
        <function-ref name="toggle" scoped="" ref="0x403fd438"/>
        <function-ref name="isOutput" scoped="" ref="0x403fd518"/>
        <function-ref name="get" scoped="" ref="0x403fd5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fd6d8"/>
        <function-ref name="set" scoped="" ref="0x403fd7b8"/>
        <function-ref name="clr" scoped="" ref="0x403fd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40402210" loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40402210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404023e8"/>
        <function-ref name="isInput" scoped="" ref="0x404024c8"/>
        <function-ref name="toggle" scoped="" ref="0x404025a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40402688"/>
        <function-ref name="get" scoped="" ref="0x40402768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40402848"/>
        <function-ref name="set" scoped="" ref="0x40402928"/>
        <function-ref name="clr" scoped="" ref="0x40402a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40405a08" loc="102:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40405a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405be0"/>
        <function-ref name="isInput" scoped="" ref="0x40405cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40405da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40405e80"/>
        <function-ref name="get" scoped="" ref="0x40404010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404040f0"/>
        <function-ref name="set" scoped="" ref="0x404041d0"/>
        <function-ref name="clr" scoped="" ref="0x404042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403e9670" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9848"/>
        <function-ref name="isInput" scoped="" ref="0x403e9928"/>
        <function-ref name="toggle" scoped="" ref="0x403e9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9ae8"/>
        <function-ref name="get" scoped="" ref="0x403e9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9ca8"/>
        <function-ref name="set" scoped="" ref="0x403e9d88"/>
        <function-ref name="clr" scoped="" ref="0x403e9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403ecce8" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403ecce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ecec0"/>
        <function-ref name="isInput" scoped="" ref="0x403eb010"/>
        <function-ref name="toggle" scoped="" ref="0x403eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb1d0"/>
        <function-ref name="get" scoped="" ref="0x403eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb390"/>
        <function-ref name="set" scoped="" ref="0x403eb470"/>
        <function-ref name="clr" scoped="" ref="0x403eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403face8" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403face8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403faec0"/>
        <function-ref name="isInput" scoped="" ref="0x403f9010"/>
        <function-ref name="toggle" scoped="" ref="0x403f90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f91d0"/>
        <function-ref name="get" scoped="" ref="0x403f92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f9390"/>
        <function-ref name="set" scoped="" ref="0x403f9470"/>
        <function-ref name="clr" scoped="" ref="0x403f9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403ea210" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403ea210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ea4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea688"/>
        <function-ref name="get" scoped="" ref="0x403ea768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea848"/>
        <function-ref name="set" scoped="" ref="0x403ea928"/>
        <function-ref name="clr" scoped="" ref="0x403eaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403f88e0" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403f88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403f8b98"/>
        <function-ref name="toggle" scoped="" ref="0x403f8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8d58"/>
        <function-ref name="get" scoped="" ref="0x403f8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8f18"/>
        <function-ref name="set" scoped="" ref="0x403f7010"/>
        <function-ref name="clr" scoped="" ref="0x403f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403fcea8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403fcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403fb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403fb280"/>
        <function-ref name="isOutput" scoped="" ref="0x403fb360"/>
        <function-ref name="get" scoped="" ref="0x403fb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fb520"/>
        <function-ref name="set" scoped="" ref="0x403fb600"/>
        <function-ref name="clr" scoped="" ref="0x403fb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403ff0a0" loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403ff0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff278"/>
        <function-ref name="isInput" scoped="" ref="0x403ff358"/>
        <function-ref name="toggle" scoped="" ref="0x403ff438"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff518"/>
        <function-ref name="get" scoped="" ref="0x403ff5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff6d8"/>
        <function-ref name="set" scoped="" ref="0x403ff7b8"/>
        <function-ref name="clr" scoped="" ref="0x403ff898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403e22f0" loc="44:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2768"/>
        <function-ref name="get" scoped="" ref="0x403e2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2928"/>
        <function-ref name="set" scoped="" ref="0x403e2a08"/>
        <function-ref name="clr" scoped="" ref="0x403e2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403e58e0" loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e5b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5d58"/>
        <function-ref name="get" scoped="" ref="0x403e5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5f18"/>
        <function-ref name="set" scoped="" ref="0x403ee010"/>
        <function-ref name="clr" scoped="" ref="0x403ee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403f20a0" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403f20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2278"/>
        <function-ref name="isInput" scoped="" ref="0x403f2358"/>
        <function-ref name="toggle" scoped="" ref="0x403f2438"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2518"/>
        <function-ref name="get" scoped="" ref="0x403f25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f26d8"/>
        <function-ref name="set" scoped="" ref="0x403f27b8"/>
        <function-ref name="clr" scoped="" ref="0x403f2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403f6750" loc="77:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403f6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f6928"/>
        <function-ref name="isInput" scoped="" ref="0x403f6a08"/>
        <function-ref name="toggle" scoped="" ref="0x403f6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6bc8"/>
        <function-ref name="get" scoped="" ref="0x403f6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6d88"/>
        <function-ref name="set" scoped="" ref="0x403f6e68"/>
        <function-ref name="clr" scoped="" ref="0x403f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40406590" loc="100:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40406590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406768"/>
        <function-ref name="isInput" scoped="" ref="0x40406848"/>
        <function-ref name="toggle" scoped="" ref="0x40406928"/>
        <function-ref name="isOutput" scoped="" ref="0x40406a08"/>
        <function-ref name="get" scoped="" ref="0x40406ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406bc8"/>
        <function-ref name="set" scoped="" ref="0x40406ca8"/>
        <function-ref name="clr" scoped="" ref="0x40406d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403f5c08" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403f5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f5de0"/>
        <function-ref name="isInput" scoped="" ref="0x403f5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403f4010"/>
        <function-ref name="isOutput" scoped="" ref="0x403f40f0"/>
        <function-ref name="get" scoped="" ref="0x403f41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f42b0"/>
        <function-ref name="set" scoped="" ref="0x403f4390"/>
        <function-ref name="clr" scoped="" ref="0x403f4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403f1ea8" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403f1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f00c0"/>
        <function-ref name="isInput" scoped="" ref="0x403f01a0"/>
        <function-ref name="toggle" scoped="" ref="0x403f0280"/>
        <function-ref name="isOutput" scoped="" ref="0x403f0360"/>
        <function-ref name="get" scoped="" ref="0x403f0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f0520"/>
        <function-ref name="set" scoped="" ref="0x403f0600"/>
        <function-ref name="clr" scoped="" ref="0x403f06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403e0210" loc="47:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403e0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e03e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e04c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0688"/>
        <function-ref name="get" scoped="" ref="0x403e0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0848"/>
        <function-ref name="set" scoped="" ref="0x403e0928"/>
        <function-ref name="clr" scoped="" ref="0x403e0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403ed830" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403ed830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eda08"/>
        <function-ref name="isInput" scoped="" ref="0x403edae8"/>
        <function-ref name="toggle" scoped="" ref="0x403edbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403edca8"/>
        <function-ref name="get" scoped="" ref="0x403edd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ede68"/>
        <function-ref name="set" scoped="" ref="0x403ec010"/>
        <function-ref name="clr" scoped="" ref="0x403ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042cba8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042cd80"/>
        <function-ref name="isInput" scoped="" ref="0x4042ce60"/>
        <function-ref name="toggle" scoped="" ref="0x4042b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b0f0"/>
        <function-ref name="get" scoped="" ref="0x4042b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b2b0"/>
        <function-ref name="set" scoped="" ref="0x4042b390"/>
        <function-ref name="clr" scoped="" ref="0x4042b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40436890" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40436890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436a68"/>
        <function-ref name="isInput" scoped="" ref="0x40436b48"/>
        <function-ref name="toggle" scoped="" ref="0x40436c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40436d08"/>
        <function-ref name="get" scoped="" ref="0x40436de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436ec8"/>
        <function-ref name="set" scoped="" ref="0x40435010"/>
        <function-ref name="clr" scoped="" ref="0x404350f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042d8e0" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4042db98"/>
        <function-ref name="toggle" scoped="" ref="0x4042dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dd58"/>
        <function-ref name="get" scoped="" ref="0x4042de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042df18"/>
        <function-ref name="set" scoped="" ref="0x4042c010"/>
        <function-ref name="clr" scoped="" ref="0x4042c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042b5d0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4042b888"/>
        <function-ref name="toggle" scoped="" ref="0x4042b968"/>
        <function-ref name="isOutput" scoped="" ref="0x4042ba48"/>
        <function-ref name="get" scoped="" ref="0x4042bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042bc08"/>
        <function-ref name="set" scoped="" ref="0x4042bce8"/>
        <function-ref name="clr" scoped="" ref="0x4042bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40435250" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40435250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435428"/>
        <function-ref name="isInput" scoped="" ref="0x40435508"/>
        <function-ref name="toggle" scoped="" ref="0x404355e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404356c8"/>
        <function-ref name="get" scoped="" ref="0x404357a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435888"/>
        <function-ref name="set" scoped="" ref="0x40435968"/>
        <function-ref name="clr" scoped="" ref="0x40435a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042c250" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c428"/>
        <function-ref name="isInput" scoped="" ref="0x4042c508"/>
        <function-ref name="toggle" scoped="" ref="0x4042c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c6c8"/>
        <function-ref name="get" scoped="" ref="0x4042c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c888"/>
        <function-ref name="set" scoped="" ref="0x4042c968"/>
        <function-ref name="clr" scoped="" ref="0x4042ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042bf28" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436110"/>
        <function-ref name="isInput" scoped="" ref="0x404361f0"/>
        <function-ref name="toggle" scoped="" ref="0x404362d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404363b0"/>
        <function-ref name="get" scoped="" ref="0x40436490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436570"/>
        <function-ref name="set" scoped="" ref="0x40436650"/>
        <function-ref name="clr" scoped="" ref="0x40436730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40435ba8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40435ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435d80"/>
        <function-ref name="isInput" scoped="" ref="0x40435e60"/>
        <function-ref name="toggle" scoped="" ref="0x40434010"/>
        <function-ref name="isOutput" scoped="" ref="0x404340f0"/>
        <function-ref name="get" scoped="" ref="0x404341d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404342b0"/>
        <function-ref name="set" scoped="" ref="0x40434390"/>
        <function-ref name="clr" scoped="" ref="0x40434470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40600ed8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40600ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406100c0"/>
        <function-ref name="isInput" scoped="" ref="0x406101a0"/>
        <function-ref name="toggle" scoped="" ref="0x40610280"/>
        <function-ref name="isOutput" scoped="" ref="0x40610360"/>
        <function-ref name="get" scoped="" ref="0x40610440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40610520"/>
        <function-ref name="set" scoped="" ref="0x40610600"/>
        <function-ref name="clr" scoped="" ref="0x406106e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4060f8a0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4060f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060fa78"/>
        <function-ref name="isInput" scoped="" ref="0x4060fb58"/>
        <function-ref name="toggle" scoped="" ref="0x4060fc38"/>
        <function-ref name="isOutput" scoped="" ref="0x4060fd18"/>
        <function-ref name="get" scoped="" ref="0x4060fdf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060fed8"/>
        <function-ref name="set" scoped="" ref="0x4060e010"/>
        <function-ref name="clr" scoped="" ref="0x4060e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4060d2d0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4060d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060d4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4060d588"/>
        <function-ref name="toggle" scoped="" ref="0x4060d668"/>
        <function-ref name="isOutput" scoped="" ref="0x4060d748"/>
        <function-ref name="get" scoped="" ref="0x4060d828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060d908"/>
        <function-ref name="set" scoped="" ref="0x4060d9e8"/>
        <function-ref name="clr" scoped="" ref="0x4060dac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4060cc90" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4060cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060ce68"/>
        <function-ref name="isInput" scoped="" ref="0x4060b010"/>
        <function-ref name="toggle" scoped="" ref="0x4060b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4060b1d0"/>
        <function-ref name="get" scoped="" ref="0x4060b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060b390"/>
        <function-ref name="set" scoped="" ref="0x4060b470"/>
        <function-ref name="clr" scoped="" ref="0x4060b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061c718" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4061c9d0"/>
        <function-ref name="toggle" scoped="" ref="0x4061cab0"/>
        <function-ref name="isOutput" scoped="" ref="0x4061cb90"/>
        <function-ref name="get" scoped="" ref="0x4061cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061cd50"/>
        <function-ref name="set" scoped="" ref="0x4061ce30"/>
        <function-ref name="clr" scoped="" ref="0x4061cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061a0f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061a2d0"/>
        <function-ref name="isInput" scoped="" ref="0x4061a3b0"/>
        <function-ref name="toggle" scoped="" ref="0x4061a490"/>
        <function-ref name="isOutput" scoped="" ref="0x4061a570"/>
        <function-ref name="get" scoped="" ref="0x4061a650"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061a730"/>
        <function-ref name="set" scoped="" ref="0x4061a810"/>
        <function-ref name="clr" scoped="" ref="0x4061a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40619ac8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40619ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40619ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40619d80"/>
        <function-ref name="toggle" scoped="" ref="0x40619e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40618010"/>
        <function-ref name="get" scoped="" ref="0x406180f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406181d0"/>
        <function-ref name="set" scoped="" ref="0x406182b0"/>
        <function-ref name="clr" scoped="" ref="0x40618390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40617570" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40617570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40617748"/>
        <function-ref name="isInput" scoped="" ref="0x40617828"/>
        <function-ref name="toggle" scoped="" ref="0x40617908"/>
        <function-ref name="isOutput" scoped="" ref="0x406179e8"/>
        <function-ref name="get" scoped="" ref="0x40617ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40617ba8"/>
        <function-ref name="set" scoped="" ref="0x40617c88"/>
        <function-ref name="clr" scoped="" ref="0x40617d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043b4f0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b968"/>
        <function-ref name="get" scoped="" ref="0x4043ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043bb28"/>
        <function-ref name="set" scoped="" ref="0x4043bc08"/>
        <function-ref name="clr" scoped="" ref="0x4043bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40439170" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40439170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439348"/>
        <function-ref name="isInput" scoped="" ref="0x40439428"/>
        <function-ref name="toggle" scoped="" ref="0x40439508"/>
        <function-ref name="isOutput" scoped="" ref="0x404395e8"/>
        <function-ref name="get" scoped="" ref="0x404396c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404397a8"/>
        <function-ref name="set" scoped="" ref="0x40439888"/>
        <function-ref name="clr" scoped="" ref="0x40439968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40431228" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40431228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431400"/>
        <function-ref name="isInput" scoped="" ref="0x404314e0"/>
        <function-ref name="toggle" scoped="" ref="0x404315c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404316a0"/>
        <function-ref name="get" scoped="" ref="0x40431780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431860"/>
        <function-ref name="set" scoped="" ref="0x40431940"/>
        <function-ref name="clr" scoped="" ref="0x40431a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043be48" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a050"/>
        <function-ref name="isInput" scoped="" ref="0x4043a130"/>
        <function-ref name="toggle" scoped="" ref="0x4043a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a2f0"/>
        <function-ref name="get" scoped="" ref="0x4043a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a4b0"/>
        <function-ref name="set" scoped="" ref="0x4043a590"/>
        <function-ref name="clr" scoped="" ref="0x4043a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40439ac8" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40439ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40439d80"/>
        <function-ref name="toggle" scoped="" ref="0x40439e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40438010"/>
        <function-ref name="get" scoped="" ref="0x404380f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404381d0"/>
        <function-ref name="set" scoped="" ref="0x404382b0"/>
        <function-ref name="clr" scoped="" ref="0x40438390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40431b80" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40431b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431d58"/>
        <function-ref name="isInput" scoped="" ref="0x40431e38"/>
        <function-ref name="toggle" scoped="" ref="0x40431f18"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b010"/>
        <function-ref name="get" scoped="" ref="0x4043b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b1d0"/>
        <function-ref name="set" scoped="" ref="0x4043b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4043b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4043a7d0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4043a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4043aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4043ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ac48"/>
        <function-ref name="get" scoped="" ref="0x4043ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ae08"/>
        <function-ref name="set" scoped="" ref="0x4043aee8"/>
        <function-ref name="clr" scoped="" ref="0x40439010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404384f0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404384f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404386c8"/>
        <function-ref name="isInput" scoped="" ref="0x404387a8"/>
        <function-ref name="toggle" scoped="" ref="0x40438888"/>
        <function-ref name="isOutput" scoped="" ref="0x40438968"/>
        <function-ref name="get" scoped="" ref="0x40438a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438b28"/>
        <function-ref name="set" scoped="" ref="0x40438c08"/>
        <function-ref name="clr" scoped="" ref="0x40438ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4064a938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4064a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064ab10"/>
        <function-ref name="isInput" scoped="" ref="0x4064abf0"/>
        <function-ref name="toggle" scoped="" ref="0x4064acd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4064adb0"/>
        <function-ref name="get" scoped="" ref="0x4064ae90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40649010"/>
        <function-ref name="set" scoped="" ref="0x406490f0"/>
        <function-ref name="clr" scoped="" ref="0x406491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406483b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406483b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40648588"/>
        <function-ref name="isInput" scoped="" ref="0x40648668"/>
        <function-ref name="toggle" scoped="" ref="0x40648748"/>
        <function-ref name="isOutput" scoped="" ref="0x40648828"/>
        <function-ref name="get" scoped="" ref="0x40648908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406489e8"/>
        <function-ref name="set" scoped="" ref="0x40648ac8"/>
        <function-ref name="clr" scoped="" ref="0x40648ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40647d70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40647d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40646010"/>
        <function-ref name="isInput" scoped="" ref="0x406460f0"/>
        <function-ref name="toggle" scoped="" ref="0x406461d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406462b0"/>
        <function-ref name="get" scoped="" ref="0x40646390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40646470"/>
        <function-ref name="set" scoped="" ref="0x40646550"/>
        <function-ref name="clr" scoped="" ref="0x40646630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406457f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406457f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406459d0"/>
        <function-ref name="isInput" scoped="" ref="0x40645ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40645b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40645c70"/>
        <function-ref name="get" scoped="" ref="0x40645d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40645e30"/>
        <function-ref name="set" scoped="" ref="0x40645f10"/>
        <function-ref name="clr" scoped="" ref="0x40644010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40643228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40643228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40643400"/>
        <function-ref name="isInput" scoped="" ref="0x406434e0"/>
        <function-ref name="toggle" scoped="" ref="0x406435c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406436a0"/>
        <function-ref name="get" scoped="" ref="0x40643780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40643860"/>
        <function-ref name="set" scoped="" ref="0x40643940"/>
        <function-ref name="clr" scoped="" ref="0x40643a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40656c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40656c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40656de0"/>
        <function-ref name="isInput" scoped="" ref="0x40656ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40655010"/>
        <function-ref name="isOutput" scoped="" ref="0x406550f0"/>
        <function-ref name="get" scoped="" ref="0x406551d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406552b0"/>
        <function-ref name="set" scoped="" ref="0x40655390"/>
        <function-ref name="clr" scoped="" ref="0x40655470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406546c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40654898"/>
        <function-ref name="isInput" scoped="" ref="0x40654978"/>
        <function-ref name="toggle" scoped="" ref="0x40654a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40654b38"/>
        <function-ref name="get" scoped="" ref="0x40654c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40654cf8"/>
        <function-ref name="set" scoped="" ref="0x40654dd8"/>
        <function-ref name="clr" scoped="" ref="0x40654eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406510b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406510b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40651288"/>
        <function-ref name="isInput" scoped="" ref="0x40651368"/>
        <function-ref name="toggle" scoped="" ref="0x40651448"/>
        <function-ref name="isOutput" scoped="" ref="0x40651528"/>
        <function-ref name="get" scoped="" ref="0x40651608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406516e8"/>
        <function-ref name="set" scoped="" ref="0x406517c8"/>
        <function-ref name="clr" scoped="" ref="0x406518a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40440e48" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40440e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f050"/>
        <function-ref name="isInput" scoped="" ref="0x4043f130"/>
        <function-ref name="toggle" scoped="" ref="0x4043f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f2f0"/>
        <function-ref name="get" scoped="" ref="0x4043f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f4b0"/>
        <function-ref name="set" scoped="" ref="0x4043f590"/>
        <function-ref name="clr" scoped="" ref="0x4043f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4043eac8" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4043eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4043ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4043ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x40448010"/>
        <function-ref name="get" scoped="" ref="0x404480f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404481d0"/>
        <function-ref name="set" scoped="" ref="0x404482b0"/>
        <function-ref name="clr" scoped="" ref="0x40448390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40441b00" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40441b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40441cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40441db8"/>
        <function-ref name="toggle" scoped="" ref="0x40441e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40440010"/>
        <function-ref name="get" scoped="" ref="0x404400f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404401d0"/>
        <function-ref name="set" scoped="" ref="0x404402b0"/>
        <function-ref name="clr" scoped="" ref="0x40440390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043f7d0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4043fa88"/>
        <function-ref name="toggle" scoped="" ref="0x4043fb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4043fc48"/>
        <function-ref name="get" scoped="" ref="0x4043fd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043fe08"/>
        <function-ref name="set" scoped="" ref="0x4043fee8"/>
        <function-ref name="clr" scoped="" ref="0x4043e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404484f0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404484f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404486c8"/>
        <function-ref name="isInput" scoped="" ref="0x404487a8"/>
        <function-ref name="toggle" scoped="" ref="0x40448888"/>
        <function-ref name="isOutput" scoped="" ref="0x40448968"/>
        <function-ref name="get" scoped="" ref="0x40448a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448b28"/>
        <function-ref name="set" scoped="" ref="0x40448c08"/>
        <function-ref name="clr" scoped="" ref="0x40448ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404404f0" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404404f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404406c8"/>
        <function-ref name="isInput" scoped="" ref="0x404407a8"/>
        <function-ref name="toggle" scoped="" ref="0x40440888"/>
        <function-ref name="isOutput" scoped="" ref="0x40440968"/>
        <function-ref name="get" scoped="" ref="0x40440a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440b28"/>
        <function-ref name="set" scoped="" ref="0x40440c08"/>
        <function-ref name="clr" scoped="" ref="0x40440ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4043e170" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4043e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e348"/>
        <function-ref name="isInput" scoped="" ref="0x4043e428"/>
        <function-ref name="toggle" scoped="" ref="0x4043e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e5e8"/>
        <function-ref name="get" scoped="" ref="0x4043e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e7a8"/>
        <function-ref name="set" scoped="" ref="0x4043e888"/>
        <function-ref name="clr" scoped="" ref="0x4043e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40448e48" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40448e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447050"/>
        <function-ref name="isInput" scoped="" ref="0x40447130"/>
        <function-ref name="toggle" scoped="" ref="0x40447210"/>
        <function-ref name="isOutput" scoped="" ref="0x404472f0"/>
        <function-ref name="get" scoped="" ref="0x404473d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404474b0"/>
        <function-ref name="set" scoped="" ref="0x40447590"/>
        <function-ref name="clr" scoped="" ref="0x40447670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40675538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40675538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40675710"/>
        <function-ref name="isInput" scoped="" ref="0x406757f0"/>
        <function-ref name="toggle" scoped="" ref="0x406758d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406759b0"/>
        <function-ref name="get" scoped="" ref="0x40675a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40675b70"/>
        <function-ref name="set" scoped="" ref="0x40675c50"/>
        <function-ref name="clr" scoped="" ref="0x40675d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40687010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40687010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406871e8"/>
        <function-ref name="isInput" scoped="" ref="0x406872c8"/>
        <function-ref name="toggle" scoped="" ref="0x406873a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40687488"/>
        <function-ref name="get" scoped="" ref="0x40687568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40687648"/>
        <function-ref name="set" scoped="" ref="0x40687728"/>
        <function-ref name="clr" scoped="" ref="0x40687808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406869e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406869e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40686bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40686ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40686d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40686e60"/>
        <function-ref name="get" scoped="" ref="0x40685010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406850f0"/>
        <function-ref name="set" scoped="" ref="0x406851d0"/>
        <function-ref name="clr" scoped="" ref="0x406852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40684538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40684538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40684710"/>
        <function-ref name="isInput" scoped="" ref="0x406847f0"/>
        <function-ref name="toggle" scoped="" ref="0x406848d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406849b0"/>
        <function-ref name="get" scoped="" ref="0x40684a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40684b70"/>
        <function-ref name="set" scoped="" ref="0x40684c50"/>
        <function-ref name="clr" scoped="" ref="0x40684d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40682010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40682010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406821e8"/>
        <function-ref name="isInput" scoped="" ref="0x406822c8"/>
        <function-ref name="toggle" scoped="" ref="0x406823a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40682488"/>
        <function-ref name="get" scoped="" ref="0x40682568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40682648"/>
        <function-ref name="set" scoped="" ref="0x40682728"/>
        <function-ref name="clr" scoped="" ref="0x40682808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406819e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406819e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40681bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40681ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40681d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40681e60"/>
        <function-ref name="get" scoped="" ref="0x40680010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406800f0"/>
        <function-ref name="set" scoped="" ref="0x406801d0"/>
        <function-ref name="clr" scoped="" ref="0x406802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4067f538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4067f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067f710"/>
        <function-ref name="isInput" scoped="" ref="0x4067f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4067f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4067f9b0"/>
        <function-ref name="get" scoped="" ref="0x4067fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067fb70"/>
        <function-ref name="set" scoped="" ref="0x4067fc50"/>
        <function-ref name="clr" scoped="" ref="0x4067fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40691010" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40691010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406911e8"/>
        <function-ref name="isInput" scoped="" ref="0x406912c8"/>
        <function-ref name="toggle" scoped="" ref="0x406913a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40691488"/>
        <function-ref name="get" scoped="" ref="0x40691568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40691648"/>
        <function-ref name="set" scoped="" ref="0x40691728"/>
        <function-ref name="clr" scoped="" ref="0x40691808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404436b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404436b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443888"/>
        <function-ref name="isInput" scoped="" ref="0x40443968"/>
        <function-ref name="toggle" scoped="" ref="0x40443a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40443b28"/>
        <function-ref name="get" scoped="" ref="0x40443c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40443ce8"/>
        <function-ref name="set" scoped="" ref="0x40443dc8"/>
        <function-ref name="clr" scoped="" ref="0x40443ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4044d330" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4044d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044d508"/>
        <function-ref name="isInput" scoped="" ref="0x4044d5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044d7a8"/>
        <function-ref name="get" scoped="" ref="0x4044d888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d968"/>
        <function-ref name="set" scoped="" ref="0x4044da48"/>
        <function-ref name="clr" scoped="" ref="0x4044db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404443d8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404443d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404445b0"/>
        <function-ref name="isInput" scoped="" ref="0x40444690"/>
        <function-ref name="toggle" scoped="" ref="0x40444770"/>
        <function-ref name="isOutput" scoped="" ref="0x40444850"/>
        <function-ref name="get" scoped="" ref="0x40444930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444a10"/>
        <function-ref name="set" scoped="" ref="0x40444af0"/>
        <function-ref name="clr" scoped="" ref="0x40444bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4044e030" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4044e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044e208"/>
        <function-ref name="isInput" scoped="" ref="0x4044e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044e4a8"/>
        <function-ref name="get" scoped="" ref="0x4044e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044e668"/>
        <function-ref name="set" scoped="" ref="0x4044e748"/>
        <function-ref name="clr" scoped="" ref="0x4044e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4044dc88" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4044dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044de60"/>
        <function-ref name="isInput" scoped="" ref="0x4044c010"/>
        <function-ref name="toggle" scoped="" ref="0x4044c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c1d0"/>
        <function-ref name="get" scoped="" ref="0x4044c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c390"/>
        <function-ref name="set" scoped="" ref="0x4044c470"/>
        <function-ref name="clr" scoped="" ref="0x4044c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40444d30" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40444d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444f08"/>
        <function-ref name="isInput" scoped="" ref="0x40443010"/>
        <function-ref name="toggle" scoped="" ref="0x404430f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404431d0"/>
        <function-ref name="get" scoped="" ref="0x404432b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40443390"/>
        <function-ref name="set" scoped="" ref="0x40443470"/>
        <function-ref name="clr" scoped="" ref="0x40443550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4044e988" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4044e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044eb60"/>
        <function-ref name="isInput" scoped="" ref="0x4044ec40"/>
        <function-ref name="toggle" scoped="" ref="0x4044ed20"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ee00"/>
        <function-ref name="get" scoped="" ref="0x4044eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d010"/>
        <function-ref name="set" scoped="" ref="0x4044d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4044d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4044c6b0" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4044c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c888"/>
        <function-ref name="isInput" scoped="" ref="0x4044c968"/>
        <function-ref name="toggle" scoped="" ref="0x4044ca48"/>
        <function-ref name="isOutput" scoped="" ref="0x4044cb28"/>
        <function-ref name="get" scoped="" ref="0x4044cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044cce8"/>
        <function-ref name="set" scoped="" ref="0x4044cdc8"/>
        <function-ref name="clr" scoped="" ref="0x4044cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b6418" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b65f0"/>
        <function-ref name="isInput" scoped="" ref="0x406b66d0"/>
        <function-ref name="toggle" scoped="" ref="0x406b67b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b6890"/>
        <function-ref name="get" scoped="" ref="0x406b6970"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b6a50"/>
        <function-ref name="set" scoped="" ref="0x406b6b30"/>
        <function-ref name="clr" scoped="" ref="0x406b6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b5de0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b4010"/>
        <function-ref name="isInput" scoped="" ref="0x406b40f0"/>
        <function-ref name="toggle" scoped="" ref="0x406b41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b42b0"/>
        <function-ref name="get" scoped="" ref="0x406b4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4470"/>
        <function-ref name="set" scoped="" ref="0x406b4550"/>
        <function-ref name="clr" scoped="" ref="0x406b4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b37f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b39d0"/>
        <function-ref name="isInput" scoped="" ref="0x406b3ab0"/>
        <function-ref name="toggle" scoped="" ref="0x406b3b90"/>
        <function-ref name="isOutput" scoped="" ref="0x406b3c70"/>
        <function-ref name="get" scoped="" ref="0x406b3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b3e30"/>
        <function-ref name="set" scoped="" ref="0x406b3f10"/>
        <function-ref name="clr" scoped="" ref="0x406b2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b1228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b1400"/>
        <function-ref name="isInput" scoped="" ref="0x406b14e0"/>
        <function-ref name="toggle" scoped="" ref="0x406b15c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b16a0"/>
        <function-ref name="get" scoped="" ref="0x406b1780"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b1860"/>
        <function-ref name="set" scoped="" ref="0x406b1940"/>
        <function-ref name="clr" scoped="" ref="0x406b1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c6c08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c6de0"/>
        <function-ref name="isInput" scoped="" ref="0x406c6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x406c4010"/>
        <function-ref name="isOutput" scoped="" ref="0x406c40f0"/>
        <function-ref name="get" scoped="" ref="0x406c41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c42b0"/>
        <function-ref name="set" scoped="" ref="0x406c4390"/>
        <function-ref name="clr" scoped="" ref="0x406c4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c36c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c3898"/>
        <function-ref name="isInput" scoped="" ref="0x406c3978"/>
        <function-ref name="toggle" scoped="" ref="0x406c3a58"/>
        <function-ref name="isOutput" scoped="" ref="0x406c3b38"/>
        <function-ref name="get" scoped="" ref="0x406c3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c3cf8"/>
        <function-ref name="set" scoped="" ref="0x406c3dd8"/>
        <function-ref name="clr" scoped="" ref="0x406c3eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c10b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c1288"/>
        <function-ref name="isInput" scoped="" ref="0x406c1368"/>
        <function-ref name="toggle" scoped="" ref="0x406c1448"/>
        <function-ref name="isOutput" scoped="" ref="0x406c1528"/>
        <function-ref name="get" scoped="" ref="0x406c1608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c16e8"/>
        <function-ref name="set" scoped="" ref="0x406c17c8"/>
        <function-ref name="clr" scoped="" ref="0x406c18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c0a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c0c60"/>
        <function-ref name="isInput" scoped="" ref="0x406c0d40"/>
        <function-ref name="toggle" scoped="" ref="0x406c0e20"/>
        <function-ref name="isOutput" scoped="" ref="0x406c0f00"/>
        <function-ref name="get" scoped="" ref="0x406bf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406bf0f0"/>
        <function-ref name="set" scoped="" ref="0x406bf1d0"/>
        <function-ref name="clr" scoped="" ref="0x406bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40452170" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40452170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452348"/>
        <function-ref name="isInput" scoped="" ref="0x40452428"/>
        <function-ref name="toggle" scoped="" ref="0x40452508"/>
        <function-ref name="isOutput" scoped="" ref="0x404525e8"/>
        <function-ref name="get" scoped="" ref="0x404526c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404527a8"/>
        <function-ref name="set" scoped="" ref="0x40452888"/>
        <function-ref name="clr" scoped="" ref="0x40452968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40451e48" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40451e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450050"/>
        <function-ref name="isInput" scoped="" ref="0x40450130"/>
        <function-ref name="toggle" scoped="" ref="0x40450210"/>
        <function-ref name="isOutput" scoped="" ref="0x404502f0"/>
        <function-ref name="get" scoped="" ref="0x404503d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404504b0"/>
        <function-ref name="set" scoped="" ref="0x40450590"/>
        <function-ref name="clr" scoped="" ref="0x40450670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40454dc8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40454dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453010"/>
        <function-ref name="isInput" scoped="" ref="0x404530f0"/>
        <function-ref name="toggle" scoped="" ref="0x404531d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404532b0"/>
        <function-ref name="get" scoped="" ref="0x40453390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453470"/>
        <function-ref name="set" scoped="" ref="0x40453550"/>
        <function-ref name="clr" scoped="" ref="0x40453630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40452ac8" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40452ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40452d80"/>
        <function-ref name="toggle" scoped="" ref="0x40452e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40451010"/>
        <function-ref name="get" scoped="" ref="0x404510f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404511d0"/>
        <function-ref name="set" scoped="" ref="0x404512b0"/>
        <function-ref name="clr" scoped="" ref="0x40451390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404507d0" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404507d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404509a8"/>
        <function-ref name="isInput" scoped="" ref="0x40450a88"/>
        <function-ref name="toggle" scoped="" ref="0x40450b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40450c48"/>
        <function-ref name="get" scoped="" ref="0x40450d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450e08"/>
        <function-ref name="set" scoped="" ref="0x40450ee8"/>
        <function-ref name="clr" scoped="" ref="0x4044f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40453790" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40453790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453968"/>
        <function-ref name="isInput" scoped="" ref="0x40453a48"/>
        <function-ref name="toggle" scoped="" ref="0x40453b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40453c08"/>
        <function-ref name="get" scoped="" ref="0x40453ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453dc8"/>
        <function-ref name="set" scoped="" ref="0x40453ea8"/>
        <function-ref name="clr" scoped="" ref="0x40452010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404514f0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404514f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404516c8"/>
        <function-ref name="isInput" scoped="" ref="0x404517a8"/>
        <function-ref name="toggle" scoped="" ref="0x40451888"/>
        <function-ref name="isOutput" scoped="" ref="0x40451968"/>
        <function-ref name="get" scoped="" ref="0x40451a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451b28"/>
        <function-ref name="set" scoped="" ref="0x40451c08"/>
        <function-ref name="clr" scoped="" ref="0x40451ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4044f170" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4044f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f348"/>
        <function-ref name="isInput" scoped="" ref="0x4044f428"/>
        <function-ref name="toggle" scoped="" ref="0x4044f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f5e8"/>
        <function-ref name="get" scoped="" ref="0x4044f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f7a8"/>
        <function-ref name="set" scoped="" ref="0x4044f888"/>
        <function-ref name="clr" scoped="" ref="0x4044f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406efde8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406efde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406eb010"/>
        <function-ref name="isInput" scoped="" ref="0x406eb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x406eb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406eb2b0"/>
        <function-ref name="get" scoped="" ref="0x406eb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406eb470"/>
        <function-ref name="set" scoped="" ref="0x406eb550"/>
        <function-ref name="clr" scoped="" ref="0x406eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ea7f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406ea7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ea9d0"/>
        <function-ref name="isInput" scoped="" ref="0x406eaab0"/>
        <function-ref name="toggle" scoped="" ref="0x406eab90"/>
        <function-ref name="isOutput" scoped="" ref="0x406eac70"/>
        <function-ref name="get" scoped="" ref="0x406ead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x406eae30"/>
        <function-ref name="set" scoped="" ref="0x406eaf10"/>
        <function-ref name="clr" scoped="" ref="0x406e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e8228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406e8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e8400"/>
        <function-ref name="isInput" scoped="" ref="0x406e84e0"/>
        <function-ref name="toggle" scoped="" ref="0x406e85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e86a0"/>
        <function-ref name="get" scoped="" ref="0x406e8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e8860"/>
        <function-ref name="set" scoped="" ref="0x406e8940"/>
        <function-ref name="clr" scoped="" ref="0x406e8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406fdc08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406fdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fdde0"/>
        <function-ref name="isInput" scoped="" ref="0x406fdec0"/>
        <function-ref name="toggle" scoped="" ref="0x406fc010"/>
        <function-ref name="isOutput" scoped="" ref="0x406fc0f0"/>
        <function-ref name="get" scoped="" ref="0x406fc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fc2b0"/>
        <function-ref name="set" scoped="" ref="0x406fc390"/>
        <function-ref name="clr" scoped="" ref="0x406fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406fb6c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406fb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fb898"/>
        <function-ref name="isInput" scoped="" ref="0x406fb978"/>
        <function-ref name="toggle" scoped="" ref="0x406fba58"/>
        <function-ref name="isOutput" scoped="" ref="0x406fbb38"/>
        <function-ref name="get" scoped="" ref="0x406fbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fbcf8"/>
        <function-ref name="set" scoped="" ref="0x406fbdd8"/>
        <function-ref name="clr" scoped="" ref="0x406fbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f90b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406f90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f9288"/>
        <function-ref name="isInput" scoped="" ref="0x406f9368"/>
        <function-ref name="toggle" scoped="" ref="0x406f9448"/>
        <function-ref name="isOutput" scoped="" ref="0x406f9528"/>
        <function-ref name="get" scoped="" ref="0x406f9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f96e8"/>
        <function-ref name="set" scoped="" ref="0x406f97c8"/>
        <function-ref name="clr" scoped="" ref="0x406f98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f8a88" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406f8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f8c60"/>
        <function-ref name="isInput" scoped="" ref="0x406f8d40"/>
        <function-ref name="toggle" scoped="" ref="0x406f8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x406f8f00"/>
        <function-ref name="get" scoped="" ref="0x406f7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f70f0"/>
        <function-ref name="set" scoped="" ref="0x406f71d0"/>
        <function-ref name="clr" scoped="" ref="0x406f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f6538" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406f6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f6710"/>
        <function-ref name="isInput" scoped="" ref="0x406f67f0"/>
        <function-ref name="toggle" scoped="" ref="0x406f68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406f69b0"/>
        <function-ref name="get" scoped="" ref="0x406f6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f6b70"/>
        <function-ref name="set" scoped="" ref="0x406f6c50"/>
        <function-ref name="clr" scoped="" ref="0x406f6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404579e8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404579e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40457ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40457d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40457e60"/>
        <function-ref name="get" scoped="" ref="0x40455010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404550f0"/>
        <function-ref name="set" scoped="" ref="0x404551d0"/>
        <function-ref name="clr" scoped="" ref="0x404552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40460790" loc="40:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40460790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460968"/>
        <function-ref name="isInput" scoped="" ref="0x40460a48"/>
        <function-ref name="toggle" scoped="" ref="0x40460b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40460c08"/>
        <function-ref name="get" scoped="" ref="0x40460ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460dc8"/>
        <function-ref name="set" scoped="" ref="0x40460ea8"/>
        <function-ref name="clr" scoped="" ref="0x4045f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404586f8" loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404586f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404588d0"/>
        <function-ref name="isInput" scoped="" ref="0x404589b0"/>
        <function-ref name="toggle" scoped="" ref="0x40458a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40458b70"/>
        <function-ref name="get" scoped="" ref="0x40458c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458d30"/>
        <function-ref name="set" scoped="" ref="0x40458e10"/>
        <function-ref name="clr" scoped="" ref="0x40458ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40455410" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40455410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404555e8"/>
        <function-ref name="isInput" scoped="" ref="0x404556c8"/>
        <function-ref name="toggle" scoped="" ref="0x404557a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40455888"/>
        <function-ref name="get" scoped="" ref="0x40455968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455a48"/>
        <function-ref name="set" scoped="" ref="0x40455b28"/>
        <function-ref name="clr" scoped="" ref="0x40455c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4045f170" loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4045f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f348"/>
        <function-ref name="isInput" scoped="" ref="0x4045f428"/>
        <function-ref name="toggle" scoped="" ref="0x4045f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f5e8"/>
        <function-ref name="get" scoped="" ref="0x4045f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f7a8"/>
        <function-ref name="set" scoped="" ref="0x4045f888"/>
        <function-ref name="clr" scoped="" ref="0x4045f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40457090" loc="36:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40457090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457268"/>
        <function-ref name="isInput" scoped="" ref="0x40457348"/>
        <function-ref name="toggle" scoped="" ref="0x40457428"/>
        <function-ref name="isOutput" scoped="" ref="0x40457508"/>
        <function-ref name="get" scoped="" ref="0x404575e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404576c8"/>
        <function-ref name="set" scoped="" ref="0x404577a8"/>
        <function-ref name="clr" scoped="" ref="0x40457888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40455d68" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40455d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460010"/>
        <function-ref name="isInput" scoped="" ref="0x404600f0"/>
        <function-ref name="toggle" scoped="" ref="0x404601d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404602b0"/>
        <function-ref name="get" scoped="" ref="0x40460390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460470"/>
        <function-ref name="set" scoped="" ref="0x40460550"/>
        <function-ref name="clr" scoped="" ref="0x40460630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4045fac8" loc="42:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4045fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4045fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4045fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e010"/>
        <function-ref name="get" scoped="" ref="0x4045e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e1d0"/>
        <function-ref name="set" scoped="" ref="0x4045e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40722938" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40722938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40722b10"/>
        <function-ref name="isInput" scoped="" ref="0x40722bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40722cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40722db0"/>
        <function-ref name="get" scoped="" ref="0x40722e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40721010"/>
        <function-ref name="set" scoped="" ref="0x407210f0"/>
        <function-ref name="clr" scoped="" ref="0x407211d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407203b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407203b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40720588"/>
        <function-ref name="isInput" scoped="" ref="0x40720668"/>
        <function-ref name="toggle" scoped="" ref="0x40720748"/>
        <function-ref name="isOutput" scoped="" ref="0x40720828"/>
        <function-ref name="get" scoped="" ref="0x40720908"/>
        <function-ref name="makeOutput" scoped="" ref="0x407209e8"/>
        <function-ref name="set" scoped="" ref="0x40720ac8"/>
        <function-ref name="clr" scoped="" ref="0x40720ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4071fd70" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4071fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40734010"/>
        <function-ref name="isInput" scoped="" ref="0x407340f0"/>
        <function-ref name="toggle" scoped="" ref="0x407341d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407342b0"/>
        <function-ref name="get" scoped="" ref="0x40734390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40734470"/>
        <function-ref name="set" scoped="" ref="0x40734550"/>
        <function-ref name="clr" scoped="" ref="0x40734630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407337f8" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407337f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407339d0"/>
        <function-ref name="isInput" scoped="" ref="0x40733ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40733b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40733c70"/>
        <function-ref name="get" scoped="" ref="0x40733d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40733e30"/>
        <function-ref name="set" scoped="" ref="0x40733f10"/>
        <function-ref name="clr" scoped="" ref="0x40731010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40730228" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40730228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40730400"/>
        <function-ref name="isInput" scoped="" ref="0x407304e0"/>
        <function-ref name="toggle" scoped="" ref="0x407305c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407306a0"/>
        <function-ref name="get" scoped="" ref="0x40730780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40730860"/>
        <function-ref name="set" scoped="" ref="0x40730940"/>
        <function-ref name="clr" scoped="" ref="0x40730a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4072fc08" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4072fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4072fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4072e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4072e0f0"/>
        <function-ref name="get" scoped="" ref="0x4072e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072e2b0"/>
        <function-ref name="set" scoped="" ref="0x4072e390"/>
        <function-ref name="clr" scoped="" ref="0x4072e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4072d6c0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4072d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072d898"/>
        <function-ref name="isInput" scoped="" ref="0x4072d978"/>
        <function-ref name="toggle" scoped="" ref="0x4072da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4072db38"/>
        <function-ref name="get" scoped="" ref="0x4072dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072dcf8"/>
        <function-ref name="set" scoped="" ref="0x4072ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4072deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4072b0b0" loc="37:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4072b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072b288"/>
        <function-ref name="isInput" scoped="" ref="0x4072b368"/>
        <function-ref name="toggle" scoped="" ref="0x4072b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4072b528"/>
        <function-ref name="get" scoped="" ref="0x4072b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072b6e8"/>
        <function-ref name="set" scoped="" ref="0x4072b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4072b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045be60" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466050"/>
        <function-ref name="isInput" scoped="" ref="0x40466130"/>
        <function-ref name="toggle" scoped="" ref="0x40466210"/>
        <function-ref name="isOutput" scoped="" ref="0x404662f0"/>
        <function-ref name="get" scoped="" ref="0x404663d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404664b0"/>
        <function-ref name="set" scoped="" ref="0x40466590"/>
        <function-ref name="clr" scoped="" ref="0x40466670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404706c0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470898"/>
        <function-ref name="isInput" scoped="" ref="0x40470978"/>
        <function-ref name="toggle" scoped="" ref="0x40470a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40470b38"/>
        <function-ref name="get" scoped="" ref="0x40470c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470cf8"/>
        <function-ref name="set" scoped="" ref="0x40470dd8"/>
        <function-ref name="clr" scoped="" ref="0x40470eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046de98" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404780c0"/>
        <function-ref name="isInput" scoped="" ref="0x404781a0"/>
        <function-ref name="toggle" scoped="" ref="0x40478280"/>
        <function-ref name="isOutput" scoped="" ref="0x40478360"/>
        <function-ref name="get" scoped="" ref="0x40478440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478520"/>
        <function-ref name="set" scoped="" ref="0x40478600"/>
        <function-ref name="clr" scoped="" ref="0x404786e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404766c0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476898"/>
        <function-ref name="isInput" scoped="" ref="0x40476978"/>
        <function-ref name="toggle" scoped="" ref="0x40476a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40476b38"/>
        <function-ref name="get" scoped="" ref="0x40476c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476cf8"/>
        <function-ref name="set" scoped="" ref="0x40476dd8"/>
        <function-ref name="clr" scoped="" ref="0x40476eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40474e98" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40474e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4047e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e360"/>
        <function-ref name="get" scoped="" ref="0x4047e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e520"/>
        <function-ref name="set" scoped="" ref="0x4047e600"/>
        <function-ref name="clr" scoped="" ref="0x4047e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4047c6c0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4047c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c898"/>
        <function-ref name="isInput" scoped="" ref="0x4047c978"/>
        <function-ref name="toggle" scoped="" ref="0x4047ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4047cb38"/>
        <function-ref name="get" scoped="" ref="0x4047cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047ccf8"/>
        <function-ref name="set" scoped="" ref="0x4047cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4047ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4047af18" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4047af18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479108"/>
        <function-ref name="isInput" scoped="" ref="0x404791e8"/>
        <function-ref name="toggle" scoped="" ref="0x404792c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404793a8"/>
        <function-ref name="get" scoped="" ref="0x40479488"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479568"/>
        <function-ref name="set" scoped="" ref="0x40479648"/>
        <function-ref name="clr" scoped="" ref="0x40479728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40482718" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40482718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404828f0"/>
        <function-ref name="isInput" scoped="" ref="0x404829d0"/>
        <function-ref name="toggle" scoped="" ref="0x40482ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40482b90"/>
        <function-ref name="get" scoped="" ref="0x40482c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482d50"/>
        <function-ref name="set" scoped="" ref="0x40482e30"/>
        <function-ref name="clr" scoped="" ref="0x40482f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40480ec0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40480ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4047f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f360"/>
        <function-ref name="get" scoped="" ref="0x4047f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f520"/>
        <function-ref name="set" scoped="" ref="0x4047f600"/>
        <function-ref name="clr" scoped="" ref="0x4047f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404896c0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404896c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489898"/>
        <function-ref name="isInput" scoped="" ref="0x40489978"/>
        <function-ref name="toggle" scoped="" ref="0x40489a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40489b38"/>
        <function-ref name="get" scoped="" ref="0x40489c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489cf8"/>
        <function-ref name="set" scoped="" ref="0x40489dd8"/>
        <function-ref name="clr" scoped="" ref="0x40489eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40486e98" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40486e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404850c0"/>
        <function-ref name="isInput" scoped="" ref="0x404851a0"/>
        <function-ref name="toggle" scoped="" ref="0x40485280"/>
        <function-ref name="isOutput" scoped="" ref="0x40485360"/>
        <function-ref name="get" scoped="" ref="0x40485440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485520"/>
        <function-ref name="set" scoped="" ref="0x40485600"/>
        <function-ref name="clr" scoped="" ref="0x404856e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4048f6c0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4048f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f898"/>
        <function-ref name="isInput" scoped="" ref="0x4048f978"/>
        <function-ref name="toggle" scoped="" ref="0x4048fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4048fb38"/>
        <function-ref name="get" scoped="" ref="0x4048fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048fcf8"/>
        <function-ref name="set" scoped="" ref="0x4048fdd8"/>
        <function-ref name="clr" scoped="" ref="0x4048feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4048ce98" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4048ce98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b360"/>
        <function-ref name="get" scoped="" ref="0x4048b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b520"/>
        <function-ref name="set" scoped="" ref="0x4048b600"/>
        <function-ref name="clr" scoped="" ref="0x4048b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404956c0" loc="38:/home/user/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404956c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40495898"/>
        <function-ref name="isInput" scoped="" ref="0x40495978"/>
        <function-ref name="toggle" scoped="" ref="0x40495a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40495b38"/>
        <function-ref name="get" scoped="" ref="0x40495c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495cf8"/>
        <function-ref name="set" scoped="" ref="0x40495dd8"/>
        <function-ref name="clr" scoped="" ref="0x40495eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b1bf8" loc="61:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b1bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402fe440"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402fe440"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404af010" loc="62:/home/user/local/src/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404af1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404af2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404af3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x404af488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404af568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404c9808" loc="60:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404c9808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403d0a30" loc="57:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403d0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403d0c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404c9400" loc="59:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404c9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c95d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403d0dc8" loc="58:/home/user/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c9010"/>
        <function-ref name="taskLoop" scoped="" ref="0x404c90f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x404c91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403179c0" loc="48:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40317b98"/>
        <function-ref name="runTask" scoped="" ref="0x40317c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40315250" loc="47:/home/user/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40315250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40315428"/>
        <function-ref name="taskLoop" scoped="" ref="0x40315508"/>
        <function-ref name="runNextTask" scoped="" ref="0x403155e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40384100" loc="56:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40384100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403842d8"/>
        <function-ref name="runTask" scoped="" ref="0x403843b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40384d70" loc="57:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40384d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40383010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403858a8" loc="55:/home/user/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403858a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40385a80"/>
        <function-ref name="taskLoop" scoped="" ref="0x40385b60"/>
        <function-ref name="runNextTask" scoped="" ref="0x40385c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40399e88" loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40399e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40394070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4031c690" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4031c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4031c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40392370" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40392370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40392548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403cfe80" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403cfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b3070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b3150"/>
        <function-ref name="led1On" scoped="" ref="0x404b3230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b3310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b33f0"/>
        <function-ref name="get" scoped="" ref="0x404b34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x404b35b0"/>
        <function-ref name="led2Off" scoped="" ref="0x404b3930"/>
        <function-ref name="set" scoped="" ref="0x404b3690"/>
        <function-ref name="led0On" scoped="" ref="0x404b3770"/>
        <function-ref name="led2On" scoped="" ref="0x404b3850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404cb240" loc="50:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404cb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb418"/>
        <function-ref name="isInput" scoped="" ref="0x404cb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x404cb5d8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb6b8"/>
        <function-ref name="get" scoped="" ref="0x404cb798"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb878"/>
        <function-ref name="set" scoped="" ref="0x404cb958"/>
        <function-ref name="clr" scoped="" ref="0x404cba38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404cc1d8" loc="46:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404cc1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404cbc28" loc="51:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404cbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cbe00"/>
        <function-ref name="isInput" scoped="" ref="0x404cbee0"/>
        <function-ref name="toggle" scoped="" ref="0x404ca010"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca0f0"/>
        <function-ref name="get" scoped="" ref="0x404ca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca2b0"/>
        <function-ref name="set" scoped="" ref="0x404ca390"/>
        <function-ref name="clr" scoped="" ref="0x404ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404cc520" loc="47:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404cc520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404cc6f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404cc7d8"/>
        <function-ref name="led1On" scoped="" ref="0x404cc8b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404cc998"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404cca78"/>
        <function-ref name="get" scoped="" ref="0x404ccb58"/>
        <function-ref name="led1Off" scoped="" ref="0x404ccc38"/>
        <function-ref name="led2Off" scoped="" ref="0x404cb010"/>
        <function-ref name="set" scoped="" ref="0x404ccd18"/>
        <function-ref name="led0On" scoped="" ref="0x404ccdf8"/>
        <function-ref name="led2On" scoped="" ref="0x404cced8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404ca660" loc="52:/home/user/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404ca660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca838"/>
        <function-ref name="isInput" scoped="" ref="0x404ca918"/>
        <function-ref name="toggle" scoped="" ref="0x404ca9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404caad8"/>
        <function-ref name="get" scoped="" ref="0x404cabb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cac98"/>
        <function-ref name="set" scoped="" ref="0x404cad78"/>
        <function-ref name="clr" scoped="" ref="0x404cae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404e4978" loc="44:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404e4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4b50"/>
        <function-ref name="isInput" scoped="" ref="0x404e4c30"/>
        <function-ref name="toggle" scoped="" ref="0x404e4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4df0"/>
        <function-ref name="get" scoped="" ref="0x404e4ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3010"/>
        <function-ref name="set" scoped="" ref="0x404e30f0"/>
        <function-ref name="clr" scoped="" ref="0x404e31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404e33e0" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404e33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e35b8"/>
        <function-ref name="isInput" scoped="" ref="0x404e3698"/>
        <function-ref name="toggle" scoped="" ref="0x404e3778"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3858"/>
        <function-ref name="get" scoped="" ref="0x404e3938"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3a18"/>
        <function-ref name="set" scoped="" ref="0x404e3af8"/>
        <function-ref name="clr" scoped="" ref="0x404e3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404e27c0" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404e27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e2998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404e3de8" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404e3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2010"/>
        <function-ref name="isInput" scoped="" ref="0x404e20f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e22b0"/>
        <function-ref name="get" scoped="" ref="0x404e2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e2470"/>
        <function-ref name="set" scoped="" ref="0x404e2550"/>
        <function-ref name="clr" scoped="" ref="0x404e2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404e0660" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ButtonAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404e0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e6170"/>
        <function-ref name="fired" scoped="" ref="0x404df3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404dfb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x404df8a8"/>
        <function-ref name="getdt" scoped="" ref="0x405e6620"/>
        <function-ref name="gett0" scoped="" ref="0x405e63c8"/>
        <function-ref name="isRunning" scoped="" ref="0x404df650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404e0c88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404dfe20"/>
        <function-ref name="startOneShot" scoped="" ref="0x404e0f08"/>
        <function-ref name="stop" scoped="" ref="0x404df1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x404e9858" loc="49:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x404e9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f3368"/>
        <function-ref name="fired" scoped="" ref="0x404e65e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404e6cf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404e6a98"/>
        <function-ref name="getdt" scoped="" ref="0x404f3818"/>
        <function-ref name="gett0" scoped="" ref="0x404f35c0"/>
        <function-ref name="isRunning" scoped="" ref="0x404e6840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404e9e80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f3048"/>
        <function-ref name="startOneShot" scoped="" ref="0x404e6110"/>
        <function-ref name="stop" scoped="" ref="0x404e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x404ef938" loc="46:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x404ef938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404ed4c8"/>
        <function-ref name="fired" scoped="" ref="0x404ee768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404eee70"/>
        <function-ref name="isOneShot" scoped="" ref="0x404eec18"/>
        <function-ref name="getdt" scoped="" ref="0x404ed978"/>
        <function-ref name="gett0" scoped="" ref="0x404ed720"/>
        <function-ref name="isRunning" scoped="" ref="0x404ee9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404ee010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404ed1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ee290"/>
        <function-ref name="stop" scoped="" ref="0x404ee510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x404f8af0" loc="47:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x404f8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404fa200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404ef188" loc="45:/home/user/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404ef188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ef360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x405064c8" loc="29:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x405064c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40506c18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x404fb130"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40506e90"/>
        <function-ref name="overflow" scoped="" ref="0x404fb3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404f5290" loc="27:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404f5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f5468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x404fe9d8" loc="28:/home/user/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x404fe9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404fd010"/>
        <function-ref name="fired" scoped="" ref="0x40501718"/>
        <function-ref name="startAt" scoped="" ref="0x40501c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40501990"/>
        <function-ref name="getAlarm" scoped="" ref="0x404fd288"/>
        <function-ref name="start" scoped="" ref="0x40501200"/>
        <function-ref name="stop" scoped="" ref="0x405014a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4058fca8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4058fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4058d170"/>
        <function-ref name="fired" scoped="" ref="0x4058e928"/>
        <function-ref name="startAt" scoped="" ref="0x4058ee18"/>
        <function-ref name="isRunning" scoped="" ref="0x4058eba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4058d3e8"/>
        <function-ref name="start" scoped="" ref="0x4058e410"/>
        <function-ref name="stop" scoped="" ref="0x4058e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4058f870" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4058f870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402fe240"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402fe240"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4058d718" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4058d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4058de68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4058c388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4058c110"/>
        <function-ref name="overflow" scoped="" ref="0x4058c600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x407a94e0" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407a94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407a96b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407a9798"/>
        <function-ref name="getControlA" scoped="" ref="0x407a9878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407a9958"/>
        <function-ref name="setControlB" scoped="" ref="0x407a9a38"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407a9b18"/>
        <function-ref name="getControlB" scoped="" ref="0x407a9bf8"/>
        <function-ref name="setControlA" scoped="" ref="0x407a9cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407b0670" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407afb30"/>
        <function-ref name="fired" scoped="" ref="0x407af300"/>
        <function-ref name="startAt" scoped="" ref="0x407af7f0"/>
        <function-ref name="isRunning" scoped="" ref="0x407af578"/>
        <function-ref name="getAlarm" scoped="" ref="0x407afda8"/>
        <function-ref name="start" scoped="" ref="0x407b0dc0"/>
        <function-ref name="stop" scoped="" ref="0x407af088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407b0238" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407b0238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b0410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407ad130" loc="62:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407ad130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407ad880"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407add70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407adaf8"/>
        <function-ref name="overflow" scoped="" ref="0x407ac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x407a79a8" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407a79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407a7b80"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407a7c60"/>
        <function-ref name="controlABusy" scoped="" ref="0x407a7d40"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407a7e20"/>
        <function-ref name="countBusy" scoped="" ref="0x407a7f00"/>
        <function-ref name="compareABusy" scoped="" ref="0x407a6010"/>
        <function-ref name="getAssr" scoped="" ref="0x407a60f0"/>
        <function-ref name="setAssr" scoped="" ref="0x407a61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x407a9ec8" loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407a9ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407a7500"/>
        <function-ref name="fired" scoped="" ref="0x407a8a90"/>
        <function-ref name="get" scoped="" ref="0x407a8578"/>
        <function-ref name="reset" scoped="" ref="0x407a8d08"/>
        <function-ref name="isOn" scoped="" ref="0x407a7778"/>
        <function-ref name="set" scoped="" ref="0x407a87f0"/>
        <function-ref name="start" scoped="" ref="0x407a7010"/>
        <function-ref name="stop" scoped="" ref="0x407a7288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407ac300" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407ac300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407abd68"/>
        <function-ref name="test" scoped="" ref="0x407ab878"/>
        <function-ref name="get" scoped="" ref="0x407ac948"/>
        <function-ref name="setScale" scoped="" ref="0x407a9010"/>
        <function-ref name="getScale" scoped="" ref="0x407a92b0"/>
        <function-ref name="reset" scoped="" ref="0x407ab110"/>
        <function-ref name="overflow" scoped="" ref="0x407ace60"/>
        <function-ref name="isOn" scoped="" ref="0x407abaf0"/>
        <function-ref name="set" scoped="" ref="0x407acbc0"/>
        <function-ref name="start" scoped="" ref="0x407ab388"/>
        <function-ref name="stop" scoped="" ref="0x407ab600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4054dc80" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4054dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4054de58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4054c010"/>
        <function-ref name="getControlA" scoped="" ref="0x4054c0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4054c1d0"/>
        <function-ref name="setControlB" scoped="" ref="0x4054c2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4054c390"/>
        <function-ref name="getControlB" scoped="" ref="0x4054c470"/>
        <function-ref name="setControlA" scoped="" ref="0x4054c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4055a3c0" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4055a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4055a598"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4055a678"/>
        <function-ref name="controlABusy" scoped="" ref="0x4055a758"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4055a838"/>
        <function-ref name="countBusy" scoped="" ref="0x4055a918"/>
        <function-ref name="compareABusy" scoped="" ref="0x4055a9f8"/>
        <function-ref name="getAssr" scoped="" ref="0x4055aad8"/>
        <function-ref name="setAssr" scoped="" ref="0x4055abb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4054c878" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4054c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4055bdd0"/>
        <function-ref name="fired" scoped="" ref="0x4055b3f0"/>
        <function-ref name="get" scoped="" ref="0x4054cec0"/>
        <function-ref name="reset" scoped="" ref="0x4055b668"/>
        <function-ref name="isOn" scoped="" ref="0x4055a068"/>
        <function-ref name="set" scoped="" ref="0x4055b150"/>
        <function-ref name="start" scoped="" ref="0x4055b8e0"/>
        <function-ref name="stop" scoped="" ref="0x4055bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40552980" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40552980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4054d418"/>
        <function-ref name="test" scoped="" ref="0x4054ff08"/>
        <function-ref name="get" scoped="" ref="0x4054f010"/>
        <function-ref name="setScale" scoped="" ref="0x4054d690"/>
        <function-ref name="getScale" scoped="" ref="0x4054d930"/>
        <function-ref name="reset" scoped="" ref="0x4054f7a0"/>
        <function-ref name="overflow" scoped="" ref="0x4054f528"/>
        <function-ref name="isOn" scoped="" ref="0x4054d1a0"/>
        <function-ref name="set" scoped="" ref="0x4054f288"/>
        <function-ref name="start" scoped="" ref="0x4054fa18"/>
        <function-ref name="stop" scoped="" ref="0x4054fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40554bb8" loc="83:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40554bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40554d90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40554e70"/>
        <function-ref name="getControlA" scoped="" ref="0x40563010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405630f0"/>
        <function-ref name="setControlB" scoped="" ref="0x405631d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405632b0"/>
        <function-ref name="getControlB" scoped="" ref="0x40563390"/>
        <function-ref name="setControlA" scoped="" ref="0x40563470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405602c8" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405602c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405604a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40560728" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40560728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40560900"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405609e0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40560ac0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40560ba0"/>
        <function-ref name="countBusy" scoped="" ref="0x40560c80"/>
        <function-ref name="compareABusy" scoped="" ref="0x40560d60"/>
        <function-ref name="getAssr" scoped="" ref="0x40560e40"/>
        <function-ref name="setAssr" scoped="" ref="0x40560f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40563798" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40563798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40562ce8"/>
        <function-ref name="fired" scoped="" ref="0x40562308"/>
        <function-ref name="get" scoped="" ref="0x40563de0"/>
        <function-ref name="reset" scoped="" ref="0x40562580"/>
        <function-ref name="isOn" scoped="" ref="0x40560010"/>
        <function-ref name="set" scoped="" ref="0x40562068"/>
        <function-ref name="start" scoped="" ref="0x405627f8"/>
        <function-ref name="stop" scoped="" ref="0x40562a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405598e0" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405598e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40554350"/>
        <function-ref name="test" scoped="" ref="0x40555e30"/>
        <function-ref name="get" scoped="" ref="0x40559f28"/>
        <function-ref name="setScale" scoped="" ref="0x405545c8"/>
        <function-ref name="getScale" scoped="" ref="0x40554868"/>
        <function-ref name="reset" scoped="" ref="0x405556c8"/>
        <function-ref name="overflow" scoped="" ref="0x40555450"/>
        <function-ref name="isOn" scoped="" ref="0x405540d8"/>
        <function-ref name="set" scoped="" ref="0x405551b0"/>
        <function-ref name="start" scoped="" ref="0x40555940"/>
        <function-ref name="stop" scoped="" ref="0x40555bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x405b29a8" loc="63:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x405b29a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405b2b80"/>
        <function-ref name="runTask" scoped="" ref="0x405b2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405b4010" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405b24e0"/>
        <function-ref name="fired" scoped="" ref="0x405b4c78"/>
        <function-ref name="startAt" scoped="" ref="0x405b21a0"/>
        <function-ref name="isRunning" scoped="" ref="0x405b4ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405b2758"/>
        <function-ref name="start" scoped="" ref="0x405b4760"/>
        <function-ref name="stop" scoped="" ref="0x405b4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404f6c60" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404f6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405a4790"/>
        <function-ref name="fired" scoped="" ref="0x405a5a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405a4150"/>
        <function-ref name="isOneShot" scoped="" ref="0x405a5ed0"/>
        <function-ref name="getdt" scoped="" ref="0x405a4c40"/>
        <function-ref name="gett0" scoped="" ref="0x405a49e8"/>
        <function-ref name="isRunning" scoped="" ref="0x405a5c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405a52c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405a4470"/>
        <function-ref name="startOneShot" scoped="" ref="0x405a5548"/>
        <function-ref name="stop" scoped="" ref="0x405a57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x405df050" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x405df050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405df228"/>
        <function-ref name="runTask" scoped="" ref="0x405df308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x405d1e30" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x405d1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e0920"/>
        <function-ref name="fired" scoped="" ref="0x405d0bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405e02e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x405e0088"/>
        <function-ref name="getdt" scoped="" ref="0x405e0dd0"/>
        <function-ref name="gett0" scoped="" ref="0x405e0b78"/>
        <function-ref name="isRunning" scoped="" ref="0x405d0e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405d0468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405e0600"/>
        <function-ref name="startOneShot" scoped="" ref="0x405d06e8"/>
        <function-ref name="stop" scoped="" ref="0x405d0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405afa60" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405afa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405d1670"/>
        <function-ref name="fired" scoped="" ref="0x405d3840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405d1010"/>
        <function-ref name="isOneShot" scoped="" ref="0x405d3d10"/>
        <function-ref name="getdt" scoped="" ref="0x405d1b40"/>
        <function-ref name="gett0" scoped="" ref="0x405d18d8"/>
        <function-ref name="isRunning" scoped="" ref="0x405d3aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405d30b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405d1340"/>
        <function-ref name="startOneShot" scoped="" ref="0x405d3348"/>
        <function-ref name="stop" scoped="" ref="0x405d35d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405de460" loc="37:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405de460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405deaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x405dedf8" loc="38:/home/user/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405dedf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405dd570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405dda60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405dd7e8"/>
        <function-ref name="overflow" scoped="" ref="0x405ddcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405e53d8" loc="45:/home/user/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ButtonAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405e53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40352350"/>
            <typename><typedef-ref name="TMilli" ref="0x40352518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e4ec8"/>
        <function-ref name="fired" scoped="" ref="0x405e4180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405e4888"/>
        <function-ref name="isOneShot" scoped="" ref="0x405e4630"/>
        <function-ref name="getdt" scoped="" ref="0x405e33a8"/>
        <function-ref name="gett0" scoped="" ref="0x405e3150"/>
        <function-ref name="isRunning" scoped="" ref="0x405e43d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405e5a00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405e4ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x405e5c80"/>
        <function-ref name="stop" scoped="" ref="0x405e5f00"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x403a9770" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x403a9770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x403b7f00" loc="125:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x403b0d20" loc="72:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x403afe78" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403afb30" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403afd18" loc="103:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x403af688" loc="87:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x403b6888" loc="140:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x403b6358" loc="133:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x403af1c8" loc="81:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x403a9dc8" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403a9c70" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x403b78e0" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403b7598" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403b7780" loc="118:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x403b0488" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403b0330" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403b0958" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4002ee70" loc="60:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403b8650" loc="44:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b8a38" loc="45:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403bcea8" loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403c1268" loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403b8280" loc="43:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b8e10" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403bc768" loc="40:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403bcaf8" loc="41:/home/user/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403ad678" loc="61:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403adac0" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403ac010" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403ac880" loc="83:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403aa580" loc="100:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403aaa28" loc="117:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403ac438" loc="77:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b2188" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403b2030" loc="134:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403ad250" loc="56:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403acd00" loc="89:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403aa138" loc="94:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/home/user/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403ce158" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403d1010" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403d2dd8" loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403d35c0" loc="31:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bfd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403d3bf8" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403d3aa0" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403d22d8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403d2180" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403d2830" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40313658" loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40315010" loc="72:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40313a98" loc="65:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40318f20" loc="67:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40319a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40317450" loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/user/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40384b98" loc="76:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/user/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/user/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40399b28" loc="62:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4033fbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403920f8" loc="52:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/user/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404f8310" loc="42:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404f8310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404f87f0" loc="50:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/home/user/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401c0400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404fdb58" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404fdb58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404fdcc0" loc="46:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404fdcc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405071c8" loc="53:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404fdcc0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40507bf0" loc="65:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405076f0" loc="60:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40506038" loc="71:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404f5c28" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404f5c28"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404f5d90" loc="45:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404fe070" loc="98:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40500d28" loc="67:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x404ffa00" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404ff6b0" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          </variable>
          <variable name="dt" ref="0x404ff8a0" loc="92:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404ff1a8" loc="77:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x404fe500" loc="105:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405003e8" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40500290" loc="55:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404f5d90"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405008c8" loc="62:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/home/user/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40523158" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40524700" loc="85:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40517328" loc="79:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40524cc0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40524b68" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40524290" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40524138" loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40523720" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405235c8" loc="90:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40517778" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40517cf0" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40517b98" loc="81:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x40528dd0" loc="92:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40529ae8" loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x40529f10" loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x40528410" loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405272b0" loc="98:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x405288f0" loc="86:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40529010" loc="57:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40529608" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405294b0" loc="63:/home/user/local/src/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403699e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40369c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40519780" loc="32:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40519780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x4051f6a8" loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40520650" loc="49:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40519c78" loc="39:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40519780"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40520a58" loc="53:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4051fb08" loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40520210" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40519780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405200b8" loc="45:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40519780"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40520e60" loc="56:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4051f280" loc="59:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405113e8" loc="46:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405113e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4051cba0" loc="89:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4051c310" loc="78:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405118d8" loc="52:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405113e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4051b168" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4051b010" loc="95:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4051b5f8" loc="101:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bf708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405106c8" loc="66:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405102a8" loc="61:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4051c778" loc="84:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402fa398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40511e50" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405113e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40511cf8" loc="58:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405113e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40510ad0" loc="69:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40510ec8" loc="72:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/home/user/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
